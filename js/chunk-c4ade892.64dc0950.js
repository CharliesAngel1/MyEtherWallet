(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-c4ade892"],{6379:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getEthBalance"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"hash"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getEthBalance"},arguments:[{kind:"Argument",name:{kind:"Name",value:"owner"},value:{kind:"Variable",name:{kind:"Name",value:"hash"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]}]}}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getLatestPrices"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getLatestPrices"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contract"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"current_price"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"market_cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total_volume"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"price_change_percentage_24h"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total_supply"},arguments:[],directives:[]}]}}]}},{kind:"OperationDefinition",operation:"subscription",name:{kind:"Name",value:"subscribeToAccountBalance"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"owner"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"event"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AddressEventType"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressEvent"},arguments:[{kind:"Argument",name:{kind:"Name",value:"owner"},value:{kind:"Variable",name:{kind:"Name",value:"owner"}}},{kind:"Argument",name:{kind:"Name",value:"event"},value:{kind:"Variable",name:{kind:"Name",value:"event"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"blockNumber"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:448}};n.loc.source={body:"query getEthBalance($hash: String!) {\n  getEthBalance(owner: $hash) {\n    balance\n  }\n}\n\nquery getLatestPrices {\n  getLatestPrices {\n    id\n    symbol\n    name\n    image\n    contract\n    current_price\n    market_cap\n    total_volume\n    price_change_percentage_24h\n    total_supply\n  }\n}\n\nsubscription subscribeToAccountBalance(\n  $owner: String!\n  $event: AddressEventType!\n) {\n  addressEvent(owner: $owner, event: $event) {\n    blockNumber\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function i(e,t){if("FragmentSpread"===e.kind)t.add(e.name.value);else if("VariableDefinition"===e.kind){var n=e.type;"NamedType"===n.kind&&t.add(n.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){i(e,t)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){i(e,t)})),e.definitions&&e.definitions.forEach((function(e){i(e,t)}))}var a={};function s(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}function r(e,t){var n={kind:e.kind,definitions:[s(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var i=a[t]||new Set,r=new Set,o=new Set;i.forEach((function(e){o.add(e)}));while(o.size>0){var c=o;o=new Set,c.forEach((function(e){if(!r.has(e)){r.add(e);var t=a[e]||new Set;t.forEach((function(e){o.add(e)}))}}))}return r.forEach((function(t){var i=s(e,t);i&&n.definitions.push(i)})),n}(function(){n.definitions.forEach((function(e){if(e.name){var t=new Set;i(e,t),a[e.name.value]=t}}))})(),e.exports=n,e.exports["getEthBalance"]=r(n,"getEthBalance"),e.exports["getLatestPrices"]=r(n,"getLatestPrices"),e.exports["subscribeToAccountBalance"]=r(n,"subscribeToAccountBalance")},"6b64":function(e,t,n){"use strict";var i=n("2f62"),a=n("6379"),s=n("9b88");t["a"]={name:"HandlerWallet",data(){return{getLatestPrices:"",tokensData:{}}},apollo:{getLatestPrices:{query:a["getLatestPrices"],pollInterval:6e5,result({data:e}){this.tokensData=new Map,e&&e.getLatestPrices&&(e.getLatestPrices.forEach(e=>{this.tokensData.set(e.id,e)}),this.setCoinGeckoTokens(this.tokensData))},error(e){Object(s["e"])(e.message,{},s["a"])}}},methods:{...Object(i["b"])("external",["setCoinGeckoTokens"])}}},"80e0":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"wallet-main"},[n("the-wallet-side-menu"),n("v-main",[n("v-container",{staticClass:"pa-2 pa-md-3 mb-14",attrs:{fluid:""}},[n("the-wallet-header"),e.address?n("module-confirmation"):e._e(),e.isOfflineApp?e._e():n("the-enkrypt-popup",{attrs:{show:e.walletEnkryptPopup}}),n("router-view"),n("survey-banner",{attrs:{show:!e.neverShowSurveyBanner}})],1)],1),n("the-wallet-footer",{attrs:{"is-offline-app":e.isOfflineApp}}),e.isOfflineApp?e._e():n("enkrypt-promo-snackbar"),n("module-paper-wallet",{attrs:{open:e.showPaperWallet,close:e.closePaperWallet,"is-offline-app":e.isOfflineApp},on:{close:e.closePaperWallet}})],1)},a=[],s=(n("14d9"),n("2f62")),r=n("5ba3"),o=n("99e5"),c=n.n(o),l=n("c1df"),d=n.n(l),u=n("2ef0"),h=n("6b64"),k=n("fbdf"),p=n("9b88"),m=n("e425"),b=n("db3a"),f=n("5965"),w=n("07db"),v=n("068e"),N=n("217a"),g=n("a03b"),y=n("7466"),S={components:{TheWalletSideMenu:()=>n.e("chunk-46576d00").then(n.bind(null,"64ba")),TheWalletHeader:()=>n.e("chunk-6e40df5f").then(n.bind(null,"0aac")),TheWalletFooter:()=>n.e("chunk-e21cc328").then(n.bind(null,"fb54")),ModuleConfirmation:()=>n.e("chunk-76f668e3").then(n.bind(null,"022b")),EnkryptPromoSnackbar:()=>n.e("chunk-6ef6f9a6").then(n.bind(null,"4ac7")),TheEnkryptPopup:()=>n.e("chunk-7c9b9356").then(n.bind(null,"d413")),ModulePaperWallet:()=>n.e("chunk-754e6490").then(n.bind(null,"6da0")),SurveyBanner:()=>n.e("chunk-f7faf1ba").then(n.bind(null,"c15a"))},mixins:[h["a"],f["a"]],data(){return{showPaperWallet:!1}},computed:{...Object(s["e"])("wallet",["address","web3","identifier","isOfflineApp","instance"]),...Object(s["e"])("global",["online","gasPriceType","baseGasPrice","darkMode"]),...Object(s["e"])("external",["coinGeckoTokens"]),...Object(s["e"])("popups",["enkryptWalletPopup","enkryptLandingPopup","enkryptLandingPopupClosed","neverShowSurveyBanner"]),...Object(s["c"])("global",["network","gasPrice","isEIP1559SupportedNetwork"]),...Object(s["c"])("wallet",["balanceInWei"]),walletEnkryptPopup(){return!this.enkryptLandingPopup&&d()(new Date).diff(this.enkryptLandingPopupClosed,"hours")>=24&&this.enkryptWalletPopup}},watch:{address(e){e?(this.setup(),this.setTokensAndBalance()):this.$router.push({name:b["a"].HOME.NAME})},network(){this.online&&!this.isOfflineApp&&(this.web3.eth.clearSubscriptions(),this.identifier===N["a"].WEB3_WALLET?this.setWeb3Instance(window.ethereum):this.setWeb3Instance(),this.setup(),this.identifier!==N["a"].WEB3_WALLET&&this.setTokensAndBalance())},coinGeckoTokens(e,t){Object(u["isEqual"])(e,t)||this.setTokensAndBalance()}},mounted(){this.$vuetify.theme.dark=this.darkMode,this.trackUserVersion("6.7.4"),v["a"].$on("openPaperWallet",()=>{this.showPaperWallet=!0,this.$router.push({name:b["b"].PRINT.NAME})}),this.online&&!this.isOfflineApp&&(this.setup(),this.setTokensAndBalance(),this.identifier===N["a"].WEB3_WALLET&&this.web3Listeners(),this.checkNetwork()),"walletConnect"===this.instance.identifier&&this.instance.connection.on("session_update",()=>{this.instance.connection.sendAsync({method:"eth_requestAccounts"},(e,t)=>{if(t[0].toLowerCase()!==this.address.toLowerCase()){const e=new g["a"](Object(y["a"])(t[0]),this.instance.isHardware,this.instance.identifier,this.instance.txSigner,this.instance.msgSigner,this.instance.connection,this.instance.errorHandler,this.instance.meta);this.setWallet([e])}})})},beforeDestroy(){v["a"].$off("openPaperWallet"),this.online&&!this.isOfflineApp&&this.web3.eth.clearSubscriptions(),window.ethereum&&window.ethereum.removeListener instanceof Function&&(this.findAndSetNetwork instanceof Function&&window.ethereum.removeListener("chainChanged",this.findAndSetNetwork),this.setWeb3Account instanceof Function&&window.ethereum.removeListener("accountsChanged",this.setWeb3Account))},methods:{...Object(s["b"])("wallet",["setBlockNumber","setTokens","setWallet","setWeb3Instance"]),...Object(s["b"])("global",["setNetwork","setBaseFeePerGas","updateGasPrice","setValidNetwork"]),...Object(s["b"])("external",["setTokenAndEthBalance","setNetworkTokens"]),closePaperWallet(){this.showPaperWallet&&this.$router.go(-1),this.showPaperWallet=!1},setup(){this.processNetworkTokens(),this.subscribeToBlockNumber()},async checkNetwork(){const e=await Object(w["a"])(this.network.type.chainID,this.identifier);this.setValidNetwork(e)},processNetworkTokens(){this.network.type.tokens.then(e=>{const t=new Map;e.forEach(e=>{t.set(e.address.toLowerCase(),e)}),this.setNetworkTokens(t)})},setTokensAndBalance(){var e;null!==(e=this.coinGeckoTokens)&&void 0!==e&&e.get?this.setTokenAndEthBalance():this.setTokens([])},checkAndSetBaseFee(e){e?this.setBaseFeePerGas(Object(r["toBN"])(e)):this.setBaseFeePerGas(Object(r["toBN"])("0")),this.updateGasPrice()},subscribeToBlockNumber:Object(u["debounce"])((function(){this.web3.eth.getBlockNumber().then(e=>{this.setBlockNumber(e),this.web3.eth.getBlock(e).then(e=>{e&&this.checkAndSetBaseFee(e.baseFeePerGas),this.web3.eth.subscribe("newBlockHeaders").on("data",e=>{this.isEIP1559SupportedNetwork&&e.baseFeePerGas&&this.checkAndSetBaseFee(Object(r["toBN"])(e.baseFeePerGas)),this.setBlockNumber(e.number)}).on("error",e=>{Object(p["e"])(e&&"Load failed"===e.message?"eth_subscribe is not supported. Please make sure your provider supports eth_subscribe":"Network Subscription Error: Please wait a few seconds before continuing.",{},p["a"])})})})}),500),web3Listeners(){var e;null!==(e=window.ethereum)&&void 0!==e&&e.on&&(window.ethereum.on("chainChanged",this.findAndSetNetwork),window.ethereum.on("accountsChanged",this.setWeb3Account))},async findAndSetNetwork(){if(window.ethereum&&this.instance.identifier===N["a"].WEB3_WALLET){var e;const n=await(null===(e=window.ethereum)||void 0===e?void 0:e.request({method:"eth_chainId"})),i=Object.values(k["a"]).find(e=>{if(Object(r["toBN"])(n).eq(Object(r["toBN"])(e[0].type.chainID)))return e});if(window.ethereum.isMetaMask)try{i?(await this.setNetwork({network:i[0],walletType:this.instance.identifier}),await this.setWeb3Instance(window.ethereum),this.setTokensAndBalance(),this.setValidNetwork(!0),this.trackNetworkSwitch(i[0].type.name),this.$emit("newNetwork"),Object(p["e"])("Switched network to: "+i[0].type.name,{},p["d"])):(this.setValidNetwork(!1),Object(p["e"])("Current wallet's network is unsupported",{},p["a"]))}catch(t){Object(p["e"])("There was an error switching networks",{},p["a"])}else Object(p["e"])("Can't find matching nodes for selected MetaMask node! MetaMask may not function properly. Please select a supported node",{},p["f"])}},setWeb3Account(e){const t=new c.a(window.ethereum),n=new m["g"](e[0]);this.setWallet([n,t.currentProvider])}}},P=S,T=(n("88cf"),n("2877")),A=Object(T["a"])(P,i,a,!1,null,"6c3e3c6f",null);t["default"]=A.exports},"88cf":function(e,t,n){"use strict";n("9bee")},"9bee":function(e,t,n){}}]);
//# sourceMappingURL=../sourcemaps/js/chunk-c4ade892.64dc0950.js.map
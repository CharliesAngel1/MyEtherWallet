{"version":3,"sources":["webpack:///./src/modules/send/errors.js","webpack:///./src/modules/send/handlers/handlerSend.js","webpack:///./src/modules/send/ModuleSend.vue?d154","webpack:///./node_modules/core-js/modules/web.url.to-json.js","webpack:///./src/modules/send/ModuleSend.vue?9ceb","webpack:///src/modules/send/ModuleSend.vue","webpack:///./src/modules/send/ModuleSend.vue?4e9d","webpack:///./src/modules/send/ModuleSend.vue","webpack:///./src/core/helpers/addressUtils.js","webpack:///./src/modules/send/ModuleSend.vue?e965"],"names":["INVALID_TO_ADDRESS","INVALID_FROM_ADDRESS","INVALID_DATA_HEX","NEGATIVE_VALUE","SendTransaction","constructor","this","$store","vuexStore","Object","assign","mapState","mapGetters","currency","localGasPrice","TX","from","to","destination","nonce","gasPrice","gas","value","destinationValue","data","setTo","_to","_type","isAddress","ErrorList","toDetails","_setTo","isToken","toChecksumAddress","contract","setFrom","_from","_setGasPrice","toHex","toBN","setGasLimit","_gasLimit","setLocalGasPrice","setValue","_value","isNaN","isNull","_valueBN","BigNumber","lt","toFixed","_setValue","setData","getTokenTransferABI","_data","isHexStrict","SanitizeHex","setNonce","_nonce","setCurrency","_currency","getEntireBal","balance","gasPriceBN","fee","mul","gt","sub","txFee","estimateGas","address","web3","eth","MAIN_TOKEN_ADDRESS","hasEnoughBalance","amount","hasAmountToken","lte","toBNSafe","hasGas","add","_toAddress","jsonInterface","constant","inputs","name","type","outputs","payable","stateMutability","Web3Contract","methods","transfer","toLowerCase","encodeABI","getTransactionCount","gasLimit","_tx","Transaction","fromTxData","json","toJSON","sendTransaction","e","helpers","hasValidDecimals","$","call","target","proto","enumerable","URL","prototype","toString","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","selectedBalance","showSelectedBalance","ref","staticStyle","tokens","selectedCurrency","on","amountErrorMessage","title","disabled","disableSwapBtn","method","setEntireBal","buyMoreStr","openBuySell","val","setAmount","nativeOn","$event","preventCharE","currencyName","_e","setAddress","txFeeIsReady","feeError","totalCost","hasEnoughEth","isFromNetworkCurrency","handleLocalGasPrice","expandPanel","openedPanels","closeToggle","_v","defaultGasLimit","_s","formattedDefaultGasLimit","$t","gasLimitError","directives","rawName","expression","dataRules","dataInvalidHexMessage","verifyHexFormat","apply","arguments","model","callback","$$v","proxy","isDisabledNextBtn","send","clear","staticRenderFns","components","ModuleAddressBook","SendLowBalanceNotice","AppButtonBalance","AppTransactionFee","mixins","props","prefilledAmount","default","prefilledData","prefilledAddress","prefilledGasLimit","toAddress","sendTx","isValidAddress","userInputType","toggleTitle","amountError","gasEstimationError","gasEstimationIsReady","selectedMax","computed","plus","showBalanceNotice","item","tokensList","hasNoEth","text","linkText","link","imgs","total","divider","selectLabel","header","isValidAmount","isValidGasLimit","isEthNetwork","multiwatch","txFeeETH","currencyDecimals","getCalculatedAmount","allValidInputs","actualGasPrice","isValidForGas","watch","isPrefilled","handler","deep","immediate","network","mounted","created","localGasPriceWatcher","setAmountError","setGasLimitError","setSendTransaction","estimateAndSetGas","then","catch","window","submitTransaction","Toast","prefillForm","undefined","convertToDisplay","isEmpty","component","chainId","store","getters","chainID","ROOTSTOCK","test","isValidChecksumAddress","utils","toChecksumAddr"],"mappings":"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0CAGA,SACA,CACAF,oBACAG,mBACAC,gCACAC,WACAC,gBAEA,CACAC,uBAEA,GAEA,kBACA,UACA,CACAA,2BAEA,IAGA,GAGAjF,qBAAA,MACA,6FACA,wBACA,kBAOAkF,gBAAA,MAEA,wBAGA,yFAIA,wBAIA,gCACA,YACA,mCAGAC,kBACA,wBAEAxK,0BACAA,2BACA8B,0EAKAyF,YACA,OACAjJ,GACA,8BAIAkJ,wBACA,qBACA,wBAEA,oCACA,GAEA,oBAEAiD,eACA,+CAEAzL,UAAA,MACA,kFACA,uBAGA0L,aACA,OACA,YACA,oBACA,UACA,uBACA,yBAGAC,WACA,yCAEAC,mBAAA,MACA,kFACA,+BACA,IAEArE,YAAA,MACA,IACA,gCACA,YACA,QADA,EACA,sDAGA,UACA,0DACA,kCACAvG,mCACA,YAEAoB,QACA,4BACA,kEAEA,KAOAiF,eACA,iDAEAwE,sBACA,wEAEAC,iBACA,+CAEA,oBACA,gCACA,sBAKAC,iBACA,iDACA,8BAEA,oCAEA9D,2BACA,6CAEAzB,iBACA,4FACA,gCAIAwF,gBACA,OACA,aACA,sBACA,oBACA,sBAIAC,OACAP,aACA,qBACA,4BAGAQ,cACA,oBAEArB,YACAsB,oBACA,yCACA,aACA,gDAGAC,QACAC,cAEArC,YACA,qBACA,sDAGArH,UAEA,qBACA,oBACA,+CAEA,oBACA,2BACA,+CACA,6BAEAwD,kBACAgG,oBACA,cACA,2BACA,6BACA,2BACA,+CACA,sCACA,oCAEA,gBAEAE,aACAD,SAEA5M,OACA,4BACA,qEAEAwE,YACA,sBACA,uCAEA,sBACA,gCAEAsI,UACA,cAEAhK,UACA,aACA,+BAEAqJ,YACA,4EAGAY,UACA,0BACA,qCACA,yCACA,+CACA,mDAEAC,UACA,sDACA,0BACA,KACA,mDACA,wBACA,KACA,oDACA,oBACA,0BAEA,MAEA7I,SACA8I,wBAAA,MACA,iCACA,6FACA,iDAGA,kBACA,uBACA,yCACAtB,yBACA,uBACA,yCACArJ,UAEA,qBAGA2G,kBACA,gDACA,8CACA,eACA,6CAMAS,QACA,qCACA,gCACA,kBACA,yCACA,iBACA,uBACA,gBACA,eACA,sBACA,6BACA,sBACA,oBACA,2BACA,6BACA,uBAGA,0BACA,qCACA,+CACA,yCAKArB,cACA,uBACA,mCACA,uCAQA6E,kBACA,QACA,aACA,6CAEA,2DACA,gCACApN,EACA,gCAGA,0CACA,kCACA,gDACA,GACA,8BAEA,oBAGA,6BAQAqN,oBACA,EACA,cACA,sDACA,cACA,2DACA,2DACA,2DAEA,sBAGA,+BAGAvF,kBACA,iBACA,sBACA,sBAEAwF,qBACA,iCACA,wBAEAC,oBACA,6BACA,gEACA,+CAEA,YACAxK,cACAyK,SACA,2CACA,kDACA,qCACA,2BACA,2BACA,+BAEAC,UACA,kCACA,gCAGA9D,OACA+D,qBACA,YACAC,oBACAH,UACA,eAEAC,UACA,aACA,eACAG,+BAIAC,cACA,qBACA,yBACA,wBACA,4DAEAC,EACA,+EACA,iCACA,qCACA,qCACA,+CACA,qCACAF,kEACA,wBAGAG,sBACA,qCACA,2CAEA3G,eACA,GACA4G,6CACA,wCACA,CACA,oDACA,gDAEA,eACA,sBACA,8BACA,iCAEA,IAIAxG,+CACA,aACA,6BACA,qBACA,KACAtG,eACA,iBAEAmB,eACA,wBACA,iBAEA+F,uBACA,qBACA,iCAEAT,gBACA,mCCv0BmW,I,kCCS/VsG,EAAY,eACd,EACArI,EACAiE,GACA,EACA,KACA,WACA,MAIa,aAAAoE,E,sLCZf,MAAM3N,EAAY0C,IAChB,MAAMkL,EAAUC,OAAMC,QAAQ,kBAAkBpK,KAAKqK,QAErD,OAAIH,IAAYI,eAAUD,UAEnB,uBAAuBE,KAAKvL,QAI/B,yBAAyBuL,KAAKvL,KAC9B,yBAAyBuL,KAAKvL,KAMzBwL,oCAAuBxL,EAASkL,IAIvClL,GAAWC,IAAKwL,MAAMxM,YAAYe,IAAYC,IAAKwL,MAAMnO,UAAU0C,IAGjErC,EAAoBqC,IACxB,MAAMkL,EAAUC,OAAMC,QAAQ,kBAAkBpK,KAAKqK,QAErD,OAAIH,IAAYI,eAAUD,QACjBK,+BAAe1L,EAASkL,GAG1BjL,IAAKwL,MAAM9N,kBAAkBqC,K,kCCtCtC","file":"js/chunk-88fce3a6.3f98736b.js","sourcesContent":["export default {\n  INVALID_TO_ADDRESS: 'Invalid to address',\n  INVALID_FROM_ADDRESS: 'Invalid from address',\n  INVALID_DATA_HEX: 'Invalid hex string for data',\n  NEGATIVE_VALUE: 'negative value'\n};\n","import { toBN, toHex, toChecksumAddress, isHexStrict } from 'web3-utils';\nimport { isAddress } from '@/core/helpers/addressUtils';\nimport SanitizeHex from '@/core/helpers/sanitizeHex';\nimport { Transaction } from '@ethereumjs/tx';\nimport { mapState, mapGetters } from 'vuex';\nimport vuexStore from '@/core/store';\nimport ErrorList from '../errors';\nimport Web3Contract from 'web3-eth-contract';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport hasValidDecimals from '@/core/helpers/hasValidDecimals.js';\nimport { isNull } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { toBNSafe } from '@/core/helpers/numberFormatHelper';\n\nclass SendTransaction {\n  constructor() {\n    this.$store = vuexStore;\n    Object.assign(this, mapState('wallet', ['balance', 'web3', 'address']));\n    Object.assign(this, mapGetters('global', ['network']));\n    this.currency = null;\n    this.localGasPrice = '0';\n    this.TX = {\n      from: '0x',\n      to: '0x',\n      destination: '0x',\n      nonce: '0x',\n      gasPrice: '0x',\n      gas: '0x5208', //21000\n      value: '0x',\n      destinationValue: '0x',\n      data: '0x'\n    };\n  }\n  setTo(_to, _type) {\n    if (isAddress(_to)) {\n      this.TX.destination = _to;\n      this.TX.toDetails = _type;\n    } else throw ErrorList.INVALID_TO_ADDRESS;\n  }\n  _setTo() {\n    this.TX.to = this.isToken()\n      ? toChecksumAddress(this.currency.contract)\n      : toChecksumAddress(this.TX.destination);\n  }\n  setFrom(_from) {\n    if (isAddress(_from)) this.TX.from = _from;\n    else throw ErrorList.INVALID_FROM_ADDRESS;\n  }\n  _setGasPrice() {\n    this.TX.gasPrice = toHex(toBN(this.localGasPrice));\n  }\n  setGasLimit(_gasLimit) {\n    this.TX.gas = toHex(toBN(_gasLimit));\n  }\n  setLocalGasPrice(gasPrice) {\n    this.localGasPrice = toHex(toBN(gasPrice));\n  }\n  setValue(_value) {\n    if (isNaN(_value) || isNull(_value)) _value = 0;\n    const _valueBN = new BigNumber(_value);\n    if (!_valueBN.lt(0)) this.TX.destinationValue = toHex(_valueBN.toFixed());\n    else throw ErrorList.NEGATIVE_VALUE;\n  }\n  _setValue() {\n    if (this.isToken()) {\n      this.TX.value = '0x00';\n      this.setData(\n        this.getTokenTransferABI(this.TX.destinationValue, this.TX.destination)\n      );\n    } else {\n      this.TX.value = toHex(toBN(this.TX.destinationValue));\n    }\n  }\n  setData(_data) {\n    if (isHexStrict(_data)) this.TX.data = SanitizeHex(_data);\n    else throw ErrorList.INVALID_DATA_HEX;\n  }\n  setNonce(_nonce) {\n    this.TX.nonce = toHex(toBN(_nonce));\n  }\n  setCurrency(_currency) {\n    this.currency = _currency;\n    this.TX.data = '0x';\n  }\n  getEntireBal() {\n    if (this.isToken()) {\n      return this.currency.balance;\n    }\n    const gasPriceBN = toBN(this.localGasPrice);\n    const fee = gasPriceBN.mul(toBN(this.TX.gas));\n    return this.balance().gt(this.balance().sub(fee))\n      ? this.balance().sub(fee)\n      : 0;\n  }\n  txFee() {\n    return toBN(this.localGasPrice).mul(toBN(this.TX.gas));\n  }\n  estimateGas() {\n    if (this.address()) this.setFrom(this.address());\n    this._setTo();\n    this._setValue();\n    this._setGasPrice();\n    return this.web3().eth.estimateGas({\n      data: this.TX.data,\n      from: this.TX.from,\n      to: this.TX.to,\n      value: this.TX.value\n    });\n  }\n  isToken() {\n    return this.currency?.contract !== MAIN_TOKEN_ADDRESS;\n  }\n  hasEnoughBalance() {\n    const amount = toBN(this.TX.destinationValue);\n    if (this.isToken() && this.currency.balance) {\n      const hasAmountToken = amount.lte(toBNSafe(this.currency.balance));\n      const hasGas = this.txFee().lte(this.balance());\n      return hasAmountToken && hasGas;\n    }\n    return amount.add(this.txFee()).lte(this.balance());\n  }\n  getTokenTransferABI(amount, _toAddress) {\n    amount = toBN(amount);\n    const jsonInterface = [\n      {\n        constant: false,\n        inputs: [\n          { name: '_to', type: 'address' },\n          { name: '_amount', type: 'uint256' }\n        ],\n        name: 'transfer',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function'\n      }\n    ];\n    const contract = new Web3Contract(jsonInterface);\n    return contract.methods\n      .transfer(_toAddress.toLowerCase(), amount)\n      .encodeABI();\n  }\n  async submitTransaction() {\n    try {\n      this._setTo();\n      this._setValue();\n      this._setGasPrice();\n      const nonce = await this.web3().eth.getTransactionCount(this.address());\n      this.setNonce(nonce);\n      this.TX.gasLimit = this.TX.gas;\n      const _tx = Transaction.fromTxData(this.TX);\n      const json = _tx.toJSON(true);\n      json.from = this.address();\n      json.toDetails = this.TX.toDetails;\n      return this.web3().eth.sendTransaction(json);\n    } catch (e) {\n      return e;\n    }\n  }\n}\nSendTransaction.helpers = {\n  hasValidDecimals\n};\nexport default SendTransaction;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=style&index=1&id=1d4888e3&prod&lang=scss&\"","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return call(URL.prototype.toString, this);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-module',{staticClass:\"d-flex flex-grow-1 pt-6 bgWalletBlock module-send\",attrs:{\"title\":\"Send\",\"has-elevation\":true,\"has-indicator\":true},scopedSlots:_vm._u([{key:\"moduleBody\",fn:function(){return [_c('v-row',{staticClass:\"mt-5\"},[_c('v-col',{staticClass:\"pr-sm-1 pt-0 pb-0 pb-sm-4\",attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('div',{staticClass:\"position--relative\"},[_c('app-button-balance',{staticClass:\"d-sm-none\",attrs:{\"balance\":_vm.selectedBalance,\"loading\":!_vm.showSelectedBalance}}),_c('mew-select',{ref:\"mewSelect\",staticStyle:{\"height\":\"62px\"},attrs:{\"label\":\"Token\",\"items\":_vm.tokens,\"is-custom\":true,\"value\":_vm.selectedCurrency},on:{\"input\":_vm.setCurrency}})],1)]),_c('v-col',{staticClass:\"pl-sm-1 pt-0 pb-2 pb-sm-4\",attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('div',{staticClass:\"position--relative\"},[_c('app-button-balance',{staticClass:\"d-none d-sm-block\",attrs:{\"balance\":_vm.selectedBalance,\"loading\":!_vm.showSelectedBalance}}),_c('mew-input',{staticClass:\"AmountInput\",attrs:{\"label\":\"Amount\",\"value\":_vm.amount,\"type\":\"number\",\"placeholder\":\"0\",\"persistent-hint\":true,\"error-messages\":_vm.amountErrorMessage,\"max-btn-obj\":{\n              title: 'Max',\n              disabled: _vm.disableSwapBtn,\n              method: _vm.setEntireBal\n            },\"buy-more-str\":_vm.buyMoreStr},on:{\"buyMore\":_vm.openBuySell,\"input\":function (val) { return _vm.setAmount(val, false); }},nativeOn:{\"keydown\":function($event){return _vm.preventCharE($event)}}})],1)]),(_vm.showBalanceNotice)?_c('v-col',{staticClass:\"pt-0 pb-4\",attrs:{\"cols\":\"12\"}},[_c('send-low-balance-notice',{staticClass:\"pa-3\",attrs:{\"address\":_vm.address,\"currency-name\":_vm.currencyName}})],1):_vm._e(),_c('v-col',{staticClass:\"pt-4 pb-2\",attrs:{\"cols\":\"12\"}},[_c('module-address-book',{ref:\"addressInput\",staticClass:\"AddressInput\",attrs:{\"currency\":_vm.currencyName},on:{\"setAddress\":_vm.setAddress}})],1),_c('v-col',{staticClass:\"py-0 mb-8\",attrs:{\"cols\":\"12\"}},[_c('app-transaction-fee',{attrs:{\"show-fee\":_vm.showSelectedBalance,\"getting-fee\":!_vm.txFeeIsReady,\"error\":_vm.feeError,\"total-cost\":_vm.totalCost,\"tx-fee\":_vm.txFee,\"total-gas-limit\":_vm.gasLimit,\"message\":_vm.feeError,\"not-enough-eth\":!_vm.hasEnoughEth,\"from-eth\":_vm.isFromNetworkCurrency},on:{\"onLocalGasPrice\":_vm.handleLocalGasPrice}})],1),_c('v-col',{staticClass:\"py-4\",attrs:{\"cols\":\"12\"}},[_c('mew-expand-panel',{ref:\"expandPanel\",attrs:{\"panel-items\":_vm.expandPanel,\"idx-to-expand\":_vm.openedPanels},on:{\"toggled\":_vm.closeToggle},scopedSlots:_vm._u([{key:\"panelBody1\",fn:function(){return [_c('div',{staticClass:\"px-5\"},[_c('div',{staticClass:\"pa-5 warning greyPrimary--text border-radius--5px mb-8\"},[_c('div',{staticClass:\"d-flex font-weight-bold mb-2 textDark--text\"},[_c('v-icon',{staticClass:\"textDark--text mew-body mr-1\"},[_vm._v(\" mdi-alert-outline\")]),_vm._v(\"For advanced users only \")],1),_c('div',{staticClass:\"textDark--text\"},[_vm._v(\" Please don't edit these fields unless you are an expert user & know what you're doing. Entering the wrong information could result in your transaction failing or getting stuck. \")])]),_c('div',{staticClass:\"d-flex align-center justify-end pb-3\"},[_c('div',{staticClass:\"mew-body greenPrimary--text cursor--pointer\",on:{\"click\":function($event){return _vm.setGasLimit(_vm.defaultGasLimit)}}},[_vm._v(\" Reset to default: \"+_vm._s(_vm.formattedDefaultGasLimit)+\" \")])]),_c('mew-input',{attrs:{\"value\":_vm.gasLimit,\"label\":_vm.$t('common.gas.limit'),\"placeholder\":\"\",\"error-messages\":_vm.gasLimitError,\"type\":\"number\"},on:{\"input\":_vm.setGasLimit}}),_c('mew-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isToken),expression:\"!isToken\"}],ref:\"dataInput\",staticClass:\"mb-8\",attrs:{\"label\":_vm.$t('sendTx.add-data'),\"placeholder\":\"0x...\",\"rules\":_vm.dataRules,\"error-messages\":_vm.dataInvalidHexMessage,\"hide-clear-btn\":_vm.data === '0x'},nativeOn:{\"keyup\":function($event){return _vm.verifyHexFormat.apply(null, arguments)},\"focusout\":function($event){return _vm.verifyHexFormat.apply(null, arguments)}},model:{value:(_vm.data),callback:function ($$v) {_vm.data=$$v},expression:\"data\"}})],1)]},proxy:true}])})],1)],1),_c('div',{staticClass:\"d-flex flex-column mt-12\"},[_c('div',{staticClass:\"text-center\"},[_c('mew-button',{staticClass:\"SendButton\",attrs:{\"title\":\"Next\",\"has-full-width\":false,\"btn-size\":\"xlarge\",\"disabled\":_vm.isDisabledNextBtn},nativeOn:{\"click\":function($event){return _vm.send()}}})],1),_c('div',{staticClass:\"text-center mt-4\"},[_c('mew-button',{attrs:{\"title\":_vm.$t('common.clear-all'),\"has-full-width\":false,\"btn-size\":\"small\",\"btn-style\":\"transparent\"},nativeOn:{\"click\":function($event){return _vm.clear()}}})],1)])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <mew-module\n    class=\"d-flex flex-grow-1 pt-6 bgWalletBlock module-send\"\n    title=\"Send\"\n    :has-elevation=\"true\"\n    :has-indicator=\"true\"\n  >\n    <template #moduleBody>\n      <!-- ===================================================================================== -->\n      <!-- Tokens / Amount to Swap / Token Balance -->\n      <!-- ===================================================================================== -->\n      <v-row class=\"mt-5\">\n        <v-col cols=\"12\" sm=\"6\" class=\"pr-sm-1 pt-0 pb-0 pb-sm-4\">\n          <div class=\"position--relative\">\n            <app-button-balance\n              :balance=\"selectedBalance\"\n              :loading=\"!showSelectedBalance\"\n              class=\"d-sm-none\"\n            />\n            <mew-select\n              ref=\"mewSelect\"\n              style=\"height: 62px\"\n              label=\"Token\"\n              :items=\"tokens\"\n              :is-custom=\"true\"\n              :value=\"selectedCurrency\"\n              @input=\"setCurrency\"\n            />\n          </div>\n        </v-col>\n        <v-col cols=\"12\" sm=\"6\" class=\"pl-sm-1 pt-0 pb-2 pb-sm-4\">\n          <div class=\"position--relative\">\n            <app-button-balance\n              :balance=\"selectedBalance\"\n              :loading=\"!showSelectedBalance\"\n              class=\"d-none d-sm-block\"\n            />\n            <mew-input\n              label=\"Amount\"\n              :value=\"amount\"\n              type=\"number\"\n              placeholder=\"0\"\n              :persistent-hint=\"true\"\n              :error-messages=\"amountErrorMessage\"\n              :max-btn-obj=\"{\n                title: 'Max',\n                disabled: disableSwapBtn,\n                method: setEntireBal\n              }\"\n              :buy-more-str=\"buyMoreStr\"\n              class=\"AmountInput\"\n              @keydown.native=\"preventCharE($event)\"\n              @buyMore=\"openBuySell\"\n              @input=\"val => setAmount(val, false)\"\n            />\n          </div>\n        </v-col>\n\n        <!-- ===================================================================================== -->\n        <!-- Low Balance Notice -->\n        <!-- ===================================================================================== -->\n        <v-col v-if=\"showBalanceNotice\" cols=\"12\" class=\"pt-0 pb-4\">\n          <send-low-balance-notice\n            :address=\"address\"\n            :currency-name=\"currencyName\"\n            class=\"pa-3\"\n          />\n        </v-col>\n\n        <!-- ===================================================================================== -->\n        <!-- Input Address -->\n        <!-- ===================================================================================== -->\n        <v-col cols=\"12\" class=\"pt-4 pb-2\">\n          <module-address-book\n            ref=\"addressInput\"\n            class=\"AddressInput\"\n            :currency=\"currencyName\"\n            @setAddress=\"setAddress\"\n          />\n        </v-col>\n\n        <!-- ===================================================================================== -->\n        <!-- Network Fee (Note: comes with mt-5(20px) mb-8(32px))) -->\n        <!-- ===================================================================================== -->\n        <v-col cols=\"12\" class=\"py-0 mb-8\">\n          <app-transaction-fee\n            :show-fee=\"showSelectedBalance\"\n            :getting-fee=\"!txFeeIsReady\"\n            :error=\"feeError\"\n            :total-cost=\"totalCost\"\n            :tx-fee=\"txFee\"\n            :total-gas-limit=\"gasLimit\"\n            :message=\"feeError\"\n            :not-enough-eth=\"!hasEnoughEth\"\n            :from-eth=\"isFromNetworkCurrency\"\n            @onLocalGasPrice=\"handleLocalGasPrice\"\n          />\n        </v-col>\n\n        <!-- ===================================================================================== -->\n        <!-- Advanced: -->\n        <!-- ===================================================================================== -->\n        <v-col cols=\"12\" class=\"py-4\">\n          <mew-expand-panel\n            ref=\"expandPanel\"\n            :panel-items=\"expandPanel\"\n            :idx-to-expand=\"openedPanels\"\n            @toggled=\"closeToggle\"\n          >\n            <template #panelBody1>\n              <div class=\"px-5\">\n                <!-- Warning Sheet -->\n                <div\n                  class=\"pa-5 warning greyPrimary--text border-radius--5px mb-8\"\n                >\n                  <div class=\"d-flex font-weight-bold mb-2 textDark--text\">\n                    <v-icon class=\"textDark--text mew-body mr-1\">\n                      mdi-alert-outline</v-icon\n                    >For advanced users only\n                  </div>\n                  <div class=\"textDark--text\">\n                    Please don't edit these fields unless you are an expert user\n                    & know what you're doing. Entering the wrong information\n                    could result in your transaction failing or getting stuck.\n                  </div>\n                </div>\n                <div class=\"d-flex align-center justify-end pb-3\">\n                  <div\n                    class=\"mew-body greenPrimary--text cursor--pointer\"\n                    @click=\"setGasLimit(defaultGasLimit)\"\n                  >\n                    Reset to default: {{ formattedDefaultGasLimit }}\n                  </div>\n                </div>\n\n                <mew-input\n                  :value=\"gasLimit\"\n                  :label=\"$t('common.gas.limit')\"\n                  placeholder=\"\"\n                  :error-messages=\"gasLimitError\"\n                  type=\"number\"\n                  @input=\"setGasLimit\"\n                />\n\n                <mew-input\n                  v-show=\"!isToken\"\n                  ref=\"dataInput\"\n                  v-model=\"data\"\n                  :label=\"$t('sendTx.add-data')\"\n                  placeholder=\"0x...\"\n                  :rules=\"dataRules\"\n                  :error-messages=\"dataInvalidHexMessage\"\n                  :hide-clear-btn=\"data === '0x'\"\n                  class=\"mb-8\"\n                  @keyup.native=\"verifyHexFormat\"\n                  @focusout.native=\"verifyHexFormat\"\n                />\n              </div>\n            </template>\n          </mew-expand-panel>\n        </v-col>\n      </v-row>\n\n      <div class=\"d-flex flex-column mt-12\">\n        <div class=\"text-center\">\n          <mew-button\n            title=\"Next\"\n            :has-full-width=\"false\"\n            btn-size=\"xlarge\"\n            :disabled=\"isDisabledNextBtn\"\n            class=\"SendButton\"\n            @click.native=\"send()\"\n          />\n        </div>\n        <div class=\"text-center mt-4\">\n          <mew-button\n            :title=\"$t('common.clear-all')\"\n            :has-full-width=\"false\"\n            btn-size=\"small\"\n            btn-style=\"transparent\"\n            @click.native=\"clear()\"\n          />\n        </div>\n      </div>\n    </template>\n  </mew-module>\n</template>\n\n<script>\nimport { fromWei, isHexStrict } from 'web3-utils';\nimport { debounce, isEmpty, isNumber } from 'lodash';\nimport { mapGetters, mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\n\nimport { ETH } from '@/utils/networks/types';\nimport { Toast, ERROR, WARNING } from '@/modules/toast/handler/handlerToast';\n\nimport {\n  formatIntegerToString,\n  toBNSafe\n} from '@/core/helpers/numberFormatHelper';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport buyMore from '@/core/mixins/buyMore.mixin.js';\nimport { fromBase, toBase } from '@/core/helpers/unit';\n\nimport SendTransaction from '@/modules/send/handlers/handlerSend';\n\nexport default {\n  components: {\n    ModuleAddressBook: () => import('@/modules/address-book/ModuleAddressBook'),\n    SendLowBalanceNotice: () => import('./components/SendLowBalanceNotice.vue'),\n    AppButtonBalance: () => import('@/core/components/AppButtonBalance'),\n    AppTransactionFee: () => import('@/core/components/AppTransactionFee.vue')\n  },\n  mixins: [buyMore],\n  props: {\n    prefilledAmount: {\n      type: String,\n      default: '0'\n    },\n    prefilledData: {\n      type: String,\n      default: '0x'\n    },\n    prefilledAddress: {\n      type: String,\n      default: ''\n    },\n    prefilledGasLimit: {\n      type: String,\n      default: '21000'\n    }\n  },\n  data() {\n    return {\n      gasLimit: '21000',\n      toAddress: '',\n      sendTx: null,\n      isValidAddress: false,\n      amount: '0',\n      selectedCurrency: {},\n      data: '0x',\n      userInputType: '',\n      expandPanel: [\n        {\n          name: this.$t('common.advanced'),\n          toggleTitle: 'Gas Limit & Data'\n        }\n      ],\n      openedPanels: [],\n      defaultGasLimit: '21000',\n      gasLimitError: '',\n      amountError: '',\n      gasEstimationError: '',\n      gasEstimationIsReady: false,\n      localGasPrice: '0',\n      selectedMax: false\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'instance']),\n    ...mapState('global', ['preferredCurrency']),\n    ...mapGetters('global', [\n      'network',\n      'gasPrice',\n      'isEthNetwork',\n      'swapLink',\n      'getFiatValue'\n    ]),\n    ...mapGetters('wallet', ['balanceInETH', 'tokensList']),\n    ...mapGetters('custom', ['hasCustom', 'customTokens', 'hiddenTokens']),\n    isFromNetworkCurrency() {\n      return this.selectedCurrency?.symbol === this.currencyName;\n    },\n    isDisabledNextBtn() {\n      return (\n        this.feeError !== '' ||\n        !this.isValidGasLimit ||\n        !this.allValidInputs ||\n        !this.gasEstimationIsReady ||\n        !isHexStrict(this.data)\n      );\n    },\n    buyMoreStr() {\n      return this.isEthNetwork &&\n        MAIN_TOKEN_ADDRESS === this.selectedCurrency?.contract &&\n        this.amountError === 'Not enough balance to send!'\n        ? this.network.type.canBuy\n          ? 'Buy more.'\n          : ''\n        : '';\n    },\n    hasEnoughEth() {\n      // Check whether user has enough eth to cover tx fee + amount to send\n      if (this.selectedCurrency?.contract === MAIN_TOKEN_ADDRESS) {\n        return BigNumber(this.amount)\n          .plus(this.txFeeETH)\n          .lte(this.balanceInETH);\n      }\n      // Check whether user has enough eth to cover tx fee + user has enough token balance for the amount to send\n      return BigNumber(this.balanceInETH).gte(this.txFeeETH);\n    },\n    feeError() {\n      return !this.hasEnoughEth\n        ? `Not enough ${this.currencyName} to cover network fee.`\n        : '';\n    },\n    showSelectedBalance() {\n      return (\n        !isEmpty(this.selectedCurrency) &&\n        this.selectedCurrency.text !== 'Select Token'\n      );\n    },\n    currencyName() {\n      return this.network.type.currencyName;\n    },\n    showBalanceNotice() {\n      const isZero = BigNumber(this.balanceInETH).lte(0);\n      const isLessThanTxFee =\n        BigNumber(this.balanceInETH).gt(0) &&\n        BigNumber(this.txFeeETH).gt(this.balanceInETH);\n\n      if (isZero || isLessThanTxFee) {\n        return true;\n      }\n\n      return false;\n    },\n    selectedBalance() {\n      if (this.selectedCurrency?.balance) {\n        const balance = this.convertToDisplay(\n          this.selectedCurrency.balance,\n          this.selectedCurrency.decimals\n        );\n        return BigNumber(balance).toString();\n      }\n      return '0';\n    },\n    /**\n     * Gets tokens from token list\n     * Formats each token to be used in mew-select\n     */\n    tokens() {\n      // no ref copy\n      const tokensList = this.tokensList.slice().filter(t => {\n        return !t.isHidden;\n      });\n      const customTokens = this.customTokens.reduce((arr, item) => {\n        // Check if token is in hiddenTokens\n        const isHidden = this.hiddenTokens.find(token => {\n          return item.contract == token.address;\n        });\n        item.decimals = BigNumber(item.decimals).toNumber();\n        if (!isHidden) arr.push(item);\n        return arr;\n      }, []);\n      const imgs = tokensList.map(item => {\n        item.totalBalance = this.getFiatValue(item.usdBalancef);\n        item.tokenBalance = item.balancef;\n        item.price = this.getFiatValue(item.pricef);\n        item.subtext = item.name;\n        item.value = item.contract;\n        item.name = item.symbol;\n        return item.img;\n      });\n      BigNumber(this.balanceInETH).lte(0)\n        ? tokensList.unshift({\n            hasNoEth: true,\n            disabled: true,\n            text: 'Your wallet is empty.',\n            linkText: this.isEthNetwork ? 'Buy ETH' : '',\n            link: this.isEthNetwork ? this.swapLink : ''\n          })\n        : null;\n      const returnedArray = [\n        {\n          text: 'Select Token',\n          imgs: imgs.splice(0, 5),\n          total: `${this.tokensList.length}`,\n          divider: true,\n          selectLabel: true\n        },\n        {\n          header: 'My Wallet'\n        },\n        ...tokensList\n      ];\n      if (customTokens.length > 0) {\n        return returnedArray.concat([\n          {\n            header: 'Custom Tokens'\n          },\n          ...customTokens\n        ]);\n      }\n      return returnedArray;\n    },\n    /* Property returns either gas estimmation error or amount error*/\n    amountErrorMessage() {\n      return this.gasEstimationError !== '' && this.sendTx?.hasEnoughBalance()\n        ? this.gasEstimationError\n        : this.amountError;\n    },\n    /**\n     * Property checks if user input valid amount\n     * Results to false if amount is empty, amount is negative, has invalid decimal points\n     * @returns {boolean} true or false based on above params\n     */\n    isValidAmount() {\n      /** !amount */\n      if (!this.amount) {\n        return false;\n      }\n      if (!isNumber(this.selectedCurrency?.decimals)) {\n        return false;\n      }\n      /** amount is negative */\n      if (BigNumber(this.amount).lt(0)) {\n        return false;\n      }\n      /** return amount has valid decimals */\n      return SendTransaction.helpers.hasValidDecimals(\n        this.amount,\n        this.selectedCurrency.decimals\n      );\n    },\n    isValidGasLimit() {\n      if (this.gasLimit) {\n        return (\n          BigNumber(this.gasLimit).gt(0) &&\n          BigNumber(this.gasLimit).dp() < 1 &&\n          toBNSafe(this.gasLimit).gte(toBNSafe(this.defaultGasLimit))\n        );\n      }\n      return false;\n    },\n    dataRules() {\n      return [\n        value => {\n          return isHexStrict(value);\n        }\n      ];\n    },\n    dataInvalidHexMessage() {\n      if (this.data === '') {\n        return 'Data cannot be empty!';\n      }\n      if (isHexStrict(this.data)) {\n        return '';\n      }\n      return 'Invalid hex data';\n    },\n    isEthNetwork() {\n      return this.network.type.name === ETH.name;\n    },\n    isToken() {\n      if (this.sendTx && this.selectedCurrency?.contract)\n        return this.sendTx.isToken();\n      return false;\n    },\n    multiwatch() {\n      return (\n        this.amount,\n        this.isValidAddress,\n        this.data,\n        this.selectedCurrency,\n        new Date().getTime() / 1000\n      );\n    },\n    txFeeETH() {\n      return fromWei(this.txFee);\n    },\n    currencyDecimals() {\n      return this.selectedCurrency?.hasOwnProperty('decimals')\n        ? this.selectedCurrency.decimals\n        : 18;\n    },\n    totalCost() {\n      if (\n        !SendTransaction.helpers.hasValidDecimals(\n          this.amount,\n          this.selectedCurrency?.decimals\n        )\n      )\n        return '0';\n      const amountToWei = toBase(this.amount, this.currencyDecimals);\n      return this.isFromNetworkCurrency\n        ? BigNumber(this.txFee).plus(amountToWei).toString()\n        : this.txFee;\n    },\n    txFee() {\n      if (this.isValidGasLimit) {\n        return this.actualGasPrice.mul(toBNSafe(this.gasLimit)).toString();\n      }\n      return '0';\n    },\n    /**\n     * Computed property determines whether or not show the loading state of the fee\n     * Fee is loaded when: invalid amount, invalid gas limit\n     * @return {boolean} true of false based on the above params\n     */\n    txFeeIsReady() {\n      return this.isValidAmount && this.isValidGasLimit;\n    },\n    getCalculatedAmount() {\n      return toBase(this.amount ? this.amount : 0, this.currencyDecimals);\n    },\n    allValidInputs() {\n      if (this.sendTx && this.sendTx.currency) {\n        return (\n          this.isValidAmount &&\n          this.sendTx.hasEnoughBalance() &&\n          this.isValidAddress\n        );\n      }\n      return false;\n    },\n    actualGasPrice() {\n      if (toBNSafe(this.localGasPrice).eqn(0)) {\n        return toBNSafe(this.gasPrice);\n      }\n      return toBNSafe(this.localGasPrice);\n    },\n    formattedDefaultGasLimit() {\n      return formatIntegerToString(this.defaultGasLimit);\n    },\n    disableSwapBtn() {\n      if (!isEmpty(this.sendTx) && !isEmpty(this.selectedCurrency)) {\n        return !this.sendTx.hasEnoughBalance();\n      }\n      return true;\n    },\n    isValidForGas() {\n      return (\n        this.sendTx &&\n        this.sendTx.currency &&\n        this.isValidAmount &&\n        this.isValidAddress\n      );\n    }\n  },\n  watch: {\n    multiwatch() {\n      if (this.allValidInputs) {\n        this.debounceEstimateGas();\n      }\n    },\n    isPrefilled() {\n      this.prefillForm();\n    },\n    tokensList: {\n      handler: function (val) {\n        this.selectedCurrency = val.length > 0 ? val[0] : {};\n        if (this.sendTx) {\n          this.sendTx.setCurrency(this.selectedCurrency);\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    toAddress() {\n      if (this.isValidAddress) {\n        this.sendTx.setTo(this.toAddress, this.userInputType);\n      }\n    },\n    amount(newVal) {\n      // make sure amount never becomes null\n      if (!newVal) this.amount = '0';\n      if (this.isValidAmount) {\n        this.sendTx.setValue(this.getCalculatedAmount);\n      }\n      this.amountError = '';\n      this.gasEstimationError = '';\n      if (this.isValidForGas) this.debounceEstimateGas();\n      this.debounceAmountError(newVal);\n    },\n    selectedCurrency: {\n      handler: function (newVal) {\n        if (this.sendTx) {\n          this.sendTx.setCurrency(newVal);\n          this.gasEstimationIsReady = false;\n          this.gasEstimationError = '';\n          if (this.isValidForGas) this.debounceEstimateGas();\n          this.debounceAmountError(this.amount);\n          this.gasLimit = this.defaultGasLimit;\n        }\n        this.data = '0x';\n      },\n      immediate: true,\n      deep: true\n    },\n    data() {\n      if (!this.data) this.data = '0x';\n      if (isHexStrict(this.data)) this.sendTx.setData(this.data);\n    },\n    gasLimit(newVal) {\n      if (this.isValidGasLimit) {\n        this.sendTx.setGasLimit(this.gasLimit);\n      }\n      this.gasLimitError = '';\n      this.debouncedGasLimitError(newVal);\n    },\n    network() {\n      this.clear();\n    },\n    address() {\n      this.clear();\n      this.debounceAmountError('0');\n    },\n    txFeeETH(newVal) {\n      if (!isEmpty(this.selectedCurrency)) this.localGasPriceWatcher(newVal);\n    }\n  },\n  mounted() {\n    this.setSendTransaction();\n    this.gasLimit = this.prefilledGasLimit;\n    this.selectedCurrency = this.tokensList[0];\n    this.sendTx.setCurrency(this.selectedCurrency);\n    this.sendTx.setLocalGasPrice(this.actualGasPrice);\n  },\n  created() {\n    this.debouncedGasLimitError = debounce(value => {\n      this.setGasLimitError(value);\n    }, 1000);\n    this.debounceAmountError = debounce(value => {\n      this.setAmountError(value);\n    }, 1000);\n    this.debounceEstimateGas = debounce(() => {\n      if (this.isValidForGas) {\n        this.estimateAndSetGas();\n      }\n    }, 500);\n  },\n  methods: {\n    localGasPriceWatcher(newVal) {\n      const total = BigNumber(newVal).plus(this.amount);\n      const amt = toBase(this.amount, this.selectedCurrency?.decimals);\n      const balance = toBNSafe(this.selectedCurrency.balance);\n\n      if (\n        (this.selectedMax &&\n          this.selectedCurrency &&\n          this.selectedCurrency.contract === MAIN_TOKEN_ADDRESS &&\n          total.gt(this.balanceInETH)) ||\n        (this.selectedCurrency &&\n          this.selectedCurrency.contract !== MAIN_TOKEN_ADDRESS &&\n          balance.lt(amt))\n      ) {\n        this.setEntireBal();\n      }\n    },\n    verifyHexFormat() {\n      this.$refs.dataInput._data.inputValue = this.data;\n      if (!this.data || isEmpty(this.data)) {\n        this.data = '0x';\n        this.$refs.dataInput._data.inputValue = '0x';\n      }\n    },\n    /**\n     * Resets values to default\n     */\n    clear() {\n      if (this.$refs && this.$refs.addressInput)\n        this.$refs.addressInput.clear();\n      this.toAddress = '';\n      this.selectedCurrency = this.tokensList[0];\n      this.sendTx = null;\n      this.isValidAddress = false;\n      this.amount = '0';\n      this.data = '0x';\n      this.userInputType = '';\n      this.defaultGasLimit = '21000';\n      this.gasLimitError = '';\n      this.amountError = '';\n      this.gasEstimationError = '';\n      this.gasEstimationIsReady = false;\n      this.localGasPrice = '0';\n\n      // resets the defaults on mount\n      this.setSendTransaction();\n      this.gasLimit = this.prefilledGasLimit;\n      this.sendTx.setCurrency(this.selectedCurrency);\n      this.handleLocalGasPrice(this.gasPrice);\n    },\n    /**\n     * Method sets gas limit to default when Advanced closed , ONLY IF gasLimit was invalid\n     */\n    closeToggle() {\n      if (!this.isValidGasLimit) {\n        this.gasLimit = this.defaultGasLimit;\n        this.setGasLimitError(this.gasLimit);\n      }\n    },\n    /**\n     * Method sets amountError based on the user input\n     * Has to be set manualy and debouned otherwise error message is not displayed when tokens are switched and amount input component is out of focus\n     * @param value {string}\n     */\n    setAmountError(value) {\n      if (value) {\n        if (BigNumber(value).lt(0)) {\n          this.amountError = \"Amount can't be negative!\";\n        } else if (\n          this.selectedCurrency?.decimals &&\n          !SendTransaction.helpers.hasValidDecimals(\n            value,\n            this.selectedCurrency.decimals\n          )\n        ) {\n          this.amountError = 'Invalid decimal points';\n        } else if (this.sendTx && this.sendTx.currency) {\n          this.amountError = this.sendTx.hasEnoughBalance()\n            ? ''\n            : 'Not enough balance to send!';\n        } else {\n          this.amountError = '';\n        }\n      } else {\n        this.amountError = 'Required';\n      }\n    },\n    /**\n     * Method sets gasLimitError based on the user input\n     * Has to be set manualy and debouned otherwise error message is not displayed when tokens are switched and gas limit input component is out of focus\n     * @param value {string}\n     */\n    setGasLimitError(value) {\n      if (value) {\n        if (BigNumber(value).lte(0))\n          this.gasLimitError = 'Gas limit must be greater than 0';\n        else if (BigNumber(value).dp() > 0)\n          this.gasLimitError = 'Gas limit can not have decimal points';\n        else if (toBNSafe(value).lt(toBNSafe(this.defaultGasLimit)))\n          this.gasLimitError = 'Amount too low. Transaction will fail';\n        else {\n          this.gasLimitError = '';\n        }\n      } else {\n        this.gasLimitError = 'Required';\n      }\n    },\n    setAddress(addr, isValidAddress, userInputType) {\n      this.toAddress = addr;\n      this.isValidAddress = isValidAddress;\n      this.userInputType = userInputType;\n    },\n    setSendTransaction() {\n      this.localGasPrice = this.gasPrice;\n      this.sendTx = new SendTransaction();\n    },\n    estimateAndSetGas() {\n      this.gasEstimationIsReady = false;\n      if (this.selectedCurrency.contract !== this.sendTx.currency.contract) {\n        this.sendTx.setCurrency(this.selectedCurrency);\n      }\n      this.sendTx\n        .estimateGas()\n        .then(res => {\n          this.gasLimit = toBNSafe(res).toString();\n          this.defaultGasLimit = toBNSafe(res).toString();\n          this.setGasLimitError(this.gasLimit);\n          this.sendTx.setGasLimit(res);\n          this.gasEstimationError = '';\n          this.gasEstimationIsReady = true;\n        })\n        .catch(e => {\n          this.gasEstimationError = e.message;\n          this.gasEstimationIsReady = false;\n        });\n    },\n    send() {\n      window.scrollTo(0, 0);\n      this.sendTx\n        .submitTransaction()\n        .then(() => {\n          this.clear();\n        })\n        .catch(error => {\n          this.clear();\n          if (!this.instance) {\n            Toast(error, {}, ERROR);\n          }\n        });\n    },\n    prefillForm() {\n      if (this.isPrefilled) {\n        const foundToken = this.tokensymbol\n          ? this.tokensList.find(item => {\n              return item.name.toLowerCase() === this.tokenSymbol.toLowerCase();\n            })\n          : undefined;\n        this.data = isHexStrict(this.prefilledData) ? this.prefilledData : '0x';\n        this.amount = this.prefilledAmount;\n        this.toAddress = this.prefilledAddress;\n        this.gasLimit = this.prefilledGasLimit;\n        this.selectedCurrency = foundToken ? foundToken : this.selectedCurrency;\n        this.$refs.expandPanel.setToggle(true);\n        Toast(this.$t('sendTx.prefilled-warning'), {}, WARNING, 1000);\n        this.clearPrefilled();\n      }\n    },\n    convertToDisplay(amount, decimals) {\n      const amt = toBNSafe(amount).toString();\n      return decimals ? fromBase(amt, decimals).toString() : amt;\n    },\n    setEntireBal() {\n      if (\n        isEmpty(this.selectedCurrency) ||\n        this.selectedCurrency.contract === MAIN_TOKEN_ADDRESS\n      ) {\n        const amt = BigNumber(this.balanceInETH).minus(this.txFeeETH);\n        this.setAmount(amt.lt(0) ? '0' : amt.toFixed(), true);\n      } else {\n        this.setAmount(\n          this.convertToDisplay(\n            this.selectedCurrency.balance,\n            this.selectedCurrency.decimals\n          ),\n          true\n        );\n      }\n    },\n    setAmount: debounce(function (val, max) {\n      const value = val ? val : 0;\n      this.amount = BigNumber(value).toFixed();\n      this.selectedMax = max;\n    }, 500),\n    setGasLimit(value) {\n      this.gasLimit = value;\n    },\n    setCurrency(value) {\n      this.selectedCurrency = value;\n      this.amount = '0';\n    },\n    handleLocalGasPrice(e) {\n      this.localGasPrice = e;\n      this.sendTx.setLocalGasPrice(e);\n    },\n    preventCharE(e) {\n      if (e.key === 'e') e.preventDefault();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.border-bottom {\n  border-bottom: 2px dotted #f5f5f5;\n}\n\n.balance-container {\n  top: -15px;\n  position: absolute;\n  right: 15px;\n}\n</style>\n\n<style lang=\"scss\">\n.module-send .mew-input .v-input__slot {\n  height: 56px !important;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleSend.vue?vue&type=template&id=1d4888e3&scoped=true&\"\nimport script from \"./ModuleSend.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleSend.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModuleSend.vue?vue&type=style&index=0&id=1d4888e3&prod&lang=scss&scoped=true&\"\nimport style1 from \"./ModuleSend.vue?vue&type=style&index=1&id=1d4888e3&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1d4888e3\",\n  null\n  \n)\n\nexport default component.exports","import web3 from 'web3';\nimport store from '@/core/store';\nimport { ROOTSTOCK } from '@/utils/networks/types';\nimport {\n  toChecksumAddress as toChecksumAddr,\n  isValidChecksumAddress\n} from 'ethereumjs-util';\n\nconst isAddress = address => {\n  const chainId = store.getters['global/network'].type.chainID;\n\n  if (chainId === ROOTSTOCK.chainID) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n      return false;\n      // If it's ALL lowercase or ALL upppercase\n    } else if (\n      /^(0x|0X)?[0-9a-f]{40}$/.test(address) ||\n      /^(0x|0X)?[0-9A-F]{40}$/.test(address)\n    ) {\n      return true;\n      // Otherwise check each case\n    }\n\n    return isValidChecksumAddress(address, chainId);\n  }\n\n  return (\n    address && web3.utils.isHexStrict(address) && web3.utils.isAddress(address)\n  );\n};\nconst toChecksumAddress = address => {\n  const chainId = store.getters['global/network'].type.chainID;\n  // Use EIP-1191 Address Checksum if its Rootstock network\n  if (chainId === ROOTSTOCK.chainID) {\n    return toChecksumAddr(address, chainId);\n  }\n\n  return web3.utils.toChecksumAddress(address);\n};\nexport { isAddress, toChecksumAddress };\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=style&index=0&id=1d4888e3&prod&lang=scss&scoped=true&\""],"sourceRoot":""}
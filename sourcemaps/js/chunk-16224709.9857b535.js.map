{"version":3,"sources":["webpack:///./src/modules/notifications/ModuleNotifications.vue?1e6b","webpack:///./src/apollo/configs/configErrorMsgs.js","webpack:///./src/modules/notifications/handlers/handlerNotification.mixin.js","webpack:///src/modules/notifications/ModuleNotifications.vue","webpack:///./src/modules/notifications/ModuleNotifications.vue?aa71","webpack:///./src/modules/notifications/ModuleNotifications.vue","webpack:///./src/apollo/queries/notifications/notification.graphql","webpack:///./src/modules/notifications/helpers/formatNotification.js","webpack:///./src/modules/notifications/ModuleNotifications.vue?934e","webpack:///./src/modules/notifications/helpers/formatNonChainNotification.js","webpack:///./src/assets/images/icons/icon-notifications.svg","webpack:///./src/core/helpers/timeAgo.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_e","loading","on","openNotifications","class","invertIcon","newNotificationCount","_v","_s","text","linkTitle","link","isOpenNotifications","closeNotifications","items","setSelected","_l","data","key","directives","name","rawName","value","notificationsByType","length","expression","notification","nativeOn","$event","markNotificationAsRead","address","staticRenderFns","errorMsgs","cannotReturnNull","MAX_ITEMS","getEthTransfersV2","getTransactionsByHashes","newPendingTransaction","getTransactionByHash","subscribeToTxHash","txHash","initialLoad","txHashes","ethTransfersIncoming","apollo","query","variables","owner","limit","skip","isEthNetwork","result","transfers","forEach","transfer","hash","transactionHash","includes","push","error","Toast","message","ERROR","hashes","fetchPolicy","update","to","copyArray","foundIdx","findIndex","item","splice","unshift","$subscribe","pendingTransaction","_pendingTx$to","pendingTx","toLowerCase","transactionEvent","_this$$apollo$queries","$apollo","queries","refetch","mixins","handlerNotification","props","type","Boolean","default","selected","NOTIFICATION_TYPES","ALL","IN","OUT","SWAP","computed","mapGetters","mapState","swapper","handlerSwap","web3","network","outgoingTxNotifications","txNotifications","map","hasOwnProperty","formatNotification","formatNonChainNotification","sort","sortByDate","incomingTxNotifications","reduce","arr","_notification$to","status","read","Notification","NonChainNotification","allNotifications","sorted","formattedCurrentNotifications","concat","slice","swapNotifications","unread","filter","hasNotification","watch","currentNotifications","handler","newVal","checkAndSetNotificationStatus","deep","mounted","_this","EventBus","$on","beforeDestroy","$off","methods","mapActions","input","a","b","Date","date","NOTIFICATION_STATUS","PENDING","checkSwapStatus","eth","getTransactionReceipt","then","receipt","SUCCESS","FAILED","updateNotification","markAsRead","component","doc","loc","source","collectFragmentReferences","node","refs","kind","add","selectionSet","selections","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","element","oneQuery","operationName","newDoc","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","module","exports","obj","_obj$status","_obj$type","explorer","blockExplorerTX","newObj","string","replace","gasPrice","formatIntegerToString","fromWei","gasLimit","toBN","gas","toString","total","formatFloatingPointValue","transactionFee","currencyName","toTxData","from","amount","timestamp","timeAgo","toNumber","toObj","fromObj","fromTxData","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MINUTES","convertedDate","seconds","Math","floor","secondsInYear","secondsInMonth","secondsInDay","secondsInHour","secondsInMin"],"mappings":"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","file":"js/chunk-16224709.9857b535.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.loading)?_c('v-skeleton-loader',{staticClass:\"mx-auto\",attrs:{\"max-width\":\"300\",\"type\":\"avatar\"}}):_vm._e(),(!_vm.loading)?_c('div',{staticClass:\"d-flex align-center\"},[_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":_vm.openNotifications}},[_c('img',{class:[_vm.invertIcon ? 'make-white-svg' : ''],attrs:{\"src\":require(\"@/assets/images/icons/icon-notifications.svg\")}})]),(_vm.newNotificationCount > 0)?_c('div',{staticClass:\"notification-count pa-3 cursor--pointer d-flex align-center justify-center white--text error lighten2\",on:{\"click\":_vm.openNotifications}},[_vm._v(\" \"+_vm._s(_vm.newNotificationCount)+\" \")]):_vm._e()],1):_vm._e(),_c('mew-overlay',{attrs:{\"footer\":{\n      text: 'Need help?',\n      linkTitle: 'Contact support',\n      link: 'mailto:support@myetherwallet.com'\n    },\"title\":\"Notifications\",\"content-size\":\"large\",\"show-overlay\":_vm.isOpenNotifications,\"close\":_vm.closeNotifications}},[_c('v-sheet',{staticClass:\"transparent\",attrs:{\"max-width\":\"735px\",\"width\":\"100%\"}},[_c('v-sheet',{staticClass:\"d-flex align-center justify-space-between mx-auto mb-6\",attrs:{\"color\":\"transparent\",\"max-width\":\"350px\"}},[_c('div',[_c('v-icon',{attrs:{\"color\":\"greenPrimary\",\"large\":\"\"}},[_vm._v(\" mdi-circle-medium \")]),_vm._v(\" Success \")],1),_c('div',[_c('v-icon',{attrs:{\"color\":\"orangePrimary\",\"large\":\"\"}},[_vm._v(\" mdi-circle-medium \")]),_vm._v(\" Pending \")],1),_c('div',[_c('v-icon',{attrs:{\"color\":\"redPrimary\",\"large\":\"\"}},[_vm._v(\" mdi-circle-medium \")]),_vm._v(\" Failed \")],1)]),(_vm.hasNotification)?_c('div',{staticClass:\"d-flex align-center justify-end\"},[_c('v-sheet',{attrs:{\"color\":\"transparent\",\"max-width\":\"150px\"}},[_c('mew-select',{attrs:{\"items\":_vm.items,\"has-filter\":false,\"normal-dropdown\":\"\"},on:{\"input\":_vm.setSelected}})],1)],1):_vm._e(),_vm._l((_vm.notificationsByType),function(data,key){return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading && _vm.notificationsByType.length > 0),expression:\"!loading && notificationsByType.length > 0\"}],key:key,staticClass:\"mt-2\"},[_c('mew-notification',{attrs:{\"notification\":data.notification},nativeOn:{\"click\":function($event){return _vm.markNotificationAsRead(data)}}})],1)}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.notificationsByType.length === 0),expression:\"notificationsByType.length === 0\"}],staticClass:\"pa-5 text-center\"},[_c('h3',{staticClass:\"mb-5\"},[_vm._v(\"No notifications to display for:\")]),_c('h3',{staticClass:\"break-hash\"},[_vm._v(_vm._s(_vm.address))])])],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * GraphQL error messages\n */\nexport const errorMsgs = {\n  cannotReturnNull:\n    'Cannot return null for non-nullable field Query.getTransactionByHash.'\n};\n","/**\n * Module Notification Apollo Mixin\n */\nimport {\n  getEthTransfersV2,\n  getTransactionsByHashes,\n  getTransactionByHash,\n  pendingTransaction,\n  transactionEvent\n} from '@/apollo/queries/notifications/notification.graphql';\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\nimport { errorMsgs } from '@/apollo/configs/configErrorMsgs';\n\n/**\n * Constants\n */\nconst MAX_ITEMS = 15;\n\nexport default {\n  name: 'HandlerNotification',\n  data() {\n    return {\n      getEthTransfersV2: '',\n      getTransactionsByHashes: '',\n      newPendingTransaction: '',\n      getTransactionByHash: '',\n      subscribeToTxHash: '',\n      txHash: '',\n      initialLoad: true,\n      txHashes: [],\n      ethTransfersIncoming: []\n    };\n  },\n  apollo: {\n    /**\n     * Apollo query to get the last 20 eth transfers by owner\n     */\n    getEthTransfersV2: {\n      query: getEthTransfersV2,\n      variables() {\n        return {\n          owner: this.address,\n          limit: MAX_ITEMS\n        };\n      },\n      skip() {\n        return (\n          !this.isEthNetwork || this.address === null || this.address === ''\n        );\n      },\n      result({ data }) {\n        if (data && data.getEthTransfersV2.transfers) {\n          data.getEthTransfersV2.transfers.forEach(transfer => {\n            const hash = transfer.transfer.transactionHash;\n            !this.txHashes.includes(hash) ? this.txHashes.push(hash) : null;\n          });\n        }\n      },\n      error(error) {\n        Toast(error.message, {}, ERROR);\n      }\n    },\n    /**\n     * Apollo query to fetch transaction details by hashes\n     * Only returns 10 at a time\n     */\n    getTransactionsByHashes: {\n      query: getTransactionsByHashes,\n      variables() {\n        return {\n          hashes: this.txHashes\n        };\n      },\n      fetchPolicy: 'cache-and-networ`k`',\n      skip() {\n        return !this.isEthNetwork || this.txHashes.length === 0;\n      },\n      result({ data }) {\n        if (data && data.getTransactionsByHashes) {\n          this.ethTransfersIncoming = data.getTransactionsByHashes;\n        }\n      },\n      error(error) {\n        Toast(error.message, {}, ERROR);\n      }\n    },\n    /**\n     * Apollo query to fetch transaction details by hash\n     * Only fetches one at a time\n     */\n    getTransactionByHash: {\n      query: getTransactionByHash,\n      variables() {\n        return {\n          hash: this.txHash\n        };\n      },\n      skip() {\n        return (\n          !this.isEthNetwork ||\n          !this.txHash ||\n          this.txHash === '' ||\n          this.txHash === null\n        );\n      },\n      update: data => data.getTransactionByHash,\n      result({ data }) {\n        if (data) {\n          const getTransactionByHash = data.getTransactionByHash;\n          if (getTransactionByHash.to === this.address) {\n            const copyArray = this.ethTransfersIncoming;\n            const foundIdx = copyArray.findIndex(item => {\n              if (getTransactionByHash.hash === item.hash) {\n                return item;\n              }\n            });\n            foundIdx >= 0\n              ? copyArray.splice(foundIdx, 1, getTransactionByHash)\n              : copyArray.unshift(getTransactionByHash);\n            this.ethTransfersIncoming = copyArray;\n          }\n        }\n      },\n      error(error) {\n        if (error.message.includes(errorMsgs.cannotReturnNull)) {\n          return;\n        }\n        Toast(error.message, {}, ERROR);\n      }\n    },\n    $subscribe: {\n      /**\n       * Apollo subscription for pending txs\n       */\n      newPendingTransaction: {\n        query: pendingTransaction,\n        variables() {\n          return {\n            owner: this.address\n          };\n        },\n        skip() {\n          return (\n            !this.isEthNetwork ||\n            this.address === '' ||\n            this.address === null ||\n            this.loading\n          );\n        },\n        result({ data }) {\n          if (data && data.pendingTransaction) {\n            const pendingTx = data.pendingTransaction;\n            if (pendingTx.to?.toLowerCase() === this.address) {\n              this.txHash = pendingTx.transactionHash;\n            }\n          }\n        },\n        error(error) {\n          Toast(error.message, {}, ERROR);\n        }\n      },\n      /**\n       * Apollo subscription for transactions\n       */\n      subscribeToTxHash: {\n        query: transactionEvent,\n        variables() {\n          return {\n            hash: this.txHash\n          };\n        },\n        skip() {\n          return (\n            !this.isEthNetwork ||\n            !this.txHash ||\n            this.txHash === '' ||\n            this.txHash === null\n          );\n        },\n        result() {\n          this.$apollo.queries.getTransactionByHash?.refetch();\n        },\n        error(error) {\n          Toast(error.message, {}, ERROR);\n        }\n      }\n    }\n  }\n};\n","<template>\n  <!--\n  =====================================================================================\n    Module Notifications\n  =====================================================================================\n  -->\n  <div>\n    <v-skeleton-loader\n      v-if=\"loading\"\n      class=\"mx-auto\"\n      max-width=\"300\"\n      type=\"avatar\"\n    ></v-skeleton-loader>\n    <div v-if=\"!loading\" class=\"d-flex align-center\">\n      <v-btn icon @click=\"openNotifications\">\n        <img\n          src=\"@/assets/images/icons/icon-notifications.svg\"\n          :class=\"[invertIcon ? 'make-white-svg' : '']\"\n        />\n      </v-btn>\n      <div\n        v-if=\"newNotificationCount > 0\"\n        class=\"notification-count pa-3 cursor--pointer d-flex align-center justify-center white--text error lighten2\"\n        @click=\"openNotifications\"\n      >\n        {{ newNotificationCount }}\n      </div>\n    </div>\n    <mew-overlay\n      :footer=\"{\n        text: 'Need help?',\n        linkTitle: 'Contact support',\n        link: 'mailto:support@myetherwallet.com'\n      }\"\n      title=\"Notifications\"\n      content-size=\"large\"\n      :show-overlay=\"isOpenNotifications\"\n      :close=\"closeNotifications\"\n    >\n      <v-sheet class=\"transparent\" max-width=\"735px\" width=\"100%\">\n        <v-sheet\n          color=\"transparent\"\n          max-width=\"350px\"\n          class=\"d-flex align-center justify-space-between mx-auto mb-6\"\n        >\n          <div>\n            <v-icon color=\"greenPrimary\" large> mdi-circle-medium </v-icon>\n            Success\n          </div>\n          <div>\n            <v-icon color=\"orangePrimary\" large> mdi-circle-medium </v-icon>\n            Pending\n          </div>\n          <div>\n            <v-icon color=\"redPrimary\" large> mdi-circle-medium </v-icon>\n            Failed\n          </div>\n        </v-sheet>\n        <div v-if=\"hasNotification\" class=\"d-flex align-center justify-end\">\n          <v-sheet color=\"transparent\" max-width=\"150px\">\n            <mew-select\n              :items=\"items\"\n              :has-filter=\"false\"\n              normal-dropdown\n              @input=\"setSelected\"\n            />\n          </v-sheet>\n        </div>\n        <div\n          v-for=\"(data, key) in notificationsByType\"\n          v-show=\"!loading && notificationsByType.length > 0\"\n          :key=\"key\"\n          class=\"mt-2\"\n        >\n          <mew-notification\n            :notification=\"data.notification\"\n            @click.native=\"markNotificationAsRead(data)\"\n          />\n        </div>\n        <div v-show=\"notificationsByType.length === 0\" class=\"pa-5 text-center\">\n          <h3 class=\"mb-5\">No notifications to display for:</h3>\n          <h3 class=\"break-hash\">{{ address }}</h3>\n        </div>\n      </v-sheet>\n    </mew-overlay>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapActions } from 'vuex';\nimport Notification, {\n  NOTIFICATION_TYPES,\n  NOTIFICATION_STATUS\n} from './handlers/handlerNotification';\n\nimport formatNotification from './helpers/formatNotification';\nimport formatNonChainNotification from './helpers/formatNonChainNotification';\nimport { EventBus } from '@/core/plugins/eventBus.js';\n\nimport handlerNotification from './handlers/handlerNotification.mixin';\nimport handlerSwap from '@/modules/swap/handlers/handlerSwap';\nimport NonChainNotification from './handlers/nonChainNotification';\n\nexport default {\n  name: 'ModuleNotifications',\n  mixins: [handlerNotification],\n  props: {\n    invertIcon: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      selected: NOTIFICATION_TYPES.ALL,\n      items: [\n        { name: 'All', value: NOTIFICATION_TYPES.ALL },\n        { name: 'In', value: NOTIFICATION_TYPES.IN },\n        { name: 'Out', value: NOTIFICATION_TYPES.OUT },\n        { name: 'Swap', value: NOTIFICATION_TYPES.SWAP }\n      ],\n      isOpenNotifications: false\n    };\n  },\n  computed: {\n    ...mapGetters('notifications', [\n      'currentNotifications',\n      'txNotifications',\n      'swapNotifications'\n    ]),\n    ...mapGetters('global', ['network', 'isEthNetwork']),\n    ...mapState('wallet', ['address', 'web3']),\n    loading() {\n      return this.$apollo.loading;\n    },\n    /**\n     * Swap Handler\n     */\n    swapper() {\n      return new handlerSwap(this.web3, this.network.type.name);\n    },\n    /**\n     * Formatted outgoing tx notifications\n     */\n    outgoingTxNotifications() {\n      return this.txNotifications\n        .map(notification => {\n          if (notification.hasOwnProperty('hash')) {\n            return formatNotification(notification, this.network);\n          }\n          return formatNonChainNotification(notification);\n        })\n        .sort(this.sortByDate);\n    },\n    /**\n     * Formatted incoming tx notifications\n     */\n    incomingTxNotifications() {\n      const address = this.address ? this.address.toLowerCase() : '';\n      if (!this.loading) {\n        return this.ethTransfersIncoming\n          .reduce((arr, notification) => {\n            if (notification.to?.toLowerCase() === address) {\n              notification.type = NOTIFICATION_TYPES.IN;\n              if (notification.status) notification.read = true;\n              else notification.read = false;\n              if (notification.hasOwnProperty('hash')) {\n                notification = new Notification(notification);\n                arr.push(formatNotification(notification, this.network));\n              } else {\n                notification = new NonChainNotification(notification);\n                arr.push(formatNonChainNotification(notification));\n              }\n            }\n            return arr;\n          }, [])\n          .sort(this.sortByDate);\n      }\n      return [];\n    },\n    /**\n     * Returns all the notifications\n     */\n    allNotifications() {\n      const sorted = this.formattedCurrentNotifications().concat(\n        this.incomingTxNotifications\n      );\n      sorted.sort(this.sortByDate);\n      return sorted.slice(0, 20);\n    },\n    /**\n     * Display notifications based on type\n     */\n    notificationsByType() {\n      switch (this.selected) {\n        case NOTIFICATION_TYPES.IN:\n          return this.incomingTxNotifications\n            .slice(0, 20)\n            .sort(this.sortByDate);\n        case NOTIFICATION_TYPES.OUT:\n          return this.outgoingTxNotifications\n            .slice(0, 20)\n            .sort(this.sortByDate);\n        case NOTIFICATION_TYPES.SWAP:\n          return this.swapNotifications.slice(0, 20).sort(this.sortByDate);\n        default:\n          return this.allNotifications;\n      }\n    },\n    /**\n     * new notification count\n     */\n    newNotificationCount() {\n      const unread = this.allNotifications.filter(item => {\n        if (!item.read) {\n          return item;\n        }\n      });\n      return unread.length;\n    },\n    /**\n     * checks whether user has notifications\n     */\n    hasNotification() {\n      return this.allNotifications.length > 0;\n    }\n  },\n  watch: {\n    currentNotifications: {\n      handler: function (newVal) {\n        newVal.forEach(notification => {\n          this.checkAndSetNotificationStatus(notification);\n        });\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    const _this = this;\n    EventBus.$on('openNotifications', () => {\n      _this.openNotifications();\n    });\n    _this.currentNotifications.forEach(notification => {\n      _this.checkAndSetNotificationStatus(notification);\n    });\n  },\n  beforeDestroy() {\n    EventBus.$off('openNotifications');\n  },\n  methods: {\n    ...mapActions('notifications', ['updateNotification']),\n    /**\n     * Set the filter value\n     */\n    setSelected(input) {\n      this.selected = input.value;\n    },\n    sortByDate(a, b) {\n      return new Date(b.date) - new Date(a.date);\n    },\n    /**\n     * Formatted current notifications\n     */\n    formattedCurrentNotifications() {\n      return this.currentNotifications.map(notification => {\n        if (notification.hasOwnProperty('hash')) {\n          return formatNotification(notification, this.network);\n        }\n        return formatNonChainNotification(notification);\n      });\n    },\n    /**\n     * Check status if it is an outgoing pending tx\n     */\n    checkAndSetNotificationStatus(notification) {\n      const type = notification.type;\n      if (notification.status) {\n        if (\n          type === NOTIFICATION_TYPES.SWAP &&\n          notification.status.toLowerCase() === NOTIFICATION_STATUS.PENDING\n        ) {\n          notification.checkSwapStatus(this.swapper);\n        }\n        if (\n          type === NOTIFICATION_TYPES.OUT &&\n          notification.status.toLowerCase() === NOTIFICATION_STATUS.PENDING\n        ) {\n          this.web3.eth\n            .getTransactionReceipt(notification.hash)\n            .then(receipt => {\n              if (receipt) {\n                notification.status = receipt.status\n                  ? NOTIFICATION_STATUS.SUCCESS\n                  : NOTIFICATION_STATUS.FAILED;\n                this.updateNotification(notification);\n              }\n            });\n        }\n      }\n    },\n    /**\n     * Mark notification as read\n     */\n    markNotificationAsRead(notification) {\n      if (!notification.read) {\n        notification.markAsRead().then(() => {\n          const type = notification.type.toLowerCase();\n          if (\n            type === NOTIFICATION_TYPES.OUT ||\n            type === NOTIFICATION_TYPES.SWAP\n          ) {\n            this.updateNotification(notification);\n          } else {\n            notification.read = true;\n          }\n        });\n      }\n    },\n    openNotifications() {\n      this.isOpenNotifications = true;\n    },\n    closeNotifications() {\n      this.isOpenNotifications = false;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.break-hash {\n  word-break: break-all;\n}\n.edit {\n  width: 37px;\n  height: 37px;\n  border-radius: 100%;\n  background-color: var(--v-greenPrimary-base);\n  cursor: pointer;\n}\n\n.notification-count {\n  top: 0;\n  border-radius: 100%;\n  margin-bottom: 20px;\n  margin-left: -10px;\n  width: 18px;\n  height: 18px;\n  font-size: 12px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNotifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNotifications.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleNotifications.vue?vue&type=template&id=4aa278be&scoped=true&\"\nimport script from \"./ModuleNotifications.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleNotifications.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModuleNotifications.vue?vue&type=style&index=0&id=4aa278be&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4aa278be\",\n  null\n  \n)\n\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getEthTransfersV2\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"limit\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"nextKey\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getEthTransfersV2\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"direction\"},\"value\":{\"kind\":\"EnumValue\",\"value\":\"OUTGOING\"}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"limit\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"limit\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"nextKey\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"nextKey\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transfers\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transfer\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionHash\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"nextKey\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getTransactionsByHashes\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hashes\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getTransactionsByHashes\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"hashes\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hashes\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"from\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"gas\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"gasPrice\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"gasUsed\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"timestamp\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"nonce\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"status\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getTransactionByHash\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getTransactionByHash\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"from\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"gas\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"gasPrice\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"gasUsed\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"timestamp\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"nonce\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"status\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"name\":{\"kind\":\"Name\",\"value\":\"pendingTransaction\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"pendingTransaction\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionHash\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"to\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionEvent\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"transactionEvent\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}}}],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":897}};\n    doc.loc.source = {\"body\":\"query getEthTransfersV2($owner: String!, $limit: Int, $nextKey: String) {\\n  getEthTransfersV2(\\n    owner: $owner\\n    direction: OUTGOING\\n    limit: $limit\\n    nextKey: $nextKey\\n  ) {\\n    transfers {\\n      transfer {\\n        transactionHash\\n      }\\n    }\\n    nextKey\\n  }\\n}\\n\\nquery getTransactionsByHashes($hashes: [String]!) {\\n  getTransactionsByHashes(hashes: $hashes) {\\n    from\\n    gas\\n    gasPrice\\n    gasUsed\\n    hash\\n    timestamp\\n    nonce\\n    to\\n    value\\n    input\\n    status\\n  }\\n}\\n\\nquery getTransactionByHash($hash: String!) {\\n  getTransactionByHash(hash: $hash) {\\n    from\\n    gas\\n    gasPrice\\n    gasUsed\\n    hash\\n    timestamp\\n    nonce\\n    to\\n    value\\n    input\\n    status\\n  }\\n}\\n\\nsubscription pendingTransaction($owner: String) {\\n  pendingTransaction(owner: $owner) {\\n    transactionHash\\n    to\\n  }\\n}\\n\\nsubscription transactionEvent($hash: String!) {\\n  transactionEvent(hash: $hash)\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"getEthTransfersV2\"] = oneQuery(doc, \"getEthTransfersV2\");\n        \n        module.exports[\"getTransactionsByHashes\"] = oneQuery(doc, \"getTransactionsByHashes\");\n        \n        module.exports[\"getTransactionByHash\"] = oneQuery(doc, \"getTransactionByHash\");\n        \n        module.exports[\"pendingTransaction\"] = oneQuery(doc, \"pendingTransaction\");\n        \n        module.exports[\"transactionEvent\"] = oneQuery(doc, \"transactionEvent\");\n        \n","import timeAgo from '@/core/helpers/timeAgo';\nimport { fromWei, toBN } from 'web3-utils';\nimport {\n  formatFloatingPointValue,\n  formatIntegerToString\n} from '@/core/helpers/numberFormatHelper';\n/**\n * Formatted notification for mew-notification component\n */\nconst formatNotification = (obj, network) => {\n  const explorer = network.type.blockExplorerTX;\n  const newObj = {\n    txHash: {\n      value: obj.hash ? obj.hash : '',\n      string: 'Transaction Hash',\n      link: `${explorer ? explorer.replace('[[txHash]]', obj.hash) : ''}`\n    },\n    gasPrice: {\n      value: `${formatIntegerToString(fromWei(obj.gasPrice, 'gwei'))} Gwei`,\n      string: 'Gas Price'\n    },\n    gasLimit: {\n      value: formatIntegerToString(toBN(obj.gas).toString()),\n      string: 'Gas Limit'\n    },\n    total: {\n      value: `${\n        formatFloatingPointValue(fromWei(obj.transactionFee, 'ether')).value\n      } ${network.type.currencyName}`,\n      string: 'Total Transaction fee'\n    },\n    to: {\n      value: obj.toTxData && obj.toTxData.to ? obj.toTxData.to : obj.to,\n      string: 'To'\n    },\n    from: {\n      value: obj.from,\n      string: 'From'\n    },\n    amount: {\n      value: `${formatFloatingPointValue(fromWei(obj.value, 'ether')).value} ${\n        network.type.currencyName\n      }`,\n      string: 'Amount'\n    },\n    timestamp: {\n      value: timeAgo(toBN(obj.date).toNumber()),\n      string: 'Time'\n    },\n    status: {\n      value: obj.status?.toLowerCase(),\n      string: 'Status'\n    },\n    type: {\n      value: obj.type?.toLowerCase(),\n      string: obj.type\n    },\n    read: obj.read,\n    toObj: obj.toTxData,\n    fromObj: obj.fromTxData\n  };\n  if (newObj.toObj && newObj.toObj.amount) {\n    newObj.toObj.amount = formatFloatingPointValue(newObj.toObj.amount).value;\n  }\n  if (newObj.fromObj && newObj.fromObj.amount) {\n    newObj.fromObj.amount = formatFloatingPointValue(\n      newObj.fromObj.amount\n    ).value;\n  }\n  obj.notification = newObj;\n  return obj;\n};\nexport default formatNotification;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNotifications.vue?vue&type=style&index=0&id=4aa278be&prod&lang=scss&scoped=true&\"","import timeAgo from '@/core/helpers/timeAgo';\nimport { toBN } from 'web3-utils';\n/**\n * Formatted notification for mew-notification component\n */\nconst formatNotification = obj => {\n  const newObj = {\n    to: {\n      value: obj.toTxData && obj.toTxData.to ? obj.toTxData.to : obj.to,\n      string: 'To'\n    },\n    from: {\n      value: obj.from,\n      string: 'From'\n    },\n    timestamp: {\n      value: timeAgo(toBN(obj.date).toNumber()),\n      string: 'Time'\n    },\n    status: {\n      value: obj.status?.toLowerCase(),\n      string: 'Status'\n    },\n    type: {\n      value: obj.type?.toLowerCase(),\n      string: obj.type\n    },\n    read: obj.read,\n    toObj: obj.toTxData,\n    fromObj: obj.fromTxData\n  };\n  obj.notification = newObj;\n  return obj;\n};\nexport default formatNotification;\n","module.exports = __webpack_public_path__ + \"img/icon-notifications.09e377be.svg\";","const SECONDS_IN_YEAR = 31536000;\nconst SECONDS_IN_MONTH = 2592000;\nconst SECONDS_IN_DAY = 86400;\nconst SECONDS_IN_HOUR = 3600;\nconst SECONDS_IN_MINUTES = 60;\n\n// date is in time string\nexport default date => {\n  const convertedDate = new Date(date);\n  const seconds = Math.floor((new Date() - convertedDate) / 1000);\n  const secondsInYear = Math.floor(seconds / SECONDS_IN_YEAR);\n  const secondsInMonth = Math.floor(seconds / SECONDS_IN_MONTH);\n  const secondsInDay = Math.floor(seconds / SECONDS_IN_DAY);\n  const secondsInHour = Math.floor(seconds / SECONDS_IN_HOUR);\n  const secondsInMin = Math.floor(seconds / SECONDS_IN_MINUTES);\n\n  return secondsInYear > 1\n    ? `${secondsInYear} years ago`\n    : secondsInMonth > 1\n    ? `${secondsInMonth} months ago`\n    : secondsInDay > 1\n    ? `${secondsInDay} days ago`\n    : secondsInHour > 1\n    ? `${secondsInHour} hours ago`\n    : secondsInMin > 1\n    ? `${secondsInMin} minutes ago`\n    : `${Math.floor(seconds)} seconds ago`;\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/modules/buy-sell/components/SellComponent.vue?bea8","webpack:///./src/modules/buy-sell/components/SellComponent.vue?5163","webpack:///src/modules/buy-sell/components/SellComponent.vue","webpack:///./src/modules/buy-sell/components/SellComponent.vue?544d","webpack:///./src/modules/buy-sell/components/SellComponent.vue","webpack:///./src/apollo/queries/wallets/wallets.graphql","webpack:///./src/core/mixins/handlerWallet.mixin.js","webpack:///./src/modules/buy-sell/components/SellComponent.vue?14a5","webpack:///./src/modules/send/errors.js","webpack:///./src/modules/send/handlers/handlerSend.js","webpack:///./node_modules/core-js/modules/web.url.to-json.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","loading","fetchingBalance","_e","staticStyle","attrs","selectedBalance","maxButton","errorMessages","hasPersistentHint","persistentHintMessage","nativeOn","$event","preventCharE","model","value","callback","$$v","amount","expression","on","openTokenSelect","selectedCurrency","img","_s","name","cryptoAmount","fiatCurrencyItems","selectedFiat","inWallet","ref","setAddress","estimatingFees","txFeeInEth","disableSell","isValidToAddress","sell","apply","arguments","currencyItems","setCurrency","staticRenderFns","components","ButtonBalance","ModuleAddressBook","BuySellTokenSelect","mixins","props","orderHandler","type","default","close","defaultCurrency","data","fetchedData","locGasPrice","sendHandler","gasLimit","maxBalance","toAddress","validToAddress","currencyRates","computed","title","method","disabled","BigNumber","currencyConfig","rate","currency","preselectedCurrencies","inList","arr","token","supportedCurrency","supportedNetworks","min","max","txFee","nonMainnetMetamask","isValidAmount","getCalculatedAmount","times","toFixed","getAmountBN","hasEnoughAssets","Toast","actualAddress","actualValidAddress","hasData","selectedFiatName","priceOb","crypto_currency","fiat_currency","price","item","watch","handler","deep","gasPriceType","network","mounted","methods","getEthBalance","web3Instance","getTokenBalance","abi","contract","balanceOf","call","then","div","toString","debouncedSetAmount","newVal","estimateGas","catch","setMax","fetchSellInfo","getSupportedFiatToSell","component","doc","loc","source","collectFragmentReferences","node","refs","kind","add","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","push","module","exports","getLatestPrices","tokensData","apollo","query","pollInterval","result","Map","set","id","setCoinGeckoTokens","error","message","ERROR","mapActions","INVALID_TO_ADDRESS","INVALID_FROM_ADDRESS","INVALID_DATA_HEX","NEGATIVE_VALUE","SendTransaction","constructor","$store","vuexStore","Object","assign","mapState","mapGetters","localGasPrice","TX","from","to","destination","nonce","gasPrice","gas","destinationValue","setTo","_to","_type","isAddress","ErrorList","toDetails","_setTo","isToken","toChecksumAddress","setFrom","_from","_setGasPrice","toHex","toBN","setGasLimit","_gasLimit","setLocalGasPrice","setValue","_value","isNaN","isNull","_valueBN","lt","_setValue","setData","getTokenTransferABI","_data","isHexStrict","SanitizeHex","setNonce","_nonce","_currency","getEntireBal","balance","gasPriceBN","fee","mul","gt","sub","address","web3","eth","MAIN_TOKEN_ADDRESS","hasEnoughBalance","hasAmountToken","lte","toBNSafe","hasGas","_toAddress","jsonInterface","constant","inputs","outputs","payable","stateMutability","Web3Contract","transfer","toLowerCase","encodeABI","getTransactionCount","_tx","Transaction","fromTxData","json","toJSON","sendTransaction","e","helpers","hasValidDecimals","$","target","proto","enumerable","URL","prototype"],"mappings":"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,UAAU,IAAIT,GAAG,CAAC,MAAQ,SAASR,GAAQnB,EAAI4B,iBAAkB,OAAW,IAC3hIoB,EAAkB,G,oRCyKP,GACfhB,qBACAiB,YACAC,kEACAC,+BACAC,2BAEAC,gBACAC,OACAC,cACAC,YACAC,gBAEAC,OACAF,cACAC,gBAEArB,UACAoB,aACAC,YAEAE,iBACAH,YACAC,iBAGAG,OACA,OACAzB,cACAH,WACAV,YAEAQ,eAEAF,mBACAC,sCACAJ,WACAoC,eACAC,gBACAC,eACAvD,WACAQ,qBACAP,mBACAuD,cACAzB,kBACA0B,eACApD,oBACAqD,aACAC,kBACAC,mBAGAC,aACA,0DACA,6CACA,yEACA,wEACA,+CACAnC,oBACA,qBACA,sDACA,QACA,0BAEAjB,wBACA,8BACA,mFACA,IAEAH,YACA,uCACA,CACAwD,YACAC,mBACAC,SACA,yBACAC,2CAEA,IAEAC,iBACA,gCACA,wBACA,IACA,OAAAC,OAAAC,aAEAC,wBACA,iBACA,6BACA,iCACA,yDAEA,KAGA,OAFAC,4CACAC,UACA,EAGA,gCAQA,OAPA,IACAC,uBACAA,cACA,qBACA,MACAD,WAEA,GACA,IAEA,kBACA,uBACA,gCACA,IACAC,4CACAD,WAGA,UAEAjC,gBACA,2CACAkC,gBACA,IAEA,UAEAC,oBACA,2CAEAC,oBACA,6BAEAlD,OACA,qEACA,6BACA,gCAEAS,cACA,OACA,aACA,kBACAgC,wBACA,cACA,0BACA,yBAGAU,MACA,4CACA,wCACA,+CAGA,KACA,wBAGA,kBAEAC,MACA,4CACA,wCACA,+CAGA,KACA,wBAGA,eAEAC,QACA,4BACAZ,wDAGAjC,aACA,6CACA,kCAGAzB,gBAAA,MACA,+DACA,UACA,+BACA,mBACA,2BACA,wEAGA,4DACA,8DAGA,sBACA,wBAGA,WACA,kCAGA,2BACA,mEAEA,2BACA,mEAGA,kBACA,8BACA,6CAEA,IACA,yCACA,oCAEA,gEAIA,GACA,yBACA,qBACA,qBAEA,kFAGA,OACA,cACA,gCACA,YACA,gCAGA,0FAGA,IAEAuE,qBAAA,MACA,OACA,eACA,+CACA,kEAGAC,gBAAA,MAEA,wBAGA,yFAIA,wBAIA,gCACA,YACA,mCAGAC,sBACA,2CACAC,uDACAC,WACA,6BAEAC,cAEA,mDACA,uBACA,0BACA,gCAEA,6BAEAC,kBACA,IACA,uBACA,qBACA,gCAEA,kDACA,SAEA,OADAC,6BACA,IAGAC,gBACA,kDAEAC,qBACA,4CAEAC,UACA,+CAEA/D,eACA,8DAEAgE,mBACA,+BAEAC,UACA,8CAIA,CAAAC,sBAAAC,oBAAAC,oBAHA,6BACAC,8CAKAC,OACArC,YACA,iBAEArC,kBACA2E,oBACA,oBACA,0BACA,0BAEA,wCACA,8CAEA,gCAEA,sBAEAC,SAEAtE,cACAqE,sBACA,2BACA,8BAGAC,SAEAhF,UACA,4BAEAiF,gBACA,yCAEA5C,eACA,sCAEAE,YACA,iCAEAT,cACAiD,mBACA,4BACA,qBACA,yDAEAC,SAEAE,UACA,oBACA,0BACA,yBACA,gBACA,yBACA,2CACA,0DACA,4BACA,qBACA,2DAIAC,UACA,mEACA,4BACA,qBACA,yDAEAC,YACA,kDACAvE,kBACA,2CAEA,iBADA,uBAEA,sBACA,sBACA,yCACA,uBAEAwE,gBACA,mCACA,sBACA,UACA,0BACAC,8CACA,wBACA,gDAGAC,kBACA,mCACA,sBACA,UACA,0BACA,qBACAC,OACA,gCAEAC,UACAC,8BACAC,OACAC,SACA,wBACA,4BACAC,iDACAC,cAGAC,sDAKA,GAJA,6BACA,4BAGA,cAIAC,IACA,wCACA,oBACA,cACA,OACA,kBACAhC,MACAhB,YACA,yDACA,+BACA,KAGA8C,WACA,6BACA,gDACA,uBACA,iBACAG,cACAL,SACA,uBACA,kBAEAM,UACA9B,kCAIA,KACA9C,eACA,gBACA,yBAEA6E,SACA,GACA,yCACA,cACA,CACA,wCAEA,YADA,EACA,OACAN,IACA7C,YACA,6CACA,+BACA,KAGA8C,WAEA,0BAGA,mDACA,oBACA9C,uDAEA,4BACA,2BAEA9B,OACA,kBACAA,+CACA0E,UACA,gBACA,aACA,6CAEAM,UACA9B,4BACA,gBACA,aACA,8CAGAgC,gBACA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","file":"js/chunk-26533e56.a0996e6b.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SellComponent.vue?vue&type=style&index=0&id=04d4e172&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pa-8 moonpay-sell-component\"},[_c('div',{staticClass:\"mt-2\"},[_c('div',{staticClass:\"mb-2 d-flex align-center justify-space-between\"},[_c('div',{staticClass:\"font-weight-medium textDark--text\"},[_vm._v(\" How much do you want to sell? \")]),(!_vm.loading && !_vm.fetchingBalance)?_c('button-balance',{staticStyle:{\"position\":\"relative\",\"top\":\"0\",\"right\":\"0\"},attrs:{\"balance\":_vm.selectedBalance,\"loading\":_vm.loading}}):_vm._e()],1),_c('div',{staticClass:\"d-flex align-start\"},[(_vm.inWallet)?_c('mew-input',{staticClass:\"no-right-border\",staticStyle:{\"max-width\":\"251px\",\"max-height\":\"86px\"},attrs:{\"hide-clear-btn\":\"\",\"type\":\"number\",\"placeholder\":\"Enter amount to sell\",\"max-btn-obj\":_vm.maxButton,\"disabled\":_vm.loading,\"error-messages\":_vm.errorMessages,\"persistent-hint\":_vm.hasPersistentHint,\"hint\":_vm.persistentHintMessage},nativeOn:{\"keydown\":function($event){return _vm.preventCharE($event)}},model:{value:(_vm.amount),callback:function ($$v) {_vm.amount=$$v},expression:\"amount\"}}):_c('mew-input',{staticClass:\"no-right-border\",staticStyle:{\"max-width\":\"251px\",\"max-height\":\"86px\"},attrs:{\"hide-clear-btn\":\"\",\"type\":\"number\",\"placeholder\":\"Enter amount to sell\",\"max-btn-obj\":_vm.maxButton,\"disabled\":_vm.loading,\"error-messages\":_vm.errorMessages,\"persistent-hint\":_vm.hasPersistentHint,\"hint\":_vm.persistentHintMessage},nativeOn:{\"keydown\":function($event){return _vm.preventCharE($event)}},model:{value:(_vm.amount),callback:function ($$v) {_vm.amount=$$v},expression:\"amount\"}}),_c('div',{staticClass:\"d-flex align-center token-select-button\",on:{\"click\":function($event){_vm.openTokenSelect = true}}},[_c('mew-token-container',{attrs:{\"img\":_vm.selectedCurrency.img,\"size\":\"28px\"}}),_c('div',{staticClass:\"basic--text\",staticStyle:{\"margin-left\":\"8px\"}},[_vm._v(\" \"+_vm._s(_vm.selectedCurrency.name)+\" \")]),_c('v-icon',{staticClass:\"ml-auto\",attrs:{\"size\":\"20px\",\"color\":\"titlePrimary\"}},[_vm._v(\" mdi-chevron-down \")])],1)],1)]),_c('div',{staticClass:\"mt-2\"},[_c('div',{staticClass:\"font-weight-medium textDark--text mb-2\"},[_vm._v(\"You will get\")]),_c('div',{staticClass:\"d-flex align-start\"},[_c('mew-input',{staticClass:\"no-right-border\",attrs:{\"is-read-only\":\"\",\"value\":_vm.cryptoAmount,\"hide-clear-btn\":\"\",\"type\":\"number\"}}),_c('mew-select',{staticClass:\"selectedFiat no-left-border\",staticStyle:{\"max-width\":\"135px\"},attrs:{\"items\":_vm.fiatCurrencyItems,\"is-custom\":\"\"},model:{value:(_vm.selectedFiat),callback:function ($$v) {_vm.selectedFiat=$$v},expression:\"selectedFiat\"}})],1)]),(!_vm.inWallet)?_c('div',{staticClass:\"mt-2\"},[_c('div',{staticClass:\"font-weight-medium textDark--text mb-2\"},[_vm._v(\" What wallet are you sending your crypto from? \")]),_c('module-address-book',{ref:\"addressInput\",attrs:{\"label\":\"Enter Crypto Address\",\"enable-save-address\":false,\"is-home-page\":true},on:{\"setAddress\":_vm.setAddress}})],1):_vm._e(),_c('div',{staticClass:\"pt-2 pb-10\"},[_c('div',{staticClass:\"mew-body textMedium--text\"},[_vm._v(\" After submitting your sell order, you will have to send your crypto to Moonpay. Make sure to have enough currency in your wallet to cover network transaction fees. \")]),(_vm.inWallet)?_c('div',{staticClass:\"d-flex align-center justify-space-between mt-4\"},[_c('div',{staticClass:\"mew-body textMedium--text\"},[_vm._v(\"Estimated Network Fee\")]),(!_vm.estimatingFees)?_c('div',{staticClass:\"mew-body textMedium--text\"},[_vm._v(\" ~\"+_vm._s(_vm.txFeeInEth)+\" \")]):_c('v-skeleton-loader',{attrs:{\"type\":\"text\",\"width\":\"150px\"}})],1):_vm._e()]),_c('mew-button',{attrs:{\"title\":\"SELL WITH MOONPAY\",\"btn-size\":\"xlarge\",\"has-full-width\":\"\",\"disabled\":_vm.disableSell,\"is-valid-address-func\":_vm.isValidToAddress},nativeOn:{\"click\":function($event){return _vm.sell.apply(null, arguments)}}}),_c('buy-sell-token-select',{attrs:{\"open\":_vm.openTokenSelect,\"currency-items\":_vm.currencyItems,\"selected-currency\":_vm.selectedCurrency,\"set-currency\":_vm.setCurrency,\"in-wallet\":_vm.inWallet,\"is-sell\":\"\"},on:{\"close\":function($event){_vm.openTokenSelect = false}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"pa-8 moonpay-sell-component\">\n    <!-- ========================================================================= -->\n    <!-- Selling amount in crypto -->\n    <!-- ========================================================================= -->\n    <div class=\"mt-2\">\n      <div class=\"mb-2 d-flex align-center justify-space-between\">\n        <div class=\"font-weight-medium textDark--text\">\n          How much do you want to sell?\n        </div>\n        <button-balance\n          v-if=\"!loading && !fetchingBalance\"\n          style=\"position: relative; top: 0; right: 0\"\n          :balance=\"selectedBalance\"\n          :loading=\"loading\"\n        />\n      </div>\n\n      <div class=\"d-flex align-start\">\n        <mew-input\n          v-if=\"inWallet\"\n          v-model=\"amount\"\n          hide-clear-btn\n          class=\"no-right-border\"\n          type=\"number\"\n          placeholder=\"Enter amount to sell\"\n          style=\"max-width: 251px; max-height: 86px\"\n          :max-btn-obj=\"maxButton\"\n          :disabled=\"loading\"\n          :error-messages=\"errorMessages\"\n          :persistent-hint=\"hasPersistentHint\"\n          :hint=\"persistentHintMessage\"\n          @keydown.native=\"preventCharE($event)\"\n        />\n        <mew-input\n          v-else\n          v-model=\"amount\"\n          hide-clear-btn\n          class=\"no-right-border\"\n          type=\"number\"\n          placeholder=\"Enter amount to sell\"\n          style=\"max-width: 251px; max-height: 86px\"\n          :max-btn-obj=\"maxButton\"\n          :disabled=\"loading\"\n          :error-messages=\"errorMessages\"\n          :persistent-hint=\"hasPersistentHint\"\n          :hint=\"persistentHintMessage\"\n          @keydown.native=\"preventCharE($event)\"\n        />\n        <div\n          class=\"d-flex align-center token-select-button\"\n          @click=\"openTokenSelect = true\"\n        >\n          <mew-token-container :img=\"selectedCurrency.img\" size=\"28px\" />\n          <div class=\"basic--text\" style=\"margin-left: 8px\">\n            {{ selectedCurrency.name }}\n          </div>\n          <v-icon class=\"ml-auto\" size=\"20px\" color=\"titlePrimary\">\n            mdi-chevron-down\n          </v-icon>\n        </div>\n      </div>\n    </div>\n\n    <!-- ========================================================================= -->\n    <!-- Receiving amount in fiat -->\n    <!-- ========================================================================= -->\n    <div class=\"mt-2\">\n      <div class=\"font-weight-medium textDark--text mb-2\">You will get</div>\n      <div class=\"d-flex align-start\">\n        <mew-input\n          is-read-only\n          :value=\"cryptoAmount\"\n          hide-clear-btn\n          type=\"number\"\n          class=\"no-right-border\"\n        />\n        <mew-select\n          v-model=\"selectedFiat\"\n          style=\"max-width: 135px\"\n          :items=\"fiatCurrencyItems\"\n          is-custom\n          class=\"selectedFiat no-left-border\"\n        />\n      </div>\n    </div>\n\n    <!-- ============================================================== -->\n    <!-- Refund address -->\n    <!-- ============================================================== -->\n    <div v-if=\"!inWallet\" class=\"mt-2\">\n      <div class=\"font-weight-medium textDark--text mb-2\">\n        What wallet are you sending your crypto from?\n      </div>\n      <module-address-book\n        ref=\"addressInput\"\n        label=\"Enter Crypto Address\"\n        :enable-save-address=\"false\"\n        :is-home-page=\"true\"\n        @setAddress=\"setAddress\"\n      />\n    </div>\n\n    <div class=\"pt-2 pb-10\">\n      <div class=\"mew-body textMedium--text\">\n        After submitting your sell order, you will have to send your crypto to\n        Moonpay. Make sure to have enough currency in your wallet to cover\n        network transaction fees.\n      </div>\n\n      <div\n        v-if=\"inWallet\"\n        class=\"d-flex align-center justify-space-between mt-4\"\n      >\n        <div class=\"mew-body textMedium--text\">Estimated Network Fee</div>\n        <div v-if=\"!estimatingFees\" class=\"mew-body textMedium--text\">\n          ~{{ txFeeInEth }}\n        </div>\n        <v-skeleton-loader v-else type=\"text\" width=\"150px\" />\n      </div>\n    </div>\n\n    <!-- ============================================================== -->\n    <!-- Sell button -->\n    <!-- ============================================================== -->\n    <mew-button\n      title=\"SELL WITH MOONPAY\"\n      btn-size=\"xlarge\"\n      has-full-width\n      :disabled=\"disableSell\"\n      :is-valid-address-func=\"isValidToAddress\"\n      @click.native=\"sell\"\n    />\n\n    <!-- ========================================================================= -->\n    <!-- Token select popup -->\n    <!-- ========================================================================= -->\n    <buy-sell-token-select\n      :open=\"openTokenSelect\"\n      :currency-items=\"currencyItems\"\n      :selected-currency=\"selectedCurrency\"\n      :set-currency=\"setCurrency\"\n      :in-wallet=\"inWallet\"\n      is-sell\n      @close=\"openTokenSelect = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport MultiCoinValidator from 'multicoin-address-validator';\nimport { mapActions, mapGetters, mapState } from 'vuex';\nimport { isEmpty, debounce, isNumber, isEqual } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { fromWei, toBN } from 'web3-utils';\nimport Web3 from 'web3';\n\nimport WALLET_TYPES from '@/modules/access-wallet/common/walletTypes';\nimport { ERROR, Toast } from '@/modules/toast/handler/handlerToast';\nimport handlerSend from '@/modules/send/handlers/handlerSend.js';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common.js';\nimport abi from '@/modules/balance/handlers/abiERC20.js';\nimport { formatFiatValue } from '@/core/helpers/numberFormatHelper';\nimport { toBase } from '@/core/helpers/unit';\nimport { sellContracts } from './tokenList';\nimport handlerWallet from '@/core/mixins/handlerWallet.mixin';\nimport ModuleAddressBook from '@/modules/address-book/ModuleAddressBook.vue';\nimport BuySellTokenSelect from '@/modules/buy-sell/components/TokenSelect.vue';\nimport { getCurrency } from '@/modules/settings/components/currencyList';\n\nexport default {\n  name: 'ModuleSellEth',\n  components: {\n    ButtonBalance: () => import('@/core/components/AppButtonBalance'),\n    ModuleAddressBook,\n    BuySellTokenSelect\n  },\n  mixins: [handlerWallet],\n  props: {\n    orderHandler: {\n      type: Object,\n      default: () => {}\n    },\n    close: {\n      type: Function,\n      default: () => {}\n    },\n    inWallet: {\n      type: Boolean,\n      default: false\n    },\n    defaultCurrency: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      selectedFiat: {\n        name: 'USD',\n        value: 'USD',\n        // eslint-disable-next-line\n        img: require(`@/assets/images/currencies/USD.svg`)\n      },\n      openTokenSelect: false,\n      selectedCurrency: this.defaultCurrency,\n      amount: '0',\n      fetchedData: {},\n      locGasPrice: '0',\n      sendHandler: {},\n      loading: true,\n      hasPersistentHint: false,\n      fetchingBalance: true,\n      gasLimit: 21000,\n      estimatingFees: true,\n      maxBalance: '0',\n      selectedBalance: '0',\n      toAddress: '',\n      validToAddress: false,\n      currencyRates: []\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'instance', 'web3']),\n    ...mapState('global', ['gasPriceType']),\n    ...mapGetters('wallet', ['balanceInETH', 'balanceInWei', 'tokensList']),\n    ...mapGetters('global', ['isEthNetwork', 'network', 'gasPriceByType']),\n    ...mapGetters('external', ['contractToToken']),\n    fiatCurrencyItems() {\n      const arrItems = this.hasData\n        ? this.fetchedData.fiat_currencies.filter(item => item !== 'RUB')\n        : ['USD'];\n      return getCurrency(arrItems);\n    },\n    persistentHintMessage() {\n      return this.hasPersistentHint\n        ? `Max adjusted to leave sufficient ${this.selectedCurrency.symbol} for network fee`\n        : '';\n    },\n    maxButton() {\n      return BigNumber(this.selectedBalance).gt(0)\n        ? {\n            title: 'Max',\n            method: this.setMax,\n            disabled:\n              this.nonMainnetMetamask ||\n              BigNumber(this.txFee).gte(this.selectedBalance)\n          }\n        : {};\n    },\n    currencyConfig() {\n      const fiat = this.selectedFiat.value;\n      const rate = this.currencyRates[fiat];\n      const currency = fiat;\n      return { rate, currency };\n    },\n    preselectedCurrencies() {\n      if (this.inWallet) {\n        return sellContracts.reduce((arr, item) => {\n          const inList = this.tokensList.find(t => {\n            if (t.contract.toLowerCase() === item.toLowerCase()) return t;\n          });\n          if (inList) {\n            inList.price = formatFiatValue(inList ? inList.price : '0').value;\n            arr.push(inList);\n            return arr;\n          }\n\n          const token = this.contractToToken(item);\n          if (token) {\n            token.price = formatFiatValue(\n              token ? token.price : '0',\n              this.currencyConfig\n            ).value;\n            arr.push(token);\n          }\n          return arr;\n        }, []);\n      }\n      const arr = new Array();\n      for (const contract of sellContracts) {\n        const token = this.contractToToken(contract);\n        if (token) {\n          token.price = formatFiatValue(token ? token.price : '0').value;\n          arr.push(token);\n        }\n      }\n      return arr;\n    },\n    currencyItems() {\n      const tokensList = this.preselectedCurrencies.map(token => {\n        token.name = token.symbol;\n        return token;\n      });\n      return tokensList;\n    },\n    supportedCurrency() {\n      return ['ETH', 'USDT', 'USDC', 'MATIC', 'BNB'];\n    },\n    supportedNetworks() {\n      return ['ETH', 'MATIC', 'BSC'];\n    },\n    name() {\n      return this.supportedCurrency.includes(this.selectedCurrency.symbol)\n        ? this.selectedCurrency.symbol\n        : this.network.type.currencyName;\n    },\n    disableSell() {\n      return (\n        !this.amount ||\n        this.amount === '' ||\n        BigNumber(this.amount).eq(0) ||\n        this.loading ||\n        this.errorMessages !== '' ||\n        !this.actualValidAddress\n      );\n    },\n    min() {\n      if (!isEmpty(this.fetchedData)) {\n        const found = this.fetchedData.limits.find(item => {\n          return item.crypto_currency === this.name && item.type === 'WEB';\n        });\n\n        if (found) {\n          return BigNumber(found.limit.min);\n        }\n      }\n      return BigNumber(0.015);\n    },\n    max() {\n      if (!isEmpty(this.fetchedData)) {\n        const found = this.fetchedData.limits.find(item => {\n          return item.crypto_currency === this.name && item.type === 'WEB';\n        });\n\n        if (found) {\n          return BigNumber(found.limit.max);\n        }\n      }\n      return BigNumber(3);\n    },\n    txFee() {\n      return fromWei(\n        BigNumber(this.locGasPrice).times(this.gasLimit).toString()\n      );\n    },\n    txFeeInEth() {\n      return `${BigNumber(this.txFee).decimalPlaces(4)} ${\n        this.network.type.currencyName\n      }`;\n    },\n    errorMessages() {\n      const symbol = this.selectedCurrency?.symbol\n        ? this.name\n        : this.network.type.currencyName;\n      const amount = BigNumber(this.amount);\n      if (this.nonMainnetMetamask) {\n        return 'Please switch your network to the Ethereum Mainnet on Metamask.';\n      }\n\n      if (BigNumber(this.selectedBalance).eq(0) && this.actualValidAddress) {\n        return `Address provided has no ${this.selectedCurrency.symbol}`;\n      }\n\n      if (amount.isNaN() || amount.eq(0)) {\n        return 'Amount required';\n      }\n\n      if (amount.lt(0)) {\n        return \"Amount can't be negative.\";\n      }\n\n      if (amount.gt(0) && amount.lt(this.min)) {\n        return `The minimum amount to sell is ${this.min.toString()} ${symbol}.`;\n      }\n      if (amount.gt(0) && amount.gt(this.max)) {\n        return `The maximum amount to sell is ${this.max.toString()} ${symbol}.`;\n      }\n\n      if (this.inWallet) {\n        if (amount.gt(this.selectedBalance)) {\n          return `You do not have enough ${symbol} to sell.`;\n        }\n        if (\n          !isEmpty(this.sendHandler) &&\n          !this.sendHandler.hasEnoughBalance()\n        ) {\n          return `You do not have enough ETH to pay for network fee.`;\n        }\n      } else {\n        // Not in wallet\n        if (\n          this.actualValidAddress &&\n          this.isValidAmount &&\n          !this.hasEnoughAssets\n        ) {\n          return 'Address provided does not have enough balance to complete the transaction';\n        }\n      }\n      if (\n        this.amount &&\n        !handlerSend.helpers.hasValidDecimals(\n          this.amount,\n          this.selectedCurrency.decimals\n        )\n      ) {\n        return `Invalid decimals! Max decimals for selected currency is ${this.selectedCurrency.decimals}`;\n      }\n\n      return '';\n    },\n    nonMainnetMetamask() {\n      return (\n        this.instance &&\n        this.instance.identifier === WALLET_TYPES.WEB3_WALLET &&\n        this.network?.type.name !== 'ETH'\n      );\n    },\n    isValidAmount() {\n      /** !amount */\n      if (!this.amount) {\n        return false;\n      }\n      if (!isNumber(this.selectedCurrency?.decimals)) {\n        return false;\n      }\n      /** amount is negative */\n      if (BigNumber(this.amount).lt(0)) {\n        return false;\n      }\n      /** return amount has valid decimals */\n      return handlerSend.helpers.hasValidDecimals(\n        this.amount,\n        this.selectedCurrency.decimals\n      );\n    },\n    getCalculatedAmount() {\n      const amount = new BigNumber(this.amount ? this.amount : 0)\n        .times(new BigNumber(10).pow(this.selectedCurrency.decimals))\n        .toFixed(0);\n      return toBN(amount);\n    },\n    getAmountBN() {\n      // Duplicate of getCalculatedAmount\n      if (!this.isValidAmount) return toBN(0);\n      const amount = toBase(\n        this.amount ? this.amount : 0,\n        this.selectedCurrency.decimals\n      );\n      return toBN(amount);\n    },\n    hasEnoughAssets() {\n      try {\n        const bal = toBase(\n          this.selectedBalance,\n          this.selectedCurrency.decimals\n        );\n        return toBN(bal).gte(this.getAmountBN);\n      } catch (e) {\n        Toast(e, {}, ERROR);\n        return false;\n      }\n    },\n    actualAddress() {\n      return this.inWallet ? this.address : this.toAddress;\n    },\n    actualValidAddress() {\n      return this.inWallet ? true : this.validToAddress;\n    },\n    hasData() {\n      return !isEmpty(this.fetchedData);\n    },\n    cryptoAmount() {\n      return BigNumber(this.amount).times(this.priceOb.price).toString();\n    },\n    selectedFiatName() {\n      return this.selectedFiat.name;\n    },\n    priceOb() {\n      return !isEmpty(this.fetchedData)\n        ? this.fetchedData.prices.find(\n            item => item.fiat_currency === this.selectedFiatName\n          )\n        : { crypto_currency: 'ETH', fiat_currency: 'USD', price: '3379.08322' };\n    }\n  },\n  watch: {\n    toAddress() {\n      this.amount = '0';\n    },\n    selectedCurrency: {\n      handler: function (newVal) {\n        this.maxBalance = '0';\n        this.hasPersistentHint = false;\n        this.selectedBalance = '0';\n        if (\n          !isEmpty(this.sendHandler) &&\n          this.selectedCurrency.hasOwnProperty('name')\n        ) {\n          this.sendHandler.setCurrency(newVal);\n        }\n        this.fetchSellInfo();\n      },\n      deep: true\n    },\n    selectedFiat: {\n      handler: function (newVal, oldVal) {\n        if (!isEqual(newVal, oldVal)) {\n          this.$emit('selectedFiat', newVal);\n        }\n      },\n      deep: true\n    },\n    amount(newVal) {\n      this.debouncedSetAmount(newVal);\n    },\n    gasPriceType(newVal) {\n      this.locGasPrice = this.gasPriceByType(newVal);\n    },\n    locGasPrice(val) {\n      this.sendHandler.setLocalGasPrice(val);\n    },\n    gasLimit(val) {\n      this.sendHandler.setGasLimit(val);\n    },\n    orderHandler: {\n      handler: function () {\n        this.sendHandler = new handlerSend();\n        this.fetchSellInfo();\n        this.locGasPrice = this.gasPriceByType(this.gasPriceType);\n      },\n      deep: true\n    },\n    network() {\n      this.maxBalance = '0';\n      this.hasPersistentHint = false;\n      this.selectedBalance = '0';\n      this.amount = '0';\n      this.selectedCurrency = {};\n      this.selectedCurrency = this.defaultCurrency;\n      if (this.supportedNetworks.includes(this.network.type.name)) {\n        this.sendHandler = new handlerSend();\n        this.fetchSellInfo();\n        this.locGasPrice = this.gasPriceByType(this.gasPriceType);\n      }\n    }\n  },\n  mounted() {\n    if (!this.inWallet) this.$refs.addressInput.$refs.addressSelect.clear();\n    this.sendHandler = new handlerSend();\n    this.fetchSellInfo();\n    this.locGasPrice = this.gasPriceByType(this.gasPriceType);\n  },\n  methods: {\n    ...mapActions('external', ['setCoinGeckoTokens']),\n    setAddress(newVal, isValid, data) {\n      if (data.type === 'RESOLVED' && !data.value.includes('.'))\n        this.toAddress = data.value;\n      else this.toAddress = newVal;\n      this.validToAddress = isValid;\n      if (!this.validToAddress) return;\n      this.sendHandler.setFrom(this.toAddress);\n      this.fetchSellInfo();\n    },\n    getEthBalance() {\n      if (!this.actualValidAddress) return;\n      const web3Instance = this.inWallet\n        ? this.web3\n        : new Web3(this.network.url);\n      web3Instance.eth.getBalance(this.actualAddress).then(res => {\n        this.fetchingBalance = false;\n        this.selectedBalance = fromWei(res);\n      });\n    },\n    getTokenBalance() {\n      if (!this.actualValidAddress) return;\n      const web3Instance = this.inWallet\n        ? this.web3\n        : new Web3(this.network.url);\n      const contract = new web3Instance.eth.Contract(\n        abi,\n        this.selectedCurrency.contract\n      );\n      contract.methods\n        .balanceOf(this.actualAddress)\n        .call()\n        .then(res => {\n          this.fetchingBalance = false;\n          this.selectedBalance = BigNumber(res)\n            .div(BigNumber(10).pow(this.selectedCurrency.decimals))\n            .toString();\n        });\n    },\n    debouncedSetAmount: debounce(function (newVal) {\n      if (!BigNumber(newVal).eq(this.maxBalance)) {\n        this.hasPersistentHint = false;\n      }\n\n      if (BigNumber(newVal).lt(0)) {\n        return;\n      }\n      if (\n        newVal &&\n        !isEmpty(this.sendHandler) &&\n        this.isValidAmount &&\n        this.inWallet\n      ) {\n        const newValue = BigNumber(newVal ? newVal : 0)\n          .times(\n            BigNumber(10).pow(\n              this.selectedCurrency?.decimals\n                ? this.selectedCurrency.decimals\n                : 18\n            )\n          )\n          .toString();\n        this.sendHandler.setValue(newValue);\n        if (this.errorMessages === '' && this.hasEnoughAssets) {\n          this.estimatingFees = true;\n          this.sendHandler\n            .estimateGas()\n            .then(res => {\n              this.estimatingFees = false;\n              this.gasLimit = res;\n            })\n            .catch(err => {\n              Toast(err, {}, ERROR);\n            });\n        }\n      }\n    }, 500),\n    setCurrency(e) {\n      this.amount = '0';\n      this.selectedCurrency = e;\n    },\n    setMax() {\n      if (\n        this.selectedCurrency.contract !== MAIN_TOKEN_ADDRESS ||\n        this.inWallet\n      ) {\n        const bal = this.sendHandler.getEntireBal();\n        if (bal) {\n          this.amount = BigNumber(bal)\n            .div(\n              BigNumber(10).pow(\n                this.selectedCurrency.hasOwnProperty('name')\n                  ? this.selectedCurrency.decimals\n                  : 18\n              )\n            )\n            .toString();\n        } else {\n          this.amount = this.selectedBalance;\n        }\n      } else {\n        this.amount = BigNumber(this.max).lt(this.selectedBalance)\n          ? this.max.toString()\n          : BigNumber(this.selectedBalance).minus(this.txFee).toString();\n      }\n      this.maxBalance = this.amount;\n      this.hasPersistentHint = true;\n    },\n    sell() {\n      this.orderHandler\n        .sell(this.name, this.amount, this.actualAddress)\n        .then(() => {\n          this.amount = '0';\n          this.close();\n          this.selectedCurrency = this.defaultCurrency;\n        })\n        .catch(err => {\n          Toast(err, {}, ERROR);\n          this.amount = '0';\n          this.close();\n          this.selectedCurrency = this.defaultCurrency;\n        });\n    },\n    fetchSellInfo() {\n      if (this.actualValidAddress && this.selectedCurrency.contract) {\n        this.fetchingBalance = true;\n        if (this.selectedCurrency.contract === MAIN_TOKEN_ADDRESS) {\n          this.getEthBalance();\n        } else {\n          this.getTokenBalance();\n        }\n        if (this.hasEnoughAssets) {\n          this.sendHandler.setFrom(this.actualAddress);\n          this.sendHandler.setCurrency(this.selectedCurrency);\n          this.sendHandler.setValue(this.getCalculatedAmount);\n          // eslint-disable-next-line\n          this.sendHandler.setTo(ETH_DONATION_ADDRESS, 'TYPED');\n          this.estimatingFees = true;\n          this.sendHandler\n            .estimateGas()\n            .then(res => {\n              this.estimatingFees = false;\n              this.gasLimit = res;\n            })\n            .catch(err => {\n              Toast(err, {}, ERROR);\n            });\n        }\n      } else {\n        this.fetchingBalance = false;\n        this.selectedBalance = fromWei('0');\n      }\n      this.orderHandler\n        .getSupportedFiatToSell(this.name)\n        .then(res => {\n          this.loading = false;\n          this.fetchedData = res[0];\n        })\n        .catch(e => {\n          this.loading = false;\n          Toast(e, {}, ERROR);\n        });\n    },\n    isValidToAddress(address) {\n      return MultiCoinValidator.validate(address, this.selectedCurrency.symbol);\n    },\n    preventCharE(e) {\n      if (e.key === 'e') e.preventDefault();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.token-select-button {\n  height: 56px;\n  border: 1px solid var(--v-inputBorder-base);\n  border-radius: 0 8px 8px 0;\n  width: 135px;\n  padding: 0 11px 0 14px;\n  line-height: initial;\n  user-select: none;\n  cursor: pointer;\n  &:hover {\n    border: 1px solid var(--v-greyPrimary-base);\n  }\n}\n</style>\n<style lang=\"scss\">\n.moonpay-sell-component {\n  .v-input__slot {\n    height: 47px !important;\n  }\n\n  .no-right-border {\n    fieldset {\n      border-radius: 8px 0 0 8px !important;\n    }\n  }\n  .no-left-border fieldset {\n    border-radius: 0 8px 8px 0 !important;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SellComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SellComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SellComponent.vue?vue&type=template&id=04d4e172&scoped=true&\"\nimport script from \"./SellComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./SellComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SellComponent.vue?vue&type=style&index=0&id=04d4e172&prod&lang=scss&scoped=true&\"\nimport style1 from \"./SellComponent.vue?vue&type=style&index=1&id=04d4e172&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"04d4e172\",\n  null\n  \n)\n\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getEthBalance\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getEthBalance\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getLatestPrices\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getLatestPrices\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"contract\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"current_price\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"market_cap\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"total_volume\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price_change_percentage_24h\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"total_supply\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"name\":{\"kind\":\"Name\",\"value\":\"subscribeToAccountBalance\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"event\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"AddressEventType\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"addressEvent\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"event\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"event\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"blockNumber\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":448}};\n    doc.loc.source = {\"body\":\"query getEthBalance($hash: String!) {\\n  getEthBalance(owner: $hash) {\\n    balance\\n  }\\n}\\n\\nquery getLatestPrices {\\n  getLatestPrices {\\n    id\\n    symbol\\n    name\\n    image\\n    contract\\n    current_price\\n    market_cap\\n    total_volume\\n    price_change_percentage_24h\\n    total_supply\\n  }\\n}\\n\\nsubscription subscribeToAccountBalance(\\n  $owner: String!\\n  $event: AddressEventType!\\n) {\\n  addressEvent(owner: $owner, event: $event) {\\n    blockNumber\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"getEthBalance\"] = oneQuery(doc, \"getEthBalance\");\n        \n        module.exports[\"getLatestPrices\"] = oneQuery(doc, \"getLatestPrices\");\n        \n        module.exports[\"subscribeToAccountBalance\"] = oneQuery(doc, \"subscribeToAccountBalance\");\n        \n","/**\n * The Wallet View Apollo Mixin\n */\nimport { mapActions } from 'vuex';\nimport { getLatestPrices } from '@/apollo/queries/wallets/wallets.graphql';\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\nexport default {\n  name: 'HandlerWallet',\n  data() {\n    return {\n      getLatestPrices: '',\n      tokensData: {}\n    };\n  },\n  apollo: {\n    /**\n     * Apollo query to fetch latest tokens\n     * also set the state for eth price\n     */\n    getLatestPrices: {\n      query: getLatestPrices,\n      pollInterval: 600000,\n      result({ data }) {\n        this.tokensData = new Map();\n        if (data && data.getLatestPrices) {\n          data.getLatestPrices.forEach(token => {\n            this.tokensData.set(token.id, token);\n          });\n          this.setCoinGeckoTokens(this.tokensData);\n        }\n      },\n      error(error) {\n        Toast(error.message, {}, ERROR);\n      }\n    }\n  },\n  methods: {\n    ...mapActions('external', ['setCoinGeckoTokens'])\n  }\n};\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SellComponent.vue?vue&type=style&index=1&id=04d4e172&prod&lang=scss&\"","export default {\n  INVALID_TO_ADDRESS: 'Invalid to address',\n  INVALID_FROM_ADDRESS: 'Invalid from address',\n  INVALID_DATA_HEX: 'Invalid hex string for data',\n  NEGATIVE_VALUE: 'negative value'\n};\n","import { toBN, toHex, toChecksumAddress, isHexStrict } from 'web3-utils';\nimport { isAddress } from '@/core/helpers/addressUtils';\nimport SanitizeHex from '@/core/helpers/sanitizeHex';\nimport { Transaction } from '@ethereumjs/tx';\nimport { mapState, mapGetters } from 'vuex';\nimport vuexStore from '@/core/store';\nimport ErrorList from '../errors';\nimport Web3Contract from 'web3-eth-contract';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport hasValidDecimals from '@/core/helpers/hasValidDecimals.js';\nimport { isNull } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { toBNSafe } from '@/core/helpers/numberFormatHelper';\n\nclass SendTransaction {\n  constructor() {\n    this.$store = vuexStore;\n    Object.assign(this, mapState('wallet', ['balance', 'web3', 'address']));\n    Object.assign(this, mapGetters('global', ['network']));\n    this.currency = null;\n    this.localGasPrice = '0';\n    this.TX = {\n      from: '0x',\n      to: '0x',\n      destination: '0x',\n      nonce: '0x',\n      gasPrice: '0x',\n      gas: '0x5208', //21000\n      value: '0x',\n      destinationValue: '0x',\n      data: '0x'\n    };\n  }\n  setTo(_to, _type) {\n    if (isAddress(_to)) {\n      this.TX.destination = _to;\n      this.TX.toDetails = _type;\n    } else throw ErrorList.INVALID_TO_ADDRESS;\n  }\n  _setTo() {\n    this.TX.to = this.isToken()\n      ? toChecksumAddress(this.currency.contract)\n      : toChecksumAddress(this.TX.destination);\n  }\n  setFrom(_from) {\n    if (isAddress(_from)) this.TX.from = _from;\n    else throw ErrorList.INVALID_FROM_ADDRESS;\n  }\n  _setGasPrice() {\n    this.TX.gasPrice = toHex(toBN(this.localGasPrice));\n  }\n  setGasLimit(_gasLimit) {\n    this.TX.gas = toHex(toBN(_gasLimit));\n  }\n  setLocalGasPrice(gasPrice) {\n    this.localGasPrice = toHex(toBN(gasPrice));\n  }\n  setValue(_value) {\n    if (isNaN(_value) || isNull(_value)) _value = 0;\n    const _valueBN = new BigNumber(_value);\n    if (!_valueBN.lt(0)) this.TX.destinationValue = toHex(_valueBN.toFixed());\n    else throw ErrorList.NEGATIVE_VALUE;\n  }\n  _setValue() {\n    if (this.isToken()) {\n      this.TX.value = '0x00';\n      this.setData(\n        this.getTokenTransferABI(this.TX.destinationValue, this.TX.destination)\n      );\n    } else {\n      this.TX.value = toHex(toBN(this.TX.destinationValue));\n    }\n  }\n  setData(_data) {\n    if (isHexStrict(_data)) this.TX.data = SanitizeHex(_data);\n    else throw ErrorList.INVALID_DATA_HEX;\n  }\n  setNonce(_nonce) {\n    this.TX.nonce = toHex(toBN(_nonce));\n  }\n  setCurrency(_currency) {\n    this.currency = _currency;\n    this.TX.data = '0x';\n  }\n  getEntireBal() {\n    if (this.isToken()) {\n      return this.currency.balance;\n    }\n    const gasPriceBN = toBN(this.localGasPrice);\n    const fee = gasPriceBN.mul(toBN(this.TX.gas));\n    return this.balance().gt(this.balance().sub(fee))\n      ? this.balance().sub(fee)\n      : 0;\n  }\n  txFee() {\n    return toBN(this.localGasPrice).mul(toBN(this.TX.gas));\n  }\n  estimateGas() {\n    if (this.address()) this.setFrom(this.address());\n    this._setTo();\n    this._setValue();\n    this._setGasPrice();\n    return this.web3().eth.estimateGas({\n      data: this.TX.data,\n      from: this.TX.from,\n      to: this.TX.to,\n      value: this.TX.value\n    });\n  }\n  isToken() {\n    return this.currency?.contract !== MAIN_TOKEN_ADDRESS;\n  }\n  hasEnoughBalance() {\n    const amount = toBN(this.TX.destinationValue);\n    if (this.isToken() && this.currency.balance) {\n      const hasAmountToken = amount.lte(toBNSafe(this.currency.balance));\n      const hasGas = this.txFee().lte(this.balance());\n      return hasAmountToken && hasGas;\n    }\n    return amount.add(this.txFee()).lte(this.balance());\n  }\n  getTokenTransferABI(amount, _toAddress) {\n    amount = toBN(amount);\n    const jsonInterface = [\n      {\n        constant: false,\n        inputs: [\n          { name: '_to', type: 'address' },\n          { name: '_amount', type: 'uint256' }\n        ],\n        name: 'transfer',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function'\n      }\n    ];\n    const contract = new Web3Contract(jsonInterface);\n    return contract.methods\n      .transfer(_toAddress.toLowerCase(), amount)\n      .encodeABI();\n  }\n  async submitTransaction() {\n    try {\n      this._setTo();\n      this._setValue();\n      this._setGasPrice();\n      const nonce = await this.web3().eth.getTransactionCount(this.address());\n      this.setNonce(nonce);\n      this.TX.gasLimit = this.TX.gas;\n      const _tx = Transaction.fromTxData(this.TX);\n      const json = _tx.toJSON(true);\n      json.from = this.address();\n      json.toDetails = this.TX.toDetails;\n      return this.web3().eth.sendTransaction(json);\n    } catch (e) {\n      return e;\n    }\n  }\n}\nSendTransaction.helpers = {\n  hasValidDecimals\n};\nexport default SendTransaction;\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return call(URL.prototype.toString, this);\n  }\n});\n"],"sourceRoot":""}
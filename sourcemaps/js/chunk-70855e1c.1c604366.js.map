{"version":3,"sources":["webpack:///./src/dapps/staked-dapp/components/WithdrawalPopup.vue?8606","webpack:///src/dapps/staked-dapp/components/WithdrawalPopup.vue","webpack:///./src/dapps/staked-dapp/components/WithdrawalPopup.vue?a456","webpack:///./src/dapps/staked-dapp/components/WithdrawalPopup.vue","webpack:///./src/dapps/staked-dapp/components/WithdrawalPopup.vue?ed1e","webpack:///./src/assets/images/icons/icon-mnemonic.svg"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","openWithdrawalModal","modalTitle","leftBtn","step","staticClass","_v","ref","currencyName","on","setAddress","_e","_l","btn","key","class","staticStyle","nativeOn","$event","fn","apply","arguments","_s","label","icon","uploadFile","model","value","callback","$$v","password","expression","n","refInFor","phrase","$set","executionAddress","back","nextButton","title","disabled","loadingButton","staticRenderFns","components","phraseBlock","ModuleAddressBook","props","reset","type","default","selectedValidator","data","isValidAddress","selectedRecoveryType","file","blsExecution","length","computed","phraseToLength","isValidMnemonic","parsedPhrase","buttons","text","color","method","isKeystore","isMnemonic","validPassword","watch","deep","handler","splitVal","newObj","methods","setWithdrawalAddress","fetch","headers","body","signed","then","Toast","JSON","WARNING","finally","checkPhrase","Object","changed","selectedNetwork","mnemonic","clear","setType","reader","userSelectFile","jsonInput","nextStep","closeModal","component","module","exports"],"mappings":"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AAa,CAACE,MAAM,CAAC,MAAQN,EAAI4C,WAAWC,MAAM,SAAW7C,EAAI4C,WAAWE,SAAS,QAAU9C,EAAI+C,cAAc,WAAW,UAAUxB,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAO,WACxOxB,EAAI4C,WAAWnB,MACdC,MAAM,KAAMC,eAAe3B,EAAIiB,MAAM,QAC9C+B,EAAkB,G,kFCwKP,GACfC,YACAC,gEACAC,uEAEAC,OACAC,OACAC,cACAC,gBAEAhD,qBACA+C,aACAC,YAEAC,mBACAF,YACAC,iBAGAE,OACA,OACA/C,OACAgC,oBACAgB,kBACAC,wBACAC,QACAxB,YACAyB,gBACArB,UACAsB,UACAf,mBAGAgB,aACA,wCACA,qCACAnB,aACA,SACAC,aACAC,YACArB,kBAEA,qBACA,oBACAqB,0DACArB,mBAGA,cACA,gBACA,oBACAqB,iDACArB,6BAIA,oBACAqB,+BACArB,6BAGA,cACA,oBACAoB,+BACAC,4BACArB,+BAIA,GAEAuC,iBACA,mCAEA,OADA,6CACA,GAEAC,kBACA,iDAEAC,eACA,oDAMAC,UACA,OAEA,CACAtC,iBACAC,eACAL,QACA,wBAIA,CACAI,wBACAC,eACAL,QACA,kCASAX,eACA,uCAOAL,UACA,OACA2D,cACAC,cACAC,yBAOA9D,aACA,qBACA,6BACA,cACA,yBACA,+BACA,0BACA,+BACA,wBACA,cACA,iBACA,IAMA+D,aACA,oDAMAC,aACA,oDAEAC,gBACA,gCAGAC,OACAlC,QACAmC,QACAC,oBACA,6DACA,oBACA,wBACA,iCACA,qBACA,WACAC,kBACAC,yBAEA,mBAMAC,YACA,oDACAC,uBACA,QACA,mDACA,gDACA,mDACA,2CAEA,sBACAC,SACAX,aACAY,SACA,mCAEAC,qBACAC,+BAGAC,QACA,MACA,oEACAC,kEAGA,kBAEAC,2BACA,qDAGA,+DACAD,eACA,4DACA,GACAE,SAGAF,mDAIAG,aACA,gBAGAC,eACA,WACA,SACAC,iCACA,wBACAC,KADA,yBAGA,oBAMA,2BACA,sBACA,IACA,mBACA,QACA,kDACA,gBACA,4DACA,UACA,cACA,sBACA,uCACA,2DACAC,GAGA,4DACA,CACAC,4BAEA,sBACA,uCACA,2DACAD,GAGA,sBACA,gBACA,SACA,sBACAP,4BACA,eAGAS,QACA,yBACA,gCAEA,YACA,mCACA,uBACA,6BACA,aACA,iBACA,qBACA,eACA,sBACA,cAKAC,WACA,4BACA,iBAKAjE,cACA,uBACAkE,gBACA,IACA,sCACA,8BACA,SACAX,sCAGAW,yCAEAC,iBACA,6BACAC,WACAA,WAKAC,WACA,cAKAzD,OACA,6BACA,kBACA,OACA,6BACAwD,WACA,MACA,OACA,iBACA,eACA,aACA,MACA,QACA,MAEA,cAKAnF,gBACA,wBACA,uBAKAqF,aACA,gBC5gBuX,I,wBCQnXC,EAAY,eACd,EACAvG,EACAiD,GACA,EACA,KACA,WACA,MAIa,aAAAsD,E,sECnBf,W,uBCAAC,EAAOC,QAAU,IAA0B","file":"js/chunk-70855e1c.1c604366.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-popup',{attrs:{\"max-width\":\"690px\",\"show\":_vm.openWithdrawalModal,\"has-buttons\":false,\"has-body-content\":true,\"title\":_vm.modalTitle,\"left-btn\":_vm.leftBtn}},[_c('div',[(_vm.step === 1)?_c('div',{staticClass:\"text-center\"},[_c('mew-warning-sheet',{staticClass:\"mb-5\",attrs:{\"title\":\"\",\"description\":\"The withdrawal address can only be set once and can never be changed. Please make sure the withdrawal address you are setting is a non-custodial wallet to which you have full access with a recovery phrase or private key. Do NOT use an exchange address or a smart contract wallet.\"}}),_c('div',{staticClass:\"mew-heading-3 mb-3 text-left\"},[_vm._v(\"Your Withdrawal Address\")]),_c('module-address-book',{ref:\"addressInput\",staticClass:\"AddressInput\",attrs:{\"label\":\"Address\",\"preselect-curr-wallet-adr\":true,\"currency\":_vm.currencyName},on:{\"setAddress\":_vm.setAddress}})],1):_vm._e(),(_vm.step === 2)?_c('div',{staticClass:\"text-center\"},[_vm._l((_vm.buttons),function(btn,key){return _c('div',{key:key,staticClass:\"mb-5\"},[_c('mew-button',{class:btn.class,staticStyle:{\"height\":\"160px\"},attrs:{\"has-full-width\":\"\",\"color-theme\":\"greyMedium\",\"btn-style\":\"outline\"},nativeOn:{\"click\":function($event){return btn.fn.apply(null, arguments)}}},[_c('div',{staticClass:\"text-left d-flex align-center justify-space-between px-2\",staticStyle:{\"width\":\"100%\"}},[_c('div',{staticClass:\"mew-heading-2 textDark--text\"},[_vm._v(\" \"+_vm._s(btn.label)+\" \")]),_c('img',{staticClass:\"mr-4 d-none d-sm-block\",attrs:{\"width\":\"80\",\"src\":btn.icon}})])])],1)}),_c('input',{ref:\"jsonInput\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"name\":\"file\"},on:{\"change\":_vm.uploadFile}})],2):_vm._e(),(_vm.step === 3)?_c('div',{staticClass:\"text-center\"},[(_vm.isKeystore)?_c('div',[_c('mew-input',{ref:\"passwordInput\",attrs:{\"label\":\"Enter Password\",\"placeholder\":\"Enter my keystore password\",\"type\":\"password\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}})],1):_vm._e(),(_vm.isMnemonic)?_c('div',[_c('phrase-block',{staticClass:\"mb-8\"},[_c('v-row',_vm._l((_vm.length),function(n){return _c('v-col',{key:(\"mnemonicInput\" + n),attrs:{\"cols\":\"6\",\"lg\":\"3\",\"md\":\"3\",\"sm\":\"4\"}},[_c('v-text-field',{ref:(\"mnemonicInput\" + n),refInFor:true,attrs:{\"name\":(\"mnemonicInput\" + n),\"label\":(n + \".\"),\"autocomplete\":\"off\",\"autofocus\":n === 1},model:{value:(_vm.phrase[n]),callback:function ($$v) {_vm.$set(_vm.phrase, n, $$v)},expression:\"phrase[n]\"}})],1)}),1)],1)],1):_vm._e()]):_vm._e(),(_vm.step === 4)?_c('div',{staticClass:\"mb-2\"},[_c('mew-sheet',{staticClass:\"pa-4\"},[_c('div',{staticClass:\"mew-heading-3 black--text\"},[_vm._v(\" Setting address: \"+_vm._s(_vm.executionAddress)+\" as the withdrawal address. \")])]),_c('mew-warning-sheet',{staticClass:\"my-4\",attrs:{\"title\":\"Please verify\",\"description\":\"The withdrawal address can only be set once. Please make sure you are setting the correct address.\"}})],1):_vm._e(),_c('div',{staticClass:\"mb-2 text-center d-flex align-center justify-center\"},[(_vm.step > 1)?_c('mew-button',{staticClass:\"mr-2\",attrs:{\"title\":\"Back\",\"btn-style\":\"outline\",\"btn-size\":\"xlarge\"},nativeOn:{\"click\":function($event){return (function () {\n            _vm.back();\n          }).apply(null, arguments)}}}):_vm._e(),(_vm.step != 2)?_c('mew-button',{attrs:{\"title\":_vm.nextButton.title,\"disabled\":_vm.nextButton.disabled,\"loading\":_vm.loadingButton,\"btn-size\":\"xlarge\"},nativeOn:{\"click\":function($event){return (function () {\n            _vm.nextButton.fn();\n          }).apply(null, arguments)}}}):_vm._e()],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!--\n    ===================================================\n    Staked Status Tab\n    ===================================================\n    -->\n  <mew-popup\n    max-width=\"690px\"\n    :show=\"openWithdrawalModal\"\n    :has-buttons=\"false\"\n    :has-body-content=\"true\"\n    :title=\"modalTitle\"\n    :left-btn=\"leftBtn\"\n  >\n    <div>\n      <!-- Step 1: Ask user for execution address -->\n      <div v-if=\"step === 1\" class=\"text-center\">\n        <mew-warning-sheet\n          class=\"mb-5\"\n          title=\"\"\n          description=\"The withdrawal address can only be set once and can never be changed. Please make sure the withdrawal address you are setting is a non-custodial wallet to which you have full access with a recovery phrase or private key. Do NOT use an exchange address or a smart contract wallet.\"\n        />\n        <div class=\"mew-heading-3 mb-3 text-left\">Your Withdrawal Address</div>\n        <module-address-book\n          ref=\"addressInput\"\n          class=\"AddressInput\"\n          label=\"Address\"\n          :preselect-curr-wallet-adr=\"true\"\n          :currency=\"currencyName\"\n          @setAddress=\"setAddress\"\n        />\n      </div>\n      <!-- Step 2: Ask user for wallet type -->\n      <div v-if=\"step === 2\" class=\"text-center\">\n        <div v-for=\"(btn, key) in buttons\" :key=\"key\" class=\"mb-5\">\n          <mew-button\n            :class=\"btn.class\"\n            has-full-width\n            color-theme=\"greyMedium\"\n            btn-style=\"outline\"\n            style=\"height: 160px\"\n            @click.native=\"btn.fn\"\n          >\n            <div\n              class=\"text-left d-flex align-center justify-space-between px-2\"\n              style=\"width: 100%\"\n            >\n              <div class=\"mew-heading-2 textDark--text\">\n                {{ btn.label }}\n              </div>\n              <img width=\"80\" class=\"mr-4 d-none d-sm-block\" :src=\"btn.icon\" />\n            </div>\n          </mew-button>\n        </div>\n        <input\n          ref=\"jsonInput\"\n          type=\"file\"\n          name=\"file\"\n          style=\"display: none\"\n          @change=\"uploadFile\"\n        />\n      </div>\n      <!-- Step 3: Ask user for wallet inputs -->\n      <div v-if=\"step === 3\" class=\"text-center\">\n        <!--\n          ===================================================\n          Keystore\n          ===================================================\n          -->\n        <div v-if=\"isKeystore\">\n          <mew-input\n            ref=\"passwordInput\"\n            v-model=\"password\"\n            label=\"Enter Password\"\n            placeholder=\"Enter my keystore password\"\n            type=\"password\"\n          />\n        </div>\n        <!--\n          ===================================================\n          Mnemonic\n          ===================================================\n          -->\n        <div v-if=\"isMnemonic\">\n          <!--\n          =====================================================================================\n            Enter Phrase Block\n          =====================================================================================\n          -->\n          <phrase-block class=\"mb-8\">\n            <v-row>\n              <v-col\n                v-for=\"n in length\"\n                :key=\"`mnemonicInput${n}`\"\n                cols=\"6\"\n                lg=\"3\"\n                md=\"3\"\n                sm=\"4\"\n              >\n                <v-text-field\n                  :ref=\"`mnemonicInput${n}`\"\n                  v-model=\"phrase[n]\"\n                  :name=\"`mnemonicInput${n}`\"\n                  :label=\"`${n}.`\"\n                  autocomplete=\"off\"\n                  :autofocus=\"n === 1\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </phrase-block>\n        </div>\n      </div>\n      <!-- Step 4: Warning -->\n      <div v-if=\"step === 4\" class=\"mb-2\">\n        <mew-sheet class=\"pa-4\">\n          <div class=\"mew-heading-3 black--text\">\n            Setting address: {{ executionAddress }} as the withdrawal address.\n          </div>\n        </mew-sheet>\n        <mew-warning-sheet\n          class=\"my-4\"\n          title=\"Please verify\"\n          description=\"The withdrawal address can only be set once. Please make sure you are setting the correct address.\"\n        />\n      </div>\n      <!-- Next and Back Buttons -->\n      <div class=\"mb-2 text-center d-flex align-center justify-center\">\n        <mew-button\n          v-if=\"step > 1\"\n          class=\"mr-2\"\n          title=\"Back\"\n          btn-style=\"outline\"\n          btn-size=\"xlarge\"\n          @click.native=\"\n            () => {\n              back();\n            }\n          \"\n        />\n        <mew-button\n          v-if=\"step != 2\"\n          :title=\"nextButton.title\"\n          :disabled=\"nextButton.disabled\"\n          :loading=\"loadingButton\"\n          btn-size=\"xlarge\"\n          @click.native=\"\n            () => {\n              nextButton.fn();\n            }\n          \"\n        />\n      </div>\n    </div>\n  </mew-popup>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapActions } from 'vuex';\nimport {\n  keystoreToBLSExecution,\n  mnemonicToBLSExecution\n} from '@myetherwallet/eth2-keystore';\n\nimport {\n  Toast,\n  ERROR,\n  SUCCESS,\n  WARNING\n} from '@/modules/toast/handler/handlerToast';\nimport { SOFTWARE_WALLET_TYPES } from '@/modules/access-wallet/software/handlers/helpers.js';\n\nimport { isEmpty } from 'lodash';\n\nexport default {\n  components: {\n    phraseBlock: () => import('@/components/PhraseBlock'),\n    ModuleAddressBook: () => import('@/modules/address-book/ModuleAddressBook')\n  },\n  props: {\n    reset: {\n      type: Function,\n      default: () => {}\n    },\n    openWithdrawalModal: {\n      type: Boolean,\n      default: false\n    },\n    selectedValidator: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      step: 1,\n      executionAddress: '',\n      isValidAddress: false,\n      selectedRecoveryType: '',\n      file: {},\n      password: '',\n      blsExecution: '',\n      phrase: {},\n      length: 24,\n      loadingButton: false\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address']),\n    ...mapGetters('global', ['network']),\n    nextButton() {\n      const obj = {\n        title: 'Next',\n        disabled: false,\n        fn: this.nextStep\n      };\n      if (this.step === 1) {\n        return Object.assign({}, obj, {\n          disabled: !this.isValidAddress && this.executionAddress !== '',\n          fn: this.nextStep\n        });\n      }\n      if (this.step === 3) {\n        if (this.isKeystore) {\n          return Object.assign({}, obj, {\n            disabled: this.loadingButton || !this.validPassword,\n            fn: this.validateUserInputs\n          });\n        }\n\n        return Object.assign({}, obj, {\n          disabled: !this.isValidMnemonic,\n          fn: this.validateUserInputs\n        });\n      }\n      if (this.step === 4) {\n        return Object.assign({}, obj, {\n          title: 'Set withdrawal address',\n          disabled: this.loadingButton,\n          fn: this.setWithdrawalAddress\n        });\n      }\n\n      return obj;\n    },\n    phraseToLength() {\n      const phrase = Object.values(this.phrase);\n      if (phrase.length > this.length) phrase.length = this.length;\n      return phrase;\n    },\n    isValidMnemonic() {\n      return this.phraseToLength.length === this.length;\n    },\n    parsedPhrase() {\n      return this.phraseToLength.join(' ').toLowerCase();\n    },\n    /**\n     * @returns array\n     * returns button configs\n     */\n    buttons() {\n      return [\n        /* Keystore Button */\n        {\n          label: 'Keystore',\n          icon: require('@/assets/images/icons/icon-keystore-file.svg'),\n          fn: () => {\n            this.userSelectFile();\n          }\n        },\n        /* Mnemonic */\n        {\n          label: 'Mnemonic Phrase',\n          icon: require('@/assets/images/icons/icon-mnemonic.svg'),\n          fn: () => {\n            this.setType(SOFTWARE_WALLET_TYPES.MNEMONIC);\n          }\n        }\n      ];\n    },\n    /**\n     * @returns string\n     * returns currency name from current selected network\n     */\n    currencyName() {\n      return this.network.type.currencyName;\n    },\n    /**\n     * @returns object\n     * Returns the left button config for\n     * mew popup\n     */\n    leftBtn() {\n      return {\n        text: 'Cancel',\n        color: 'basic',\n        method: this.closeModal\n      };\n    },\n    /**\n     * @returns string\n     * Returns title based on current step\n     */\n    modalTitle() {\n      return this.step === 1\n        ? 'Provide withdrawal address'\n        : this.step === 2\n        ? 'Choose recovery method'\n        : this.step === 3 && this.isKeystore\n        ? 'Enter Keystore Password'\n        : this.step === 3 && this.isMnemonic\n        ? 'Enter Mnemonic Phrase'\n        : this.step === 4\n        ? 'Verify details'\n        : '';\n    },\n    /**\n     * @returns boolean\n     * returns whether selected recovery is keystore\n     */\n    isKeystore() {\n      return this.selectedRecoveryType === SOFTWARE_WALLET_TYPES.KEYSTORE;\n    },\n    /**\n     * @returns boolean\n     * returns whether selected recovery is keystore\n     */\n    isMnemonic() {\n      return this.selectedRecoveryType === SOFTWARE_WALLET_TYPES.MNEMONIC;\n    },\n    validPassword() {\n      return this.password.length > 3;\n    }\n  },\n  watch: {\n    phrase: {\n      deep: true,\n      handler: function (newval) {\n        if (newval && !isEmpty(newval) && !isEmpty(newval[1])) {\n          this.checkPhrase(newval);\n          const splitVal = newval[1].split(' ');\n          if (splitVal.length === 12 || splitVal.length === 24) {\n            this.length = splitVal.length;\n            const newObj = {};\n            splitVal.forEach((item, idx) => {\n              newObj[idx + 1] = item.toLowerCase();\n            });\n            this.phrase = newObj;\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    ...mapActions('stakedStore', ['addValidatorIndex']),\n    setWithdrawalAddress() {\n      const submitSubDomain =\n        this.network.type.name === 'ETH' ? 'mainnet' : 'staging';\n      const submitEndpoint = `https://${submitSubDomain}.mewwallet.dev/v2/stake/upgrade`;\n      this.blsExecution.message.validator_index = parseInt(\n        this.blsExecution.message.validator_index\n      );\n      this.loadingButton = true;\n      fetch(submitEndpoint, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          signed: [this.blsExecution]\n        })\n      })\n        .then(res => {\n          if (res.ok) {\n            this.addValidatorIndex(this.selectedValidator.validator_index);\n            Toast('Successfully set withdrawal address!', {}, SUCCESS);\n            return;\n          }\n          return res.json().then(jsonres => {\n            if (\n              JSON.stringify(jsonres).includes(\n                'withdrawal credential prefix is not a BLS prefix'\n              )\n            ) {\n              this.addValidatorIndex(this.selectedValidator.validator_index);\n              Toast(\n                'Withdrawal credentials are already set for this validator',\n                {},\n                WARNING\n              );\n            } else {\n              Toast(jsonres.error ? jsonres.error : jsonres.msg, {}, ERROR);\n            }\n          });\n        })\n        .finally(() => {\n          this.clear();\n        });\n    },\n    checkPhrase(val) {\n      const testObj = {};\n      let changed = false;\n      Object.values(val).forEach((item, idx) => {\n        if (!isEmpty(item)) testObj[idx + 1] = item.toLowerCase();\n        else changed = true;\n      });\n      if (changed) this.phrase = testObj;\n    },\n    /**\n     * takes the keystore inputs\n     * and checks if valid\n     */\n    async validateUserInputs() {\n      this.loadingButton = true;\n      try {\n        this.validating = true;\n        const selectedNetwork =\n          this.network.type.name === 'ETH' ? 'mainnet' : 'goerli';\n        if (this.isKeystore) {\n          this.blsExecution = await keystoreToBLSExecution(\n            this.file,\n            this.password,\n            this.executionAddress,\n            this.selectedValidator.validator_index,\n            `0x${this.selectedValidator.decoded.withdrawal_credentials}`,\n            selectedNetwork\n          );\n        } else {\n          this.blsExecution = await mnemonicToBLSExecution(\n            {\n              mnemonic: this.parsedPhrase\n            },\n            this.executionAddress,\n            this.selectedValidator.validator_index,\n            `0x${this.selectedValidator.decoded.withdrawal_credentials}`,\n            selectedNetwork\n          );\n        }\n        this.loadingButton = false;\n        this.nextStep();\n      } catch (err) {\n        this.loadingButton = false;\n        Toast(err, {}, ERROR);\n        this.clear();\n      }\n    },\n    clear() {\n      if (this.$refs.addressInput) {\n        this.$refs.addressInput.clear();\n      }\n      this.step = 1;\n      this.executionAddress = this.address;\n      this.isValidAddress = false;\n      this.selectedRecoveryType = '';\n      this.file = {};\n      this.password = '';\n      this.blsExecution = '';\n      this.phrase = {};\n      this.loadingButton = false;\n      this.reset();\n    },\n    /**\n     * sets selected wallet\n     */\n    setType(type) {\n      this.selectedRecoveryType = type;\n      this.nextStep();\n    },\n    /**\n     * upload keystore\n     */\n    uploadFile(e) {\n      const reader = new FileReader();\n      reader.onloadend = evt => {\n        try {\n          this.file = JSON.parse(evt.target.result);\n          this.setType(SOFTWARE_WALLET_TYPES.KEYSTORE);\n        } catch (err) {\n          Toast(err.message, {}, ERROR);\n        }\n      };\n      reader.readAsBinaryString(e.target.files[0]);\n    },\n    userSelectFile() {\n      const jsonInput = this.$refs.jsonInput;\n      jsonInput.value = '';\n      jsonInput.click();\n    },\n    /**\n     * Increments stepper\n     */\n    nextStep() {\n      this.step += 1;\n    },\n    /**\n     * Increments stepper\n     */\n    back() {\n      const jsonInput = this.$refs.jsonInput;\n      switch (this.step) {\n        case 2:\n          this.selectedRecoveryType = '';\n          jsonInput.value = '';\n          break;\n        case 3:\n          this.password = '';\n          this.phrase = {};\n          this.file = {};\n          break;\n        default:\n          break;\n      }\n      this.step -= 1;\n    },\n    /**\n     * Sets address passed from addressbook\n     */\n    setAddress(addr, isValidAddress) {\n      this.executionAddress = addr;\n      this.isValidAddress = isValidAddress;\n    },\n    /**\n     * Close modal and clear selected validator\n     */\n    closeModal() {\n      this.clear();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.staked-status-container {\n  max-width: 500px;\n}\n.border-container {\n  border: 1px solid var(--v-greyLight-base);\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawalPopup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawalPopup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WithdrawalPopup.vue?vue&type=template&id=0ff66ed6&scoped=true&\"\nimport script from \"./WithdrawalPopup.vue?vue&type=script&lang=js&\"\nexport * from \"./WithdrawalPopup.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WithdrawalPopup.vue?vue&type=style&index=0&id=0ff66ed6&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0ff66ed6\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawalPopup.vue?vue&type=style&index=0&id=0ff66ed6&prod&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/icon-mnemonic.7c3d34fc.svg\";"],"sourceRoot":""}
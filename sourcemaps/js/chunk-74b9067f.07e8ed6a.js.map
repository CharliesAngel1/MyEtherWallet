{"version":3,"sources":["webpack:///./src/core/helpers/validateHexString.js","webpack:///./src/modules/contract/ModuleContractDeploy.vue?a421","webpack:///src/modules/contract/ModuleContractDeploy.vue","webpack:///./src/modules/contract/ModuleContractDeploy.vue?0a63","webpack:///./src/modules/contract/ModuleContractDeploy.vue","webpack:///./src/core/helpers/addressUtils.js","webpack:///./src/modules/contract/handlers/solidityTypes.js","webpack:///./src/modules/contract/handlers/common.js"],"names":["validateHexString","str","isHexStrict","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","value","isValidByteCodeInput","model","callback","$$v","byteCode","expression","isValidABI","abiInterface","contractName","directives","name","rawName","constructorInputs","_v","_l","input","idx","getType","type","isValidInput","solidityType","on","$event","valueInput","$set","_e","isETHValue","ethAmount","nativeOn","resetDefaults","canDeploy","deploy","apply","arguments","proxy","staticRenderFns","data","byteCodeHex","inputsValid","computed","mapState","mapGetters","getConstructor","JSON","parse","inputs","length","isContructorPayable","stateMutability","watch","forEach","i","Vue","set","methods","mapActions","val","sanitizeHex","parsed","object","e","parseJSON","parseABI","abi","method","contract","web3","eth","Contract","params","details","_input","includes","push","stringToArray","send","from","address","toHex","toBN","toWei","stringify","result","contractAddress","addLocalContract","getInputType","sType","isContractArgValid","component","isAddress","chainId","store","getters","chainID","ROOTSTOCK","test","isValidChecksumAddress","utils","toChecksumAddress","toChecksumAddr","uint","int","string","bytes","bool","parsedValue","Array","isArray","replace","parsedItem","isNaN","isInt","hasWhiteSpace","substr","inputType","json"],"mappings":"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","file":"js/chunk-74b9067f.07e8ed6a.js","sourcesContent":["import { isHexStrict } from 'web3-utils';\n\nconst validateHexString = str => {\n  if (str === '') return true;\n  return isHexStrict(str);\n};\n\nexport default validateHexString;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-module',{staticClass:\"d-flex flex-grow-1 pt-6\",attrs:{\"has-elevation\":true,\"has-indicator\":true,\"title\":\"Deploy contract\"},scopedSlots:_vm._u([{key:\"moduleBody\",fn:function(){return [_c('div',[_c('v-textarea',{staticClass:\"BytecodeInput\",attrs:{\"outlined\":\"\",\"label\":\"Bytecode\",\"placeholder\":\" \",\"rules\":[\n          function (value) {\n            return _vm.isValidByteCodeInput(value);\n          }\n        ]},model:{value:(_vm.byteCode),callback:function ($$v) {_vm.byteCode=$$v},expression:\"byteCode\"}}),_c('v-textarea',{staticClass:\"ABIInput\",attrs:{\"outlined\":\"\",\"name\":\"input-7-4\",\"label\":\"ABI/JSON Interface\",\"value\":\"\",\"placeholder\":\" \",\"rules\":[\n          function (value) {\n            return _vm.isValidABI(value);\n          }\n        ]},model:{value:(_vm.abiInterface),callback:function ($$v) {_vm.abiInterface=$$v},expression:\"abiInterface\"}}),_c('mew-input',{staticClass:\"ContractName\",attrs:{\"label\":\"Contract name\",\"placeholder\":\" \"},model:{value:(_vm.contractName),callback:function ($$v) {_vm.contractName=$$v},expression:\"contractName\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.constructorInputs.length),expression:\"constructorInputs.length\"}]},[_c('div',{staticClass:\"mb-10\"},[_vm._v(\"Constructor Inputs\")]),_vm._l((_vm.constructorInputs),function(input,idx){return _c('div',{key:input.name + idx,staticClass:\"input-item-container\"},[(_vm.getType(input.type).type !== 'radio')?_c('mew-input',{staticClass:\"non-bool-input\",attrs:{\"label\":((input.name) + \" (\" + (input.type) + \")\"),\"rules\":[\n              function (value) {\n                return _vm.isValidInput(value, _vm.getType(input.type).solidityType);\n              }\n            ]},on:{\"input\":function($event){return _vm.valueInput(idx, $event)}},model:{value:(input.value),callback:function ($$v) {_vm.$set(input, \"value\", $$v)},expression:\"input.value\"}}):_vm._e(),(_vm.getType(input.type).type === 'radio')?_c('div',{staticClass:\"bool-input-container\"},[_c('div',{staticClass:\"bool-items\"},[_c('mew-checkbox',{attrs:{\"value\":true,\"label\":((input.name) + \" (\" + (input.type) + \")\"),\"type\":\"radio\",\"checked\":\"\"},model:{value:(input.value),callback:function ($$v) {_vm.$set(input, \"value\", $$v)},expression:\"input.value\"}})],1)]):_vm._e()],1)}),(_vm.isContructorPayable)?_c('mew-input',{staticClass:\"non-bool-input\",attrs:{\"rules\":[\n            function (value) {\n              return _vm.isETHValue(value);\n            }\n          ],\"label\":\"value (ETH)\"},model:{value:(_vm.ethAmount),callback:function ($$v) {_vm.ethAmount=$$v},expression:\"ethAmount\"}}):_vm._e()],2),_c('div',{staticClass:\"text-right\"},[_c('mew-button',{staticClass:\"mr-4\",attrs:{\"btn-style\":\"light\",\"title\":\"Clear all\",\"has-full-width\":false},nativeOn:{\"click\":function($event){return _vm.resetDefaults()}}}),_c('mew-button',{staticClass:\"SignTransactionButton\",attrs:{\"title\":\"Sign transaction\",\"has-full-width\":false,\"disabled\":!_vm.canDeploy},nativeOn:{\"click\":function($event){return _vm.deploy.apply(null, arguments)}}})],1)],1)]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <mew-module\n    class=\"d-flex flex-grow-1 pt-6\"\n    :has-elevation=\"true\"\n    :has-indicator=\"true\"\n    title=\"Deploy contract\"\n  >\n    <template #moduleBody>\n      <div>\n        <v-textarea\n          v-model=\"byteCode\"\n          outlined\n          label=\"Bytecode\"\n          class=\"BytecodeInput\"\n          placeholder=\" \"\n          :rules=\"[\n            value => {\n              return isValidByteCodeInput(value);\n            }\n          ]\"\n        />\n        <v-textarea\n          v-model=\"abiInterface\"\n          outlined\n          name=\"input-7-4\"\n          label=\"ABI/JSON Interface\"\n          class=\"ABIInput\"\n          value=\"\"\n          placeholder=\" \"\n          :rules=\"[\n            value => {\n              return isValidABI(value);\n            }\n          ]\"\n        ></v-textarea>\n        <mew-input\n          v-model=\"contractName\"\n          label=\"Contract name\"\n          class=\"ContractName\"\n          placeholder=\" \"\n        />\n        <div v-show=\"constructorInputs.length\">\n          <div class=\"mb-10\">Constructor Inputs</div>\n          <div\n            v-for=\"(input, idx) in constructorInputs\"\n            :key=\"input.name + idx\"\n            class=\"input-item-container\"\n          >\n            <mew-input\n              v-if=\"getType(input.type).type !== 'radio'\"\n              v-model=\"input.value\"\n              :label=\"`${input.name} (${input.type})`\"\n              class=\"non-bool-input\"\n              :rules=\"[\n                value => {\n                  return isValidInput(value, getType(input.type).solidityType);\n                }\n              ]\"\n              @input=\"valueInput(idx, $event)\"\n            />\n            <div\n              v-if=\"getType(input.type).type === 'radio'\"\n              class=\"bool-input-container\"\n            >\n              <div class=\"bool-items\">\n                <mew-checkbox\n                  v-model=\"input.value\"\n                  :value=\"true\"\n                  :label=\"`${input.name} (${input.type})`\"\n                  type=\"radio\"\n                  checked\n                />\n              </div>\n            </div>\n          </div>\n          <mew-input\n            v-if=\"isContructorPayable\"\n            v-model=\"ethAmount\"\n            :rules=\"[\n              value => {\n                return isETHValue(value);\n              }\n            ]\"\n            :label=\"`value (ETH)`\"\n            class=\"non-bool-input\"\n          />\n        </div>\n        <div class=\"text-right\">\n          <mew-button\n            btn-style=\"light\"\n            title=\"Clear all\"\n            :has-full-width=\"false\"\n            class=\"mr-4\"\n            @click.native=\"resetDefaults()\"\n          />\n          <mew-button\n            title=\"Sign transaction\"\n            class=\"SignTransactionButton\"\n            :has-full-width=\"false\"\n            :disabled=\"!canDeploy\"\n            @click.native=\"deploy\"\n          />\n        </div>\n      </div>\n    </template>\n  </mew-module>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport { mapState, mapActions, mapGetters } from 'vuex';\nimport { toWei, toBN, toHex } from 'web3-utils';\n\nimport sanitizeHex from '@/core/helpers/sanitizeHex';\nimport validateHexString from '@/core/helpers/validateHexString';\nimport {\n  parseJSON,\n  parseABI,\n  getType as getInputType,\n  isContractArgValid\n} from './handlers/common';\nimport { stringToArray } from '@/core/helpers/common';\n\nexport default {\n  name: 'ModuleContractDeploy',\n  data() {\n    return {\n      contractName: '',\n      byteCode: '',\n      byteCodeHex: '',\n      abiInterface: '',\n      inputsValid: false,\n      ethAmount: '0'\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'web3']),\n    ...mapState('global', ['currentNetwork']),\n    ...mapGetters('global', ['gasPrice']),\n    canDeploy() {\n      return (\n        this.byteCodeHex !== '' &&\n        this.isValidByteCodeInput(this.byteCodeHex) &&\n        this.isValidABI(this.abiInterface) &&\n        (this.getConstructor(JSON.parse(this.abiInterface)).inputs.length ===\n          0 ||\n          this.inputsValid) &&\n        (this.isContructorPayable === false || this.isETHValue(this.ethAmount))\n      );\n    },\n    constructorInputs() {\n      if (this.isValidABI(this.abiInterface)) {\n        return this.getConstructor(JSON.parse(this.abiInterface)).inputs;\n      }\n      return [];\n    },\n    isContructorPayable() {\n      if (this.isValidABI(this.abiInterface)) {\n        return (\n          this.getConstructor(JSON.parse(this.abiInterface)).stateMutability ===\n          'payable'\n        );\n      }\n      return false;\n    }\n  },\n  watch: {\n    abiInterface() {\n      this.constructorInputs.forEach((i, idx) => {\n        this.constructorInputs[idx].value = '';\n        Vue.set(this.constructorInputs, idx, this.constructorInputs[idx]);\n      });\n    }\n  },\n  methods: {\n    ...mapActions('global', ['addLocalContract']),\n    resetDefaults() {\n      this.contractName = '';\n      this.byteCode = '';\n      this.byteCodeHex = '';\n      this.abiInterface = '';\n      this.inputsValid = false;\n      this.ethAmount = '0';\n    },\n    isValidByteCodeInput(val) {\n      if (validateHexString(val)) {\n        this.byteCodeHex = sanitizeHex(val);\n        return true;\n      }\n      if (validateHexString('0x' + val)) {\n        this.byteCodeHex = '0x' + val;\n        return true;\n      }\n      try {\n        const parsed = JSON.parse(val);\n        if (validateHexString('0x' + parsed.object)) {\n          this.byteCodeHex = '0x' + parsed.object;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    },\n    isValidABI(val) {\n      return !!parseJSON(val) && !!parseABI(parseJSON(val));\n    },\n    getConstructor(abi) {\n      for (const method of abi) {\n        if (method.type === 'constructor') return method;\n      }\n      return { inputs: [] };\n    },\n    deploy() {\n      const contract = new this.web3.eth.Contract(\n        JSON.parse(this.abiInterface)\n      );\n      const params = [];\n      let details = {};\n      for (const _input of this.constructorInputs) {\n        if (_input.type.includes('[]') && _input.value)\n          params.push(stringToArray(_input.value));\n        else params.push(_input.value);\n      }\n      contract\n        .deploy({\n          data: this.byteCodeHex,\n          arguments: params\n        })\n        .send({\n          from: this.address,\n          value: this.isContructorPayable\n            ? toHex(toBN(toWei(this.ethAmount)))\n            : '0x00'\n        })\n        .on('transactionHash', () => {\n          details = {\n            name: this.contractName,\n            abi: JSON.stringify(JSON.parse(this.abiInterface))\n          };\n          this.resetDefaults();\n        })\n        .on('receipt', result => {\n          details.address = result.contractAddress;\n          if (details.name === '') {\n            details.name = result.contractAddress;\n          }\n          this.addLocalContract(details);\n        });\n    },\n    valueInput(idx, value) {\n      if (idx && value) {\n        this.constructorInputs[idx].value = value;\n      }\n      this.inputsValid = true;\n      for (const _input of this.constructorInputs) {\n        if (\n          !this.isValidInput(\n            _input.value,\n            this.getType(_input.type).solidityType\n          )\n        )\n          this.inputsValid = false;\n      }\n    },\n    isETHValue(val) {\n      try {\n        toWei(val, 'ether');\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    getType(type) {\n      return getInputType(type);\n    },\n    isValidInput(value, sType) {\n      return isContractArgValid(value, sType);\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleContractDeploy.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleContractDeploy.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleContractDeploy.vue?vue&type=template&id=737eadd9&\"\nimport script from \"./ModuleContractDeploy.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleContractDeploy.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import web3 from 'web3';\nimport store from '@/core/store';\nimport { ROOTSTOCK } from '@/utils/networks/types';\nimport {\n  toChecksumAddress as toChecksumAddr,\n  isValidChecksumAddress\n} from 'ethereumjs-util';\n\nconst isAddress = address => {\n  const chainId = store.getters['global/network'].type.chainID;\n\n  if (chainId === ROOTSTOCK.chainID) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n      return false;\n      // If it's ALL lowercase or ALL upppercase\n    } else if (\n      /^(0x|0X)?[0-9a-f]{40}$/.test(address) ||\n      /^(0x|0X)?[0-9A-F]{40}$/.test(address)\n    ) {\n      return true;\n      // Otherwise check each case\n    }\n\n    return isValidChecksumAddress(address, chainId);\n  }\n\n  return (\n    address && web3.utils.isHexStrict(address) && web3.utils.isAddress(address)\n  );\n};\nconst toChecksumAddress = address => {\n  const chainId = store.getters['global/network'].type.chainID;\n  // Use EIP-1191 Address Checksum if its Rootstock network\n  if (chainId === ROOTSTOCK.chainID) {\n    return toChecksumAddr(address, chainId);\n  }\n\n  return web3.utils.toChecksumAddress(address);\n};\nexport { isAddress, toChecksumAddress };\n","const uint = 'uint';\nconst int = 'int';\nconst address = 'address';\nconst string = 'string';\nconst bytes = 'bytes';\nconst bool = 'bool';\n\nexport { uint, address, string, bytes, bool, int };\n","import { isInt, stringToArray } from '@/core/helpers/common';\nimport {\n  address,\n  bool,\n  bytes,\n  int,\n  string,\n  uint\n} from '@/modules/contract/handlers/solidityTypes';\nimport { isAddress } from '@/core/helpers/addressUtils';\nimport validateHexString from '@/core/helpers/validateHexString';\n\nconst isContractArgValid = (value, solidityType) => {\n  try {\n    if (!value && typeof value !== 'boolean') value = '';\n    if (solidityType.includes('[]')) {\n      const parsedValue = Array.isArray(value) ? value : stringToArray(value);\n      const type = solidityType.replace('[]', '');\n      for (const parsedItem of parsedValue) {\n        if (!isContractArgValid(parsedItem, type)) return false;\n      }\n      return true;\n    }\n    if (solidityType.includes(uint) || solidityType.includes(int)) {\n      return (\n        value !== '' && !isNaN(value) && isInt(value) && !hasWhiteSpace(value)\n      );\n    } else if (solidityType === address) return isAddress(value);\n    else if (solidityType === string) return true;\n    else if (solidityType.includes(bytes))\n      return value.substr(0, 2) === '0x' && validateHexString(value);\n    else if (solidityType === bool)\n      return typeof value === typeof true || typeof value === typeof false;\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\nconst getType = inputType => {\n  if (!inputType) inputType = '';\n  if (inputType.includes('[]')) {\n    return { type: 'string', solidityType: `${inputType}` };\n  }\n  if (inputType.includes(uint) || inputType.includes(int))\n    return { type: 'number', solidityType: uint };\n  else if (inputType.includes(address))\n    return { type: 'text', solidityType: address };\n  else if (inputType.includes(string))\n    return { type: 'text', solidityType: string };\n  else if (inputType.includes(bytes))\n    return { type: 'text', solidityType: bytes };\n  else if (inputType.includes(bool))\n    return { type: 'radio', solidityType: bool };\n  return { type: 'text', solidityType: string };\n};\nconst parseABI = json => {\n  if (json === '') return false;\n  try {\n    const value = JSON.parse(json);\n    if (Array.isArray(value)) {\n      if (value.length > 0) {\n        return value;\n      }\n    }\n    return false;\n  } catch (e) {\n    if (Array.isArray(json)) {\n      if (json.length > 0) {\n        return json;\n      }\n    }\n    return false;\n  }\n};\n\nconst parseJSON = json => {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    if (Array.isArray(json)) {\n      return json;\n    }\n    return false;\n  }\n};\n\nconst hasWhiteSpace = string => {\n  return /\\s/g.test(string);\n};\n\nexport { isContractArgValid, parseJSON, parseABI, getType, hasWhiteSpace };\n"],"sourceRoot":""}
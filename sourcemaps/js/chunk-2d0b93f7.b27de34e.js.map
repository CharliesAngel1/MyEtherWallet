{"version":3,"sources":["webpack:///./src/modules/balance/ModuleBalance.vue?ae0a","webpack:///src/modules/balance/ModuleBalance.vue","webpack:///./src/modules/balance/ModuleBalance.vue?cd9d","webpack:///./src/modules/balance/ModuleBalance.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_e","hasBalance","loadingWalletInfo","attrs","subtitle","title","network","type","icon","convertedBalance","scopedSlots","_u","key","fn","_v","_s","currencyName","class","priceChange","formatChange","priceChangeArrow","formatFiatPrice","sendText","nativeOn","$event","navigateToSend","apply","arguments","swapText","navigateToSwap","proxy","isEthNetwork","staticRenderFns","components","Loader","BalanceChart","BalanceEmptyBlock","mixins","data","chartButtons","chartData","timeString","scale","activeButton","computed","fiatLoaded","watch","handler","deep","mounted","methods","initChart","setTimeout","count","checker","onToggle","setDataMonth","setDataYear","setDataWeek","setDataYesterday","name","component"],"mappings":"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","file":"js/chunk-2d0b93f7.b27de34e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"module-balance\"},[(_vm.loadingWalletInfo)?_c('loader'):_vm._e(),(_vm.hasBalance && !_vm.loadingWalletInfo)?_c('mew-module',{staticClass:\"bgWalletBlock\",attrs:{\"subtitle\":_vm.subtitle,\"title\":_vm.title,\"has-body-padding\":false,\"icon\":_vm.network.type.icon,\"caption\":_vm.convertedBalance,\"has-elevation\":true,\"has-full-height\":true,\"icon-align\":\"left\"},scopedSlots:_vm._u([(false)?{key:\"rightHeaderContainer\",fn:function(){return [_c('div',{staticClass:\"d-flex align-center ml-8 mt-3 mt-sm-0\"},[_c('mew-toggle',{attrs:{\"button-group\":_vm.chartButtons,\"on-toggle-btn-idx\":_vm.activeButton},on:{\"onBtnClick\":_vm.onToggle}})],1)]},proxy:true}:null,{key:\"moduleBody\",fn:function(){return [(false)?_c('balance-chart',{staticClass:\"full-width mt-5 pa-md-3\",attrs:{\"data\":_vm.chartData}}):_vm._e(),_c('div',{staticClass:\"pa-3 pa-sm-7 d-block d-md-flex align-center justify-space-between\"},[_c('div',{staticClass:\"d-flex flex-column flex-sm-row align-center justify-center\"},[_c('div',{staticClass:\"d-flex align-center\"},[_c('div',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.network.type.currencyName)+\" PRICE \")]),_c('div',{class:[\n                'ml-2 font-weight-regular',\n                _vm.priceChange ? 'greenPrimary--text' : 'redPrimary--text'\n              ]},[_vm._v(\" \"+_vm._s(_vm.formatChange)+\" \")]),_c('v-icon',{class:[\n                _vm.priceChange ? 'greenPrimary--text' : 'redPrimary--text',\n                'body-2'\n              ]},[_vm._v(_vm._s(_vm.priceChangeArrow))])],1),_c('div',{staticClass:\"ml-sm-5\"},[_vm._v(\" \"+_vm._s(_vm.formatFiatPrice)+\" / 1 \"+_vm._s(_vm.network.type.currencyName)+\" \")])]),_c('div',{staticClass:\"text-center text-md-right mt-4 mt-md-0\"},[_c('mew-button',{staticClass:\"mr-3\",attrs:{\"has-full-width\":false,\"title\":_vm.sendText,\"btn-size\":\"large\",\"btn-style\":\"transparent\"},nativeOn:{\"click\":function($event){return _vm.navigateToSend.apply(null, arguments)}}}),(_vm.hasSwap)?_c('mew-button',{attrs:{\"has-full-width\":false,\"title\":_vm.swapText,\"btn-size\":\"large\",\"btn-style\":\"outline\"},nativeOn:{\"click\":function($event){return _vm.navigateToSwap.apply(null, arguments)}}}):_vm._e()],1)])]},proxy:true}],null,true)}):_vm._e(),(!_vm.hasBalance && !_vm.loadingWalletInfo)?_c('balance-empty-block',{attrs:{\"network-type\":_vm.network.type.currencyName,\"is-eth\":_vm.isEthNetwork}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"module-balance\">\n    <!--\n    =====================================================================================\n      display if the user has an eth balance > 0\n    =====================================================================================\n    -->\n    <loader v-if=\"loadingWalletInfo\" />\n\n    <mew-module\n      v-if=\"hasBalance && !loadingWalletInfo\"\n      :subtitle=\"subtitle\"\n      :title=\"title\"\n      :has-body-padding=\"false\"\n      :icon=\"network.type.icon\"\n      :caption=\"convertedBalance\"\n      :has-elevation=\"true\"\n      :has-full-height=\"true\"\n      icon-align=\"left\"\n      class=\"bgWalletBlock\"\n    >\n      <template v-if=\"false\" #rightHeaderContainer>\n        <div class=\"d-flex align-center ml-8 mt-3 mt-sm-0\">\n          <mew-toggle\n            :button-group=\"chartButtons\"\n            :on-toggle-btn-idx=\"activeButton\"\n            @onBtnClick=\"onToggle\"\n          />\n        </div>\n      </template>\n      <template #moduleBody>\n        <balance-chart\n          v-if=\"false\"\n          :data=\"chartData\"\n          class=\"full-width mt-5 pa-md-3\"\n        />\n        <div\n          class=\"pa-3 pa-sm-7 d-block d-md-flex align-center justify-space-between\"\n        >\n          <div\n            class=\"d-flex flex-column flex-sm-row align-center justify-center\"\n          >\n            <div class=\"d-flex align-center\">\n              <div class=\"font-weight-bold\">\n                {{ network.type.currencyName }} PRICE\n              </div>\n              <div\n                :class=\"[\n                  'ml-2 font-weight-regular',\n                  priceChange ? 'greenPrimary--text' : 'redPrimary--text'\n                ]\"\n              >\n                {{ formatChange }}\n              </div>\n              <v-icon\n                :class=\"[\n                  priceChange ? 'greenPrimary--text' : 'redPrimary--text',\n                  'body-2'\n                ]\"\n                >{{ priceChangeArrow }}</v-icon\n              >\n            </div>\n            <div class=\"ml-sm-5\">\n              {{ formatFiatPrice }} / 1 {{ network.type.currencyName }}\n            </div>\n          </div>\n          <div class=\"text-center text-md-right mt-4 mt-md-0\">\n            <mew-button\n              :has-full-width=\"false\"\n              :title=\"sendText\"\n              btn-size=\"large\"\n              btn-style=\"transparent\"\n              class=\"mr-3\"\n              @click.native=\"navigateToSend\"\n            />\n            <mew-button\n              v-if=\"hasSwap\"\n              :has-full-width=\"false\"\n              :title=\"swapText\"\n              btn-size=\"large\"\n              btn-style=\"outline\"\n              @click.native=\"navigateToSwap\"\n            />\n          </div>\n        </div>\n      </template>\n    </mew-module>\n    <!--\n    =====================================================================================\n      display if the user has no eth balance\n    =====================================================================================\n    -->\n    <balance-empty-block\n      v-if=\"!hasBalance && !loadingWalletInfo\"\n      :network-type=\"network.type.currencyName\"\n      :is-eth=\"isEthNetwork\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\n\nimport {\n  formatPercentageValue,\n  formatFloatingPointValue\n} from '@/core/helpers/numberFormatHelper';\nimport { ROUTES_WALLET } from '@/core/configs/configRoutes';\n\nimport handlerAnalytics from '@/modules/analytics-opt-in/handlers/handlerAnalytics.mixin';\nexport default {\n  components: {\n    Loader: () => import('./ModuleBalanceLoader'),\n    BalanceChart: () => import('@/modules/balance/components/BalanceChart'),\n    BalanceEmptyBlock: () => import('./components/BalanceEmptyBlock')\n  },\n  mixins: [handlerAnalytics],\n  data() {\n    return {\n      chartButtons: ['1D', '1W', '1M', '1Y'],\n      chartData: [],\n      timeString: '',\n      scale: '',\n      activeButton: 0\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'loadingWalletInfo']),\n    ...mapGetters('global', ['network', 'hasSwap', 'getFiatValue']),\n    ...mapGetters('wallet', ['balanceInETH', 'balanceInWei']),\n    ...mapGetters('external', [\n      'fiatValue',\n      'balanceFiatValue',\n      'networkTokenUSDMarket'\n    ]),\n    ...mapGetters('global', ['isEthNetwork', 'network']),\n    priceChangeArrow() {\n      return this.priceChange ? 'mdi-arrow-up-bold' : 'mdi-arrow-down-bold';\n    },\n    priceChange() {\n      return this.networkTokenUSDMarket.price_change_percentage_24h > 0;\n    },\n    /**\n     * Computed property returns formated eth value of the wallet balance\n     * ie: $12.45 per 1 ETH\n     */\n    title() {\n      return `${formatFloatingPointValue(this.balanceInETH).value} ${\n        this.network.type.currencyName\n      }`;\n    },\n    sendText() {\n      return `Send ${this.network.type.currencyName}`;\n    },\n    swapText() {\n      return `Swap ${this.network.type.currencyName}`;\n    },\n    subtitle() {\n      return `My ${this.network.type.currencyName} Balance`;\n    },\n    /**\n     * Computed property returns formated eth wallet balance value in USD\n     * ie: $12.45 per 1 ETH\n     */\n    convertedBalance() {\n      if (this.fiatLoaded) {\n        return this.getFiatValue(this.balanceFiatValue);\n      }\n      return '';\n    },\n    /**\n     * Computed property returns formated 24 hours percentage change\n     * ie: $12.45 per 1 ETH\n     */\n    formatChange() {\n      if (this.fiatLoaded) {\n        return formatPercentageValue(\n          this.networkTokenUSDMarket.price_change_percentage_24h\n        ).value;\n      }\n      return '';\n    },\n    /**\n     * Computed property returns formats Fiat Price\n     * ie: $12.45 per 1 ETH\n     */\n    formatFiatPrice() {\n      if (this.fiatLoaded) {\n        return this.getFiatValue(this.fiatValue);\n      }\n      return '';\n    },\n    /**\n     * Computed property returns whether or not fiat info is loaded\n     */\n    fiatLoaded() {\n      return (\n        !!this.networkTokenUSDMarket &&\n        !!this.networkTokenUSDMarket.price_change_percentage_24h &&\n        !!this.balanceFiatValue &&\n        !!this.fiatValue\n      );\n    },\n    /**\n     * Determines whether or not to show empty block\n     * @return {boolean}\n     */\n    hasBalance() {\n      return BigNumber(this.balanceInWei).gt(0);\n    }\n  },\n  watch: {\n    chartData: {\n      handler: function () {},\n      deep: true\n    }\n  },\n  mounted() {\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      let count = 0;\n      const checker = () => {\n        this.onToggle(this.chartButtons[count]);\n        setTimeout(() => {\n          if (count >= 3) {\n            this.onToggle(this.chartButtons[count]);\n            this.activeButton = count;\n            // a single point basically looks the same as an empty chart\n          } else if (this.chartData.length <= 1) {\n            count++;\n            checker();\n          } else {\n            this.activeButton = count;\n          }\n        }, 1000);\n      };\n      checker();\n    },\n    onToggle(e) {\n      switch (e) {\n        case this.chartButtons[0]:\n          this.setDataYesterday();\n          break;\n        case this.chartButtons[1]:\n          this.setDataWeek();\n          break;\n        case this.chartButtons[2]:\n          this.setDataMonth();\n          break;\n        case this.chartButtons[3]:\n          this.setDataYear();\n          break;\n        default:\n          this.setDataMonth();\n      }\n    },\n    setDataMonth() {\n      const timeString = new Date();\n      this.timeString = timeString.getTime() - 1000 * 60 * 60 * 24 * 31;\n      this.scale = 'days';\n    },\n    setDataYear() {\n      const timeString = new Date();\n      this.timeString = timeString.getTime() - 1000 * 60 * 60 * 24 * 365;\n      this.scale = 'days';\n    },\n    setDataWeek() {\n      const timeString = new Date();\n      this.timeString = timeString.getTime() - 1000 * 60 * 60 * 24 * 7;\n      this.scale = 'days';\n    },\n    setDataYesterday() {\n      const timeString = new Date();\n      this.timeString = timeString.getTime() - 1000 * 60 * 60 * 24 * 1;\n      this.scale = 'hours';\n    },\n    navigateToSend() {\n      this.$router.push({ name: ROUTES_WALLET.SEND_TX.NAME });\n    },\n    navigateToSwap() {\n      this.trackSwap('fromDashboardBalanceModule');\n      this.$router.push({ name: ROUTES_WALLET.SWAP.NAME });\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleBalance.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleBalance.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleBalance.vue?vue&type=template&id=ee873ec2&\"\nimport script from \"./ModuleBalance.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleBalance.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
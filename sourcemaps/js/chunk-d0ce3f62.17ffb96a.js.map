{"version":3,"sources":["webpack:///./src/modules/nft-manager/ModuleNftManager.vue?7218","webpack:///./src/core/helpers/getService.js","webpack:///./src/modules/nft-manager/handlers/config/configNft.js","webpack:///./src/modules/nft-manager/handlers/abi/abiNft.js","webpack:///./src/modules/nft-manager/handlers/abi/abiERC1155.js","webpack:///./src/modules/nft-manager/handlers/handlerNftManager.js","webpack:///src/modules/nft-manager/ModuleNftManager.vue","webpack:///./src/modules/nft-manager/ModuleNftManager.vue?23de","webpack:///./src/modules/nft-manager/ModuleNftManager.vue","webpack:///./src/modules/nft-manager/ModuleNftManager.vue?a393"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","loadingContracts","hasNoTokens","_e","contracts","length","tabs","_v","_s","$t","onNftSend","$vuetify","breakpoint","mdAndUp","smAndDown","activeTab","on","onTab","_l","contract","idx","slot","selectedContract","name","total","displayedTokens","token","tokenIdx","loadingTokens","openNftSend","totalPages","setPage","model","value","callback","$$v","currentPage","expression","closeNftSend","selectedNft","sendTx","isValid","enoughFunds","showBalanceError","setAddress","hasMinEth","proxy","staticRenderFns","capitalize","toString","charAt","toUpperCase","substr","getService","parsableUrl","parsedUrl","url","parse","hostname","splitUrl","split","join","configs","countPerPage","cryptoKittiesContract","mainnet","api","API","chains","1","137","56","ABI","constant","inputs","type","outputs","payable","stateMutability","anonymous","indexed","internalType","NFT","constructor","network","address","web3","result","fetch","chainID","then","response","json","nftResults","nfts","next","res","concat","e","Error","isValidAddress","hash","utils","isAddress","send","to","gasPrice","raw","eth","Contract","erc721","ERC1155ABI","includes","cryptoKittiesTransfer","safeTransferFrom","safeTransferFromRarible","from","undefined","sendTransaction","toLowerCase","gasEst","estimateGas","data","methods","token_id","encodeABI","amount","options","transfer","count","Math","ceil","BigNumber","div","toNumber","hasPages","startIndex","endIndex","endIdx","setCurrentPage","page","goToFirstPage","MIN_GAS_LIMIT","components","NftManagerDetails","NftManagerSend","nft","toAddress","gasFees","localGasPrice","nftApiResponse","computed","tabName","tokens","item","image","inList","arr","get","set","supportedNetwork","supportedNetworks","watch","balanceInWei","setTimeout","Toast","WARNING","ERROR","mounted","setUpNFT","getNfts","toBN","title","SUCCESS","catch","updateValues","component"],"mappings":"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CAqC,eACA4G,aACA7H,oBACA8H,YACA1G,eACAC,oBACA0G,kBACApJ,oBACA2B,iBACA0H,oBAGAC,aACA,yDACA,uDACA,4DACA,yBACA,eACA,UACA,WACA,mBAKAjJ,OACA,8BACA,+BAKA,OAJA,cACAkJ,yBACAA,uBAEA,CAAAjI,WAGAkI,SACA,iCACA,sCAEAC,mCACA,8CAGA,KACA,iBACA,mCACA,OACAC,wCACApI,wBACAqG,oBACAzG,4BACA2F,qCAKA,UAEA1G,YACA,oCAEA,mCACA,8CACA,6CAYA,OAXA,GACAwJ,UACAA,YAEAC,QACA1I,4BACA8G,QACAzG,QACAD,0CAGA,GACA,IAEA,IAKAO,aACA,yDAEAyG,WACA,uDAEAC,aACA,8BAEAC,WACA,uDAEArG,aACA0H,MACA,6BAEAC,OACA,WAMAtI,kBACA,yDAKAgB,UACA,kEAKAuH,mBACA,gEAKAC,oBACA,sDAGAC,OACAC,eACA,kBAEA7E,OACA,yBACA,sBACA,kBACA,cACA,mBAAA/D,+BACA,sBACA,gBAEA6I,gBACAC,eACA,gEACA,GACAC,QAEA,wBACA,MAGAjF,UACA,yBACA,sBACA,kBACA,cACA,mBAAA9D,+BACA,iBAEAnB,aACA,YACA,eAGA,mBACA,6BACA,IACA,+CACA,qBACA,sDACA,2CACA,0BACA,6CAEA,oBACA,2BAEA,oBACA,0BAEA,SACAiK,eACA,+DACA,GACAE,WAMAC,UACA,iBAEA7C,SACA8C,WACA,wBAIA,gBACArF,qBACAC,qBACAC,iBAGA,eACA,0DACA,mBAEAoF,UACA,4BACA,sBACA,yBACAN,gBACA,uBACA,QAGAvH,YACA,2BAEA8H,uEAEA,oBACA,2BAEA,oBACA,2BAGA1J,SACA,iBACA,wCACA,qDACA,0BAKAY,eACA,IACA,oBAEA,kBACA,mBAAAN,qCAEAe,eACA,kBACA,kBACA,mBAAAf,gCAEA,eACA,gBACA,IACA,aACA,mCACAmF,8DACA,SACAF,wCACAd,SACA,oBACA,oBACA,kBACA,oBACA2E,eACA,mDACA,CACAO,8CACApH,8CACA,aACAmC,cAGAkF,OACA,OAGAC,UACA,kCACA,iCAEA,SACAT,sCAIAU,eACA,8BACArB,2CAEA,wBACA,oDACA,qBAEA,gBAEA9G,cAEA,eADA,uBACA,UAEA,GAMAb,WACA,8BC/dyW,I,wBCQrWiJ,EAAY,eACd,EACA5L,EACA2D,GACA,EACA,KACA,WACA,MAIa,aAAAiI,E,2CCnBf","file":"js/chunk-d0ce3f62.17ffb96a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"module-nft-manager\"},[_c('mew-module',{staticClass:\"text-center d-flex justify-end flex-grow-1 pt-6 mr-3\",attrs:{\"has-elevation\":true,\"has-indicator\":true,\"title\":\"NFT Manager\"},scopedSlots:_vm._u([{key:\"moduleBody\",fn:function(){return [_c('div',{staticClass:\"loader bgWalletBlockDark\"},[(_vm.loadingContracts && !_vm.hasNoTokens)?_c('v-skeleton-loader',{attrs:{\"type\":\"table-heading,list-item-avatar-three-line, list-item-avatar-three-line, list-item-avatar-three-line\"}}):_vm._e()],1),(\n          (!_vm.loadingContracts &&\n            _vm.contracts.length === 0 &&\n            _vm.tabs.length === 0) ||\n          _vm.hasNoTokens\n        )?_c('v-card',{staticClass:\"d-flex align-center px-5 py-4\",attrs:{\"flat\":\"\",\"color\":\"bgWalletBlockDark\",\"min-height\":\"94px\"}},[_c('v-card-text',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.$t('nftManager.none-owned'))+\" \")])],1):_vm._e(),(\n          !_vm.loadingContracts && !_vm.onNftSend && _vm.tabs.length > 0 && !_vm.hasNoTokens\n        )?_c('mew-tabs',{attrs:{\"items\":_vm.tabs,\"is-vertical\":_vm.$vuetify.breakpoint.mdAndUp,\"has-underline\":_vm.$vuetify.breakpoint.smAndDown,\"active-tab\":_vm.activeTab},on:{\"onTab\":_vm.onTab}},[_vm._l((_vm.contracts),function(contract,idx){return _c('template',{slot:'tabItemContent' + (idx + 1)},[_c('div',{key:idx,staticClass:\"ml-5\"},[_c('div',{staticClass:\"d-flex justify-space-between mt-3 mb-5\"},[_c('h5',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.selectedContract.name)+\" \")]),_c('div',[_vm._v(\"Total: \"+_vm._s(_vm.selectedContract.total))])]),(_vm.displayedTokens && _vm.displayedTokens.length === 0)?_c('div',[_vm._v(\" Loading ... \")]):_vm._e(),(_vm.displayedTokens && _vm.displayedTokens.length !== 0)?_c('div',[_vm._l((_vm.displayedTokens),function(token,tokenIdx){return _c('div',{key:tokenIdx,staticClass:\"mb-3\"},[_c('nft-manager-details',{attrs:{\"loading\":_vm.loadingTokens,\"on-click\":_vm.openNftSend,\"token\":token}})],1)}),(_vm.hasPages)?_c('div',{staticClass:\"px-4 mt-3 d-flex align-center justify-end\"},[_c('v-pagination',{staticClass:\"nft-pagination\",attrs:{\"color\":\"expandHeader\",\"length\":_vm.totalPages,\"prev-icon\":\"mdi-menu-left\",\"next-icon\":\"mdi-menu-right\"},on:{\"input\":_vm.setPage},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1):_vm._e()],2):_vm._e()])])})],2):_vm._e(),(_vm.onNftSend)?_c('nft-manager-send',{attrs:{\"close\":_vm.closeNftSend,\"nft\":_vm.selectedNft,\"nft-category\":_vm.selectedContract.name,\"send\":_vm.sendTx,\"disabled\":!_vm.isValid,\"enough-funds\":_vm.enoughFunds,\"show-balance-error\":_vm.showBalanceError,\"set-address\":_vm.setAddress},on:{\"hasMinEth\":_vm.hasMinEth}}):_vm._e()]},proxy:true}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import url from 'url';\nconst capitalize = value => {\n  if (!value) return '';\n  value = value.toString();\n  return value.charAt(0).toUpperCase() + value.substr(1, value.length);\n};\n\nconst getService = parsableUrl => {\n  const parsedUrl = url.parse(parsableUrl).hostname;\n  const splitUrl = parsedUrl.split('.');\n  if (splitUrl.length > 2)\n    // eslint-disable-next-line\n    return capitalize(`${splitUrl[1]}.${splitUrl[2]}`);\n  return capitalize(splitUrl.join('.'));\n};\n\nexport default getService;\n","const configs = {\n  url: 'https://nft.mewapi.io', // 'https://9bcq984094.execute-api.us-west-2.amazonaws.com/dev',\n  countPerPage: 9,\n  cryptoKittiesContract: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n  mainnet: 'ETH',\n  api: 'https://mainnet.mewwallet.dev'\n};\n\nconst API = 'https://partners.mewapi.io/nfts';\n\nexport const chains = {\n  1: `${API}/owners?chains=ethereum&queried_wallet_balances=1&wallet_addresses=`,\n  137: `${API}/owners?chains=polygon&queried_wallet_balances=1&wallet_addresses=`,\n  56: `${API}/owners?chains=bsc&queried_wallet_balances=1&wallet_addresses=`\n};\n\nexport default configs;\n","const ABI = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'from',\n        type: 'address'\n      },\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_from', type: 'address' },\n      { name: '_to', type: 'address' },\n      {\n        name: '_tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_to', type: 'address' },\n      { name: '_tokenId', type: 'uint256' }\n    ],\n    name: 'transfer',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n];\n\nexport default ABI;\n","const ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address'\n      },\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      {\n        indexed: false,\n        internalType: 'uint256[]',\n        name: 'ids',\n        type: 'uint256[]'\n      },\n      {\n        indexed: false,\n        internalType: 'uint256[]',\n        name: 'values',\n        type: 'uint256[]'\n      }\n    ],\n    name: 'TransferBatch',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address'\n      },\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256'\n      }\n    ],\n    name: 'TransferSingle',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, internalType: 'string', name: 'value', type: 'string' },\n      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' }\n    ],\n    name: 'URI',\n    type: 'event'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'uint256', name: 'id', type: 'uint256' }\n    ],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address[]', name: 'accounts', type: 'address[]' },\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' }\n    ],\n    name: 'balanceOfBatch',\n    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'account', type: 'address' },\n      { internalType: 'address', name: 'operator', type: 'address' }\n    ],\n    name: 'isApprovedForAll',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'from', type: 'address' },\n      { internalType: 'address', name: 'to', type: 'address' },\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\n      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },\n      { internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'safeBatchTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'from', type: 'address' },\n      { internalType: 'address', name: 'to', type: 'address' },\n      { internalType: 'uint256', name: 'id', type: 'uint256' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n      { internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'operator', type: 'address' },\n      { internalType: 'bool', name: 'approved', type: 'bool' }\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n];\n\nexport default ABI;\n","import utils from 'web3-utils';\nimport configs, { chains } from './config/configNft';\nimport ABI from './abi/abiNft';\nimport ERC1155ABI from './abi/abiERC1155';\nimport BigNumber from 'bignumber.js';\n\nexport default class NFT {\n  constructor({ network, address, web3 }) {\n    this.network = network;\n    this.address = address;\n    this.web3 = web3;\n    this.countPerPage = configs.countPerPage;\n    this.currentPage = 1;\n  }\n  /**\n   * retrieves all NFTs for account\n   * returns {Object}\n   */\n  async getNfts() {\n    try {\n      let { result } = await fetch(\n        `${chains[this.network.type.chainID]}${this.address}`\n      ).then(response => response.json());\n      let nftResults = result.nfts;\n      while (result.next) {\n        const res = await fetch(result.next).then(response => response.json());\n        result = res.result;\n        nftResults = nftResults.concat(result.nfts);\n      }\n      return nftResults;\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  isValidAddress(hash) {\n    return hash !== '' && utils.isAddress(hash);\n  }\n\n  /**\n   * Send NFT\n   */\n  send(to, token, gasPrice = undefined) {\n    let raw;\n    this.contract = new this.web3.eth.Contract(token.erc721 ? ABI : ERC1155ABI);\n    if (token.contract.includes(configs.cryptoKittiesContract)) {\n      raw = this.cryptoKittiesTransfer(to, token);\n    } else if (token.erc721) {\n      raw = this.safeTransferFrom(to, token);\n    } else {\n      raw = this.safeTransferFromRarible(to, token, 1);\n    }\n    raw.from = this.address;\n    if (gasPrice !== undefined) raw.gasPrice = gasPrice;\n    return this.web3.eth.sendTransaction(raw);\n  }\n  /**\n   * Get Gas Fees\n   */\n  async getGasFees(to, token) {\n    let raw;\n    this.contract = new this.web3.eth.Contract(token.erc721 ? ABI : ERC1155ABI);\n    if (token.contract.toLowerCase().includes(configs.cryptoKittiesContract)) {\n      raw = this.cryptoKittiesTransfer(to, token);\n    } else if (token.erc721) {\n      raw = this.safeTransferFrom(to, token);\n    } else {\n      raw = this.safeTransferFromRarible(to, token, 1);\n    }\n    raw.from = this.address;\n    const gasEst = this.web3.eth.estimateGas(raw);\n    return gasEst;\n  }\n\n  safeTransferFrom(to, token) {\n    return {\n      to: token.contract,\n      data: this.contract.methods\n        .safeTransferFrom(this.address, to, token.token_id)\n        .encodeABI()\n    };\n  }\n  /**\n   * Sends a Rarible/ERC-1155 NFT\n   * @param {string} to Address to send to\n   * @param {object} token NFT to send\n   * @param {number} amount Number of NFTs to send from collection\n   * @param {string} data (Optional) data input\n   * @returns Raw transaction object\n   */\n  safeTransferFromRarible(to, token, amount, data = '0x') {\n    return {\n      to: token.contract,\n      data: this.contract.methods\n        .safeTransferFrom(this.address, to, token.token_id, amount, data)\n        .encodeABI()\n    };\n  }\n\n  cryptoKittiesTransfer(to, token) {\n    this.contract.options.address = token.contract;\n    return {\n      to: token.contract,\n      data: this.contract.methods.transfer(to, token.token_id).encodeABI()\n    };\n  }\n\n  /**\n   * Pagination\n   */\n\n  totalPages(count) {\n    return Math.ceil(new BigNumber(count).div(this.countPerPage).toNumber());\n  }\n\n  hasPages(count) {\n    return this.countPerPage < count;\n  }\n\n  startIndex() {\n    return this.currentPage * this.countPerPage - this.countPerPage;\n  }\n\n  endIndex(count) {\n    const endIdx = this.currentPage * this.countPerPage;\n    if (count > endIdx) {\n      return endIdx;\n    }\n    return count;\n  }\n\n  setCurrentPage(page) {\n    this.currentPage = page;\n  }\n\n  goToFirstPage() {\n    this.currentPage = 1;\n  }\n}\n","<template>\n  <!--\n    =====================================================================================\n      Module Nft Manager\n    =====================================================================================\n    -->\n  <div class=\"module-nft-manager\">\n    <mew-module\n      class=\"text-center d-flex justify-end flex-grow-1 pt-6 mr-3\"\n      :has-elevation=\"true\"\n      :has-indicator=\"true\"\n      title=\"NFT Manager\"\n    >\n      <template #moduleBody>\n        <!--\n    =====================================================================================\n      Loading\n    =====================================================================================\n    -->\n        <div class=\"loader bgWalletBlockDark\">\n          <v-skeleton-loader\n            v-if=\"loadingContracts && !hasNoTokens\"\n            type=\"table-heading,list-item-avatar-three-line, list-item-avatar-three-line, list-item-avatar-three-line\"\n          />\n        </div>\n        <!--\n    =====================================================================================\n    Display if no nfts owned\n    =====================================================================================\n    -->\n        <v-card\n          v-if=\"\n            (!loadingContracts &&\n              contracts.length === 0 &&\n              tabs.length === 0) ||\n            hasNoTokens\n          \"\n          flat\n          color=\"bgWalletBlockDark\"\n          class=\"d-flex align-center px-5 py-4\"\n          min-height=\"94px\"\n        >\n          <v-card-text class=\"text-center\"\n            >{{ $t('nftManager.none-owned') }}\n          </v-card-text>\n        </v-card>\n        <!--\n    =====================================================================================\n      Display owned nft tokens\n    =====================================================================================\n    -->\n        <mew-tabs\n          v-if=\"\n            !loadingContracts && !onNftSend && tabs.length > 0 && !hasNoTokens\n          \"\n          :items=\"tabs\"\n          :is-vertical=\"$vuetify.breakpoint.mdAndUp\"\n          :has-underline=\"$vuetify.breakpoint.smAndDown\"\n          :active-tab=\"activeTab\"\n          @onTab=\"onTab\"\n        >\n          <template\n            v-for=\"(contract, idx) in contracts\"\n            :slot=\"'tabItemContent' + (idx + 1)\"\n          >\n            <div :key=\"idx\" class=\"ml-5\">\n              <!--\n    =====================================================================================\n      Display all owned tokens by nft\n    =====================================================================================\n    -->\n              <div class=\"d-flex justify-space-between mt-3 mb-5\">\n                <h5 class=\"font-weight-bold\">\n                  {{ selectedContract.name }}\n                </h5>\n                <div>Total: {{ selectedContract.total }}</div>\n              </div>\n              <div v-if=\"displayedTokens && displayedTokens.length === 0\">\n                Loading ...\n              </div>\n              <div v-if=\"displayedTokens && displayedTokens.length !== 0\">\n                <div\n                  v-for=\"(token, tokenIdx) in displayedTokens\"\n                  :key=\"tokenIdx\"\n                  class=\"mb-3\"\n                >\n                  <!--\n    =====================================================================================\n      Nft Token Card Details\n    =====================================================================================\n    -->\n                  <nft-manager-details\n                    :loading=\"loadingTokens\"\n                    :on-click=\"openNftSend\"\n                    :token=\"token\"\n                  />\n                </div>\n                <!--\n    =====================================================================================\n      Displays pagination if there are more than > 9 tokens\n    =====================================================================================\n    -->\n                <div\n                  v-if=\"hasPages\"\n                  class=\"px-4 mt-3 d-flex align-center justify-end\"\n                >\n                  <v-pagination\n                    v-model=\"currentPage\"\n                    class=\"nft-pagination\"\n                    color=\"expandHeader\"\n                    :length=\"totalPages\"\n                    prev-icon=\"mdi-menu-left\"\n                    next-icon=\"mdi-menu-right\"\n                    @input=\"setPage\"\n                  />\n                </div>\n              </div>\n            </div>\n          </template>\n        </mew-tabs>\n        <!--\n    =====================================================================================\n      Display send token page\n    =====================================================================================\n    -->\n        <nft-manager-send\n          v-if=\"onNftSend\"\n          :close=\"closeNftSend\"\n          :nft=\"selectedNft\"\n          :nft-category=\"selectedContract.name\"\n          :send=\"sendTx\"\n          :disabled=\"!isValid\"\n          :enough-funds=\"enoughFunds\"\n          :show-balance-error=\"showBalanceError\"\n          :set-address=\"setAddress\"\n          @hasMinEth=\"hasMinEth\"\n        />\n      </template>\n    </mew-module>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport { toBN, isAddress } from 'web3-utils';\nimport {\n  Toast,\n  SUCCESS,\n  WARNING,\n  ERROR\n} from '@/modules/toast/handler/handlerToast';\nimport getService from '@/core/helpers/getService';\n\nimport { ROUTES_WALLET } from '@/core/configs/configRoutes';\nimport { ETH, BSC, MATIC } from '@/utils/networks/types';\nimport { toBNSafe } from '@/core/helpers/numberFormatHelper';\nimport NFT from './handlers/handlerNftManager';\nimport handleError from '@/modules/confirmation/handlers/errorHandler.js';\n\nconst MIN_GAS_LIMIT = 21000;\n\nexport default {\n  components: {\n    NftManagerDetails: () => import('./components/NftManagerDetails'),\n    NftManagerSend: () => import('./components/NftManagerSend')\n  },\n  data() {\n    return {\n      nft: {},\n      activeTab: 0,\n      onNftSend: false,\n      hasNoTokens: false,\n      selectedNft: {},\n      toAddress: '',\n      selectedContract: {},\n      gasFees: '0',\n      enoughFunds: false,\n      showBalanceError: false,\n      localGasPrice: '0',\n      loadingContracts: true,\n      loadingTokens: true,\n      nftApiResponse: []\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['balance', 'web3', 'address']),\n    ...mapState('global', ['network', 'gasPriceType']),\n    ...mapGetters('wallet', ['balanceInETH', 'balanceInWei']),\n    ...mapGetters('global', [\n      'isEthNetwork',\n      'network',\n      'gasPrice',\n      'gasPriceByType'\n    ]),\n    /**\n     * Get Tabs\n     */\n    tabs() {\n      return this.contracts.map(item => {\n        let tabName = `${item.name} (${item.count})`;\n        if (tabName.length > 25) {\n          tabName = item.name.substring(0, 20);\n          tabName += `... (${item.count})`;\n        }\n        return { name: tabName };\n      });\n    },\n    tokens() {\n      if (this.nftApiResponse.length > 0) {\n        const contract = this.nftApiResponse.filter(item => {\n          return (\n            item.contract_address.toLowerCase() ===\n            this.selectedContract.contract.toLowerCase()\n          );\n        });\n        if (contract) {\n          return contract.map(item => {\n            const url = item.image_url ? item.image_url : '';\n            return {\n              image: `https://img.mewapi.io/?image=${url}`,\n              name: item.name || item.token_id,\n              token_id: item.token_id,\n              contract: item.contract_address,\n              erc721: item.contract.type === 'ERC721'\n            };\n          });\n        }\n      }\n      return [];\n    },\n    contracts() {\n      if (this.nftApiResponse.length > 0) {\n        // Organize contracts by address\n        return this.nftApiResponse.reduce((arr, item) => {\n          const nftAmount = item.queried_wallet_balances[0].quantity;\n          const inList = arr.find(i => i.contract === item.contract_address);\n          if (inList) {\n            inList.count++;\n            inList.total += nftAmount;\n          } else {\n            arr.push({\n              contract: item.contract_address,\n              count: 1,\n              total: nftAmount,\n              name: item.contract.name || item.collection.name\n            });\n          }\n          return arr;\n        }, []);\n      }\n      return [];\n    },\n    /**\n     * Pagination\n     */\n    totalPages() {\n      return this.nft.totalPages(this.selectedContract.count);\n    },\n    hasPages() {\n      return this.nft.hasPages(this.selectedContract.count);\n    },\n    startIndex() {\n      return this.nft.startIndex();\n    },\n    endIndex() {\n      return this.nft.endIndex(this.selectedContract.count);\n    },\n    currentPage: {\n      get() {\n        return this.nft.currentPage;\n      },\n      set(value) {\n        return value;\n      }\n    },\n    /**\n     * Display tokens according to page\n     */\n    displayedTokens() {\n      return this.tokens.slice(this.startIndex, this.endIndex);\n    },\n    /**\n     * Check if address is valid\n     */\n    isValid() {\n      return this.nft.isValidAddress(this.toAddress) && this.enoughFunds;\n    },\n    /**\n     * Check if network is supported\n     */\n    supportedNetwork() {\n      return this.supportedNetworks.includes(this.network.type.name);\n    },\n    /**\n     * List of supported networks\n     */\n    supportedNetworks() {\n      return [ETH.name, MATIC.name, BSC.name];\n    }\n  },\n  watch: {\n    balanceInWei() {\n      this.hasMinEth();\n    },\n    web3() {\n      this.loadingContracts = true;\n      this.loadingTokens = true;\n      this.onNftSend = false;\n      if (this.address)\n        this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER.NAME });\n      if (this.supportedNetwork) {\n        this.setUpNFT();\n      } else {\n        setTimeout(() => {\n          Toast(\n            `NFT Manager not supported in network: ${this.network.type.name}`,\n            {},\n            WARNING\n          );\n          this.nftApiResponse = [];\n        }, 1000);\n      }\n    },\n    address() {\n      this.loadingContracts = true;\n      this.loadingTokens = true;\n      this.onNftSend = false;\n      if (this.address)\n        this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER.NAME });\n      this.setUpNFT();\n    },\n    contracts(newVal) {\n      if (newVal.length > 0) {\n        this.onTab(0);\n      }\n    },\n    async toAddress(newVal) {\n      if (isAddress(newVal)) {\n        try {\n          const gasTypeFee = this.gasPriceByType(this.gasPriceType);\n          this.localGasPrice = gasTypeFee;\n          const gasFees = await this.nft.getGasFees(newVal, this.selectedNft);\n          const gasFeesToBN = toBNSafe(gasFees).mul(toBNSafe(gasTypeFee));\n          this.gasFees = gasFeesToBN.toString();\n          if (gasFeesToBN.gte(toBN(this.balanceInWei))) {\n            //gasFeesToBN vs current balance\n            this.enoughFunds = false;\n            this.showBalanceError = true;\n          } else {\n            this.enoughFunds = true;\n            this.showBalanceError = false;\n          }\n        } catch (e) {\n          Toast(\n            `Can't send NFT! Please double check if everything is correct`,\n            {},\n            ERROR\n          );\n        }\n      }\n    }\n  },\n  mounted() {\n    this.setUpNFT();\n  },\n  methods: {\n    setUpNFT() {\n      if (!this.supportedNetwork) return;\n      /**\n       * Init NFT Handler\n       */\n      this.nft = new NFT({\n        network: this.network,\n        address: this.address,\n        web3: this.web3\n      });\n\n      this.getNfts();\n      this.localGasPrice = this.gasPriceByType(this.gasPriceType);\n      this.hasMinEth();\n    },\n    getNfts() {\n      this.nft.getNfts().then(res => {\n        this.nftApiResponse = res;\n        this.loadingContracts = false;\n        setTimeout(() => {\n          this.loadingTokens = false;\n        }, 500);\n      });\n    },\n    hasMinEth() {\n      const currentGasPrice = this.localGasPrice;\n      if (\n        toBN(this.balanceInWei).gt(toBN(currentGasPrice).muln(MIN_GAS_LIMIT))\n      ) {\n        this.enoughFunds = true;\n        this.showBalanceError = false;\n      } else {\n        this.enoughFunds = false;\n        this.showBalanceError = true;\n      }\n    },\n    onTab(val) {\n      this.activeTab = val;\n      this.selectedContract = this.contracts[val];\n      this.selectedContractHash = this.contracts[val].contract;\n      this.nft.goToFirstPage();\n    },\n    /**\n     * Send NFT\n     */\n    openNftSend(selectedNft) {\n      if (selectedNft) {\n        this.selectedNft = selectedNft;\n      }\n      this.onNftSend = true;\n      this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER_SEND.NAME });\n    },\n    closeNftSend() {\n      this.onNftSend = false;\n      this.toAddress = '';\n      this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER.NAME });\n    },\n    async sendTx() {\n      if (this.isValid) {\n        try {\n          let gasPrice = undefined;\n          if (this.network.type.name === 'MATIC')\n            gasPrice = `0x${toBN(this.localGasPrice).toString('hex')}`;\n          this.nft\n            .send(this.toAddress, this.selectedNft, gasPrice)\n            .then(response => {\n              this.updateValues();\n              this.enoughFunds = true;\n              this.toAddress = '';\n              this.closeNftSend();\n              Toast(\n                'Cheers! Your transaction was mined. Check it in ',\n                {\n                  title: `${getService(this.network.type.blockExplorerTX)}`,\n                  url: this.network.type.blockExplorerTX.replace(\n                    '[[txHash]]',\n                    response.blockHash\n                  )\n                },\n                SUCCESS,\n                5000\n              );\n            })\n            .catch(e => {\n              const error = handleError(e.message);\n              if (error) Toast(error, {}, ERROR);\n            });\n        } catch (e) {\n          Toast(e.message, {}, WARNING);\n        }\n      }\n    },\n    updateValues() {\n      const idx = this.tokens.findIndex(\n        item => item.token_id === this.selectedNft.token_id\n      );\n      this.tokens.splice(idx, 1);\n      if (this.tokens.length === 0 && this.contracts.length === 1) {\n        this.hasNoTokens = true;\n      }\n      this.getNfts();\n    },\n    setAddress(address) {\n      if (typeof address === 'object' && !!address) {\n        this.toAddress = address.address;\n      } else {\n        this.toAddress = address;\n      }\n    },\n    /**\n     * Pagination\n     */\n    setPage(number) {\n      this.nft.setCurrentPage(number);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n\n<style lang=\"scss\">\n.module-nft-manager .loader .v-skeleton-loader__bone {\n  background: transparent !important;\n}\n.nft-pagination {\n  .v-pagination__navigation,\n  .v-pagination__item {\n    box-shadow: none;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNftManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNftManager.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleNftManager.vue?vue&type=template&id=ae2ed630&scoped=true&\"\nimport script from \"./ModuleNftManager.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleNftManager.vue?vue&type=script&lang=js&\"\nimport style1 from \"./ModuleNftManager.vue?vue&type=style&index=1&id=ae2ed630&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ae2ed630\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNftManager.vue?vue&type=style&index=1&id=ae2ed630&prod&lang=scss&\""],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/assets/images/icons/dapps/icon-dapp-stake.svg","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue?213e","webpack:///./src/dapps/staked-dapp/configsRoutes.js","webpack:///./src/dapps/staked-dapp/components/StakedStatus.vue?3424","webpack:///src/dapps/staked-dapp/components/StakedStatus.vue","webpack:///./src/dapps/staked-dapp/components/StakedStatus.vue?cad1","webpack:///./src/dapps/staked-dapp/components/StakedStatus.vue","webpack:///src/dapps/staked-dapp/TheStakedLayout.vue","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue?e29b","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue","webpack:///./src/dapps/staked-dapp/handlers/handlerStaked.js","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue?daf2","webpack:///./src/assets/images/currencies/eth-dark-navy.svg","webpack:///./src/dapps/staked-dapp/handlers/configNetworkTypes.js","webpack:///./src/dapps/staked-dapp/components/StakedStatus.vue?2e68"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","headerImg","header","tabs","activeTab","tabChanged","validNetworks","scopedSlots","_u","key","fn","staticClass","_v","_s","totalStaked","currentAprFormatted","model","value","callback","$$v","expression","class","loadingValidators","_e","myETHTotalStaked","proxy","getArticle","ref","handlerStaked","apr","startProvision","pollingStatus","on","sendTransaction","txReceipt","pendingTxHash","validators","amount","refetchValidators","staticRenderFns","STAKED_ROUTE","STAKED","NAME","PATH","STATUS","closeWithdrawal","openWithdrawalModal","selectedValidator","closeExit","openExitModal","_l","idx","loading","length","justStakedValidator","allPendingValidators","activeValidators","exitedValidators","pending","isExpanded","$event","expand","iconETHNavy","amountFiat","status","toLowerCase","STATUS_TYPES","CREATED","justStaked","DEPOSITED","PENDING","FAILED","etherscanUrl","ethVmUrl","onGoerli","estimatedWaitTime","url","active","totalBalanceETH","totalBalanceFiat","convertTotalReward","detailed_balance_info","total_reward_and_fees","conversion_factor_power","averageApr","withdrawal_set","nativeOn","openWithdrawal","apply","arguments","can_exit","openExit","validator_index","ACTIVE","EXITING","_m","components","WithdrawalPopup","ExitPopup","props","type","default","pendingHash","data","expanded","computed","validatorsRaw","validator","allRawValidators","raw","acc","Object","configNetworkTypes","earned","formatFloatingPointValue","pendingValidators","etherscanAddrUrl","etherscanTxUrl","methods","findValidatorIndex","findWithdrawalValidator","item","div","toString","convertedBalance","BigNumber","reset","convertToEth1","getAverageApr","getEstimatedDuration","now","component","name","TheWrapperDapp","StakedStepper","title","subtext","subtextClass","route","id","path","isValidNetwork","watch","$route","address","mounted","detactUrlChangeTab","ABI_GET_FEES","inputs","internalType","outputs","stateMutability","EXITED","Staked","constructor","web3","network","validatorsCount","transactionData","myValidators","endpoint","getTotalStakedAndAPR","getValidators","fetch","then","res","json","times","total_staked","getExitableValidators","axios","get","filteredExitable","filteredArray","reduce","arr","newRaw","filter","rawItem","found","forEach","wItem","wRawItem","decoded","pubkey","push","exitableValidators","map","withdrawal_credentials_are_eth1Address","assign","concat","catch","resp","total","val","balanceETH","balance","toFixed","plus","err","response","msg","Toast","ERROR","params","count","post","eth1Address","eth2Address","provisioning_request_uuid","startPolling","$t","success","error","uuid","prevReqComplete","interval","setInterval","parseInt","transaction","clearInterval","from","to","batchContract","eth","handleError","pow","GOERLI","depositAddress","ETH","ethvmTxUrl","ethvmAddrUrl"],"mappings":"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CAAC,MAAQ,eAAe,KAAO,OAAO,CAACN,EAAIkB,GAAG,sBAAsB,WAAU,GAAGlB,EAAI6B,QAAiB,IACpU,EAAkB,CAAC,WAAa,IAAI7B,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACa,YAAY,wBAAwB,CAACjB,EAAIkB,GAAG,YAAYd,EAAG,OAAO,CAACa,YAAY,sBAAsB,CAACjB,EAAIkB,GAAG,cAAcd,EAAG,MAAMJ,EAAIkB,GAAG,yB,yHC0WhP,GACfoF,YACAC,yGACAC,+DAEAC,OACA/D,YACAgE,WACAC,gBAEAC,aACAF,YACAC,YAEAnE,WACAkE,aACAC,YAEAjD,SACAgD,aACAC,YAEAhE,QACA+D,YACAC,WAEA/D,mBACA8D,cACAC,iBAGAE,OACA,OACAzC,gBACA0C,WACAtC,oBACApB,uBACAG,iBACAF,uBAGA0D,aACA,wCACA,kDACA,+CACA,+EACA,4CACA,oDAKAC,gBACA,WAMA,OALA,wBACAC,cACAC,cAGA,GAOApD,mBACA,yCACA,2CACA,2BACAqD,gCACAA,iDAEA,6BACA,+BACAA,mBACA,GAEA,GACAC,OACAC,oBACAnC,OACAoC,6CACA,oBACAC,+BACAnC,gBACAoC,wBACAnC,mCACA,kCAEAK,0BACA,0CACA,MACAC,eACA,4CACAwB,yCACAnB,sCACAmB,kBACAA,eAMA,UACA,KAQApD,mBACA,yCACA,GACAoD,wCACAA,wCACAA,wCACA,CACA,2BACAA,gCACAA,iDAEA,6BACA,+BACAA,mBACA,GAGA,GACAA,wCACAA,yCAEAC,OACAC,oBACAnC,OACAoC,6CACA,oBACAC,+BACAnC,gBACAoC,wBACAnC,mCACA,kCAEAK,0BACA,0CACA,MACAC,kBACAK,eAKA,UACA,KAOAyB,oBACA,yCACA,cACA,kCACA,0BAgCA,OA9BAN,2CACAA,yCACAA,wCACAA,6CAEAC,QACAzE,sCACA0B,6BACA,yCAEAC,gBACAS,SACAuC,oDACA,aACAxC,aACAwC,uCACAI,8BACAxC,cACAoC,2CACA,KACAH,UACA,GACAlC,kBACAkC,gDACA,0BACAA,wCAEA,MAGA,GACA,KAOAvD,sBACA,wBACA,CACA,CACAjB,yCACA0B,6BACA,4CAEAK,cACAJ,sBACAS,0BACAuC,kDACA,iBACA,KACAxC,8BACAwC,uCACAK,gCACA,OAIA,IAOA9D,uBACA,iEAGA+D,SACAC,sBACA,6CACA,WAUAC,6BACA,6CACAC,UAEA,UACA,EAEA,GAEAzC,wBACA,eACA0C,oBACAC,WACA,eACAC,EACAC,kBACA,mBACA,mBAEA,GAEAC,QACA,0BACA,0BAEAjF,kBACA,4BACA,cAEAG,YACA,sBACA,cAKAuC,kBACA,yBACA,6BAKAI,YACA,yBACA,uBAMAoC,qBACA,2CAMAC,qBACA,YACA,cAEA,kBACA,aACA,mBACA,gBACA,EACAH,oBACA,0BACA,mBAKAhE,UACA,wCAMAF,cACA,0BAMAe,WACA,kDAMAuD,wBACA,oBACA,SACA,2BACA,8BACA,mCACAC,EACA,sBACA,iCCvuBoX,I,wBCQhXC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCwIA,GACfC,uBACApC,YACAqC,+DACAC,kEACA,mBAEA/B,OACA,OACAjG,qBACAL,oBACAoC,SACAnC,QACAqI,6BACAC,QACA,kGACAC,iCAEArI,YACAwB,iBACAzB,MACA,CACAiI,aACAM,OAAAN,oBACAO,MAEA,CACAP,cACAM,OACAN,mBACAQ,oBAEAD,SAKAlC,aACA,+CACA,wCACA,yCAKAjF,mBACA,OACA0F,0DACA,QAOApG,cACA,OACAoG,6DAOAnG,sBACA,gCACA,6CAEA,MAMAgB,gBACA,yCAMAK,aACA,wCAMAd,oBACA,6CAMAa,gBACA,yCAEA0G,iBACA,kCACA,4BACApB,kBAEA,oBAGAqB,OACAC,SACA,2BAMA5G,iBACA,SACA,kBAEA,0BACA,kCAQA6G,WACA,6BACA,0BACA,mCAIAC,UAIA,0BAKA,sBACA,8BACA,UACA,aACA,gBAIA3B,SACA4B,qBACA,yBACA,kBACA,+BAEA,gCAGA7I,cACA,kBAKAyB,kBACA,6CAMAG,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","file":"js/dapp-staked~f71cff67.fbc2fe30.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/icon-dapp-stake.21f5fa37.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('the-wrapper-dapp',{attrs:{\"is-new-header\":true,\"dapp-img\":_vm.headerImg,\"banner-text\":_vm.header,\"tab-items\":_vm.tabs,\"active-tab\":_vm.activeTab,\"external-contents\":\"\",\"on-tab\":_vm.tabChanged,\"valid-networks\":_vm.validNetworks},scopedSlots:_vm._u([{key:\"HeaderBody\",fn:function(){return [_c('v-divider',{staticClass:\"textMedium my-3\"}),_c('div',{staticClass:\"d-flex flex-wrap align-center justify-center\"},[_c('div',{staticClass:\"text-uppercase textMedium--text font-weight-bold\"},[_vm._v(\" Total Staked: \"),_c('span',{staticClass:\"greenPrimary--text\"},[_vm._v(_vm._s(_vm.totalStaked))])]),_c('v-icon',{attrs:{\"color\":\"textMedium\"}},[_vm._v(\"mdi-circle-medium\")]),_c('div',{staticClass:\"text-uppercase textMedium--text font-weight-bold\"},[_vm._v(\" Current APR: \"),_c('span',{staticClass:\"greenPrimary--text\"},[_vm._v(_vm._s(_vm.currentAprFormatted))])])],1),_c('v-btn-toggle',{staticClass:\"d-flex align-center justify-center mt-3 white--text\",attrs:{\"mandatory\":\"\",\"borderless\":\"\",\"active-class\":\"expandHeader font-weight-bold\",\"background-color\":\"transparent\"},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('v-btn',{staticClass:\"px-md-9 white--text text-transform--initial\",class:_vm.activeTab === 0 ? 'staked-tab-active' : 'staked-tab-inactive',attrs:{\"color\":\"\"}},[_vm._v(\" New stake \")]),_c('v-btn',{class:[\n          'px-md-9 white--text text-transform--initial d-flex  flex-column align-center',\n          _vm.activeTab === 1 ? 'staked-tab-active' : 'staked-tab-inactive'\n        ],attrs:{\"color\":\"\"}},[_c('div',[_c('div',{class:[\n              'white--text',\n              _vm.activeTab === 1 ? 'font-weight-medium' : ''\n            ]},[_vm._v(\" My stake \")]),(!_vm.loadingValidators)?_c('div',{staticClass:\"mew-caption textLight--text\"},[_vm._v(\" \"+_vm._s(!_vm.loadingValidators ? _vm.myETHTotalStaked : '--')+\" \")]):_vm._e()])])],1)]},proxy:true},{key:\"HeaderRight\",fn:function(){return [_c('div',{staticClass:\"text-right\"},[_c('a',{staticClass:\"greenPrimary--text font-weight-medium text-right\",attrs:{\"href\":_vm.getArticle('stake-eth2-mew-web'),\"target\":\"_blank\"}},[_vm._v(\" New to staking? Learn more \"),_c('v-icon',{staticClass:\"ml-1\",attrs:{\"small\":\"\",\"color\":\"greenPrimary\"}},[_vm._v(\"mdi-open-in-new\")])],1)])]},proxy:true},{key:\"tabContent1\",fn:function(){return [_c('v-sheet',{staticClass:\"mx-auto\",attrs:{\"min-height\":\"500px\",\"max-width\":\"700px\",\"color\":\"transparent\"}},[_c('staked-stepper',{ref:\"stakedStepper\",attrs:{\"current-apr\":_vm.handlerStaked.apr,\"start-provision\":_vm.startProvision,\"polling-status\":_vm.pollingStatus},on:{\"readyToStake\":_vm.sendTransaction}})],1)]},proxy:true},{key:\"tabContent2\",fn:function(){return [_c('v-sheet',{staticClass:\"py-13 mx-auto\",attrs:{\"min-height\":\"500px\",\"max-width\":\"700px\",\"color\":\"transparent\"}},[_c('staked-status',{attrs:{\"tx-receipt\":_vm.handlerStaked.txReceipt,\"pending-hash\":_vm.pendingTxHash,\"validators\":_vm.validators,\"loading\":_vm.loadingValidators,\"amount\":_vm.amount,\"refetch-validators\":_vm.refetchValidators}})],1)]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const STAKED_ROUTE = {\n  STAKED: { NAME: 'Staked', PATH: 'staked' },\n  STATUS: {\n    NAME: 'StakedStatus',\n    PATH: 'status'\n  }\n};\n\nexport { STAKED_ROUTE };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"staked-status-container mx-auto\"},[_c('withdrawal-popup',{attrs:{\"reset\":_vm.closeWithdrawal,\"open-withdrawal-modal\":_vm.openWithdrawalModal,\"selected-validator\":_vm.selectedValidator}}),_c('exit-popup',{attrs:{\"close-modal\":_vm.closeExit,\"open-exit-modal\":_vm.openExitModal,\"selected-validator\":_vm.selectedValidator}}),(_vm.loading)?_c('div',[_c('v-skeleton-loader',{attrs:{\"width\":\"150px\",\"type\":\"list-item\"}}),_vm._l((3),function(idx){return _c('v-skeleton-loader',{key:idx,staticClass:\"mb-4\",attrs:{\"height\":\"100px\",\"type\":\"image\"}})})],2):_vm._e(),(!_vm.loading)?_c('div',[(\n        (_vm.validators.length === 0 && _vm.justStakedValidator.length === 0) ||\n        (_vm.allPendingValidators.length === 0 &&\n          _vm.activeValidators.length === 0 &&\n          _vm.exitedValidators.length === 0)\n      )?_c('div',[_vm._v(\" You are currently not staking any eth. \")]):_vm._e(),(_vm.allPendingValidators.length > 0)?_c('div',{staticClass:\"pb-8\"},[_c('span',{staticClass:\"mew-heading-3\"},[_vm._v(\"Pending\")]),_vm._l((_vm.allPendingValidators),function(pending,idx){return _c('div',{key:pending + idx,staticClass:\"mt-4 d-flex flex-column align-center cursor-pointer justify-space-between\"},[_c('div',{class:[\n            'rounded-t-lg header-container greyLight pa-5 full-width d-flex flex-row align-center justify-space-between',\n            _vm.isExpanded(idx) ? 'rounded-t-lg' : 'rounded-lg'\n          ],on:{\"click\":function($event){return _vm.expand(idx)}}},[_c('div',{staticClass:\"left-container d-flex\"},[_c('img',{attrs:{\"src\":_vm.iconETHNavy,\"height\":\"22\",\"alt\":\"ethereum\"}}),_c('div',{staticClass:\"ml-3\"},[_c('div',{staticClass:\"mew-heading-3\"},[_vm._v(\" \"+_vm._s(pending.amount)+\" \"),_c('span',{staticClass:\"mew-caption\"},[_vm._v(\"ETH\")])]),_c('div',{staticClass:\"textMedium--text mt-1\"},[_vm._v(\" \"+_vm._s(pending.amountFiat)+\" \")])])]),_c('div',[_c('v-progress-circular',{attrs:{\"size\":\"18\",\"width\":\"2\",\"color\":\"greenPrimary\",\"indeterminate\":\"\"}}),_c('v-icon',{staticClass:\"ml-5\",attrs:{\"color\":\"greyPrimary\",\"size\":\"22\"}},[_vm._v(_vm._s(_vm.isExpanded(idx) ? 'mdi-chevron-up' : 'mdi-chevron-down'))])],1)]),(_vm.isExpanded(idx))?_c('div',{staticClass:\"border-container rounded-b-lg full-width pa-5\"},[_c('div',{staticClass:\"mt-5 mb-8 font-weight-bold\"},[_vm._v(\"More Info\")]),(pending.status.toLowerCase() === _vm.STATUS_TYPES.CREATED)?_c('div',{staticClass:\"d-flex\"},[_c('v-progress-circular',{staticClass:\"ml-4\",attrs:{\"size\":\"18\",\"width\":\"2\",\"color\":\"greenPrimary\",\"indeterminate\":\"\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(_vm._s(!pending.justStaked || _vm.txReceipt ? 'Processing' : 'Sending'))])],1):_vm._e(),(\n              pending.status.toLowerCase() === _vm.STATUS_TYPES.DEPOSITED ||\n              pending.status.toLowerCase() === _vm.STATUS_TYPES.PENDING\n            )?_c('div',{staticClass:\"d-flex\"},[_c('v-icon',{attrs:{\"size\":\"20\",\"color\":\"greenPrimary\"}},[_vm._v(\"mdi-check-circle\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"Deposited\")])],1):_vm._e(),(pending.status.toLowerCase() === _vm.STATUS_TYPES.FAILED)?_c('div',{staticClass:\"d-flex align-center\"},[_c('v-icon',{attrs:{\"size\":\"20\",\"color\":\"redPrimary\"}},[_vm._v(\"mdi-close-circle\")]),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"Failed\")])],1):_vm._e(),_c('div',{staticClass:\"d-flex mt-6\"},[(pending.etherscanUrl)?_c('a',{staticClass:\"font-weight-medium\",attrs:{\"rel\":\"noopener noreferrer\",\"href\":pending.etherscanUrl,\"target\":\"_blank\"}},[_vm._v(\"View on Etherscan \"),_c('v-icon',{attrs:{\"color\":\"greenPrimary\",\"size\":\"14\"}},[_vm._v(\"mdi-open-in-new\")])],1):_vm._e(),(pending.ethVmUrl && !_vm.onGoerli)?_c('a',{staticClass:\"font-weight-medium ml-5\",attrs:{\"rel\":\"noopener noreferrer\",\"href\":pending.ethVmUrl,\"target\":\"_blank\"}},[_vm._v(\"View on EthVM \"),_c('v-icon',{attrs:{\"color\":\"greenPrimary\",\"size\":\"14\"}},[_vm._v(\"mdi-open-in-new\")])],1):_vm._e()]),(\n              pending.status.toLowerCase() === _vm.STATUS_TYPES.DEPOSITED ||\n              pending.status.toLowerCase() === _vm.STATUS_TYPES.PENDING\n            )?_c('div',{staticClass:\"d-flex flex-column mt-9\"},[_c('div',{staticClass:\"d-flex align-center\"},[_c('v-progress-circular',{attrs:{\"size\":\"18\",\"width\":\"2\",\"color\":\"greenPrimary\",\"indeterminate\":\"\"}}),_c('span',{staticClass:\"ml-2\"},[_vm._v(\"Waiting for validator activation\")])],1),_c('span',{staticClass:\"mew-label font-weight-medium textLight--text mt-1\"},[_vm._v(\"Estimated wait time: \"+_vm._s(pending.estimatedWaitTime)+\" \")]),(pending.url)?_c('a',{staticClass:\"font-weight-medium mt-5\",attrs:{\"rel\":\"noopener noreferrer\",\"href\":pending.url,\"target\":\"_blank\"}},[_vm._v(\"Eth2 Beacon Chain transactions \"),_c('v-icon',{attrs:{\"color\":\"greenPrimary\",\"size\":\"14\"}},[_vm._v(\"mdi-open-in-new\")])],1):_vm._e()]):_vm._e()]):_vm._e()])})],2):_vm._e(),(_vm.activeValidators.length > 0)?_c('div',[_c('span',{staticClass:\"mew-heading-3\"},[_vm._v(\"Active\")]),_vm._l((_vm.activeValidators),function(active,idx){return _c('div',{key:active + idx,staticClass:\"border-container rounded-lg pa-5 mt-4 d-flex justify-space-between\"},[_c('div',{staticClass:\"left-container d-flex\"},[_c('img',{attrs:{\"src\":_vm.iconETHNavy,\"height\":\"26\",\"alt\":\"ethereum\"}}),_c('div',{staticClass:\"left-container-details ml-3\"},[_c('div',{staticClass:\"mew-heading-2\"},[_vm._v(\" \"+_vm._s(active.totalBalanceETH + ' ETH')+\" \")]),_c('div',{staticClass:\"font-weight-medium mt-1\"},[_vm._v(\" \"+_vm._s(active.totalBalanceFiat)+\" \")]),_c('div',{staticClass:\"textLight--text mt-2\"},[_vm._v(\" Earned \"),_c('span',{staticClass:\"greenPrimary--text\"},[_vm._v(_vm._s(_vm.convertTotalReward( active.detailed_balance_info.total_reward_and_fees, active.detailed_balance_info.conversion_factor_power ) + ' ETH'))]),_c('br'),_vm._v(\" Average APR \"+_vm._s(active.averageApr)+\" \")]),_c('div',{staticClass:\"mt-1 d-flex\"},[_c('mew-button',{staticClass:\"mr-1\",attrs:{\"title\":!active.withdrawal_set\n                    ? 'Set withdrawal address'\n                    : 'Already set',\"disabled\":active.withdrawal_set,\"btn-size\":\"medium\"},nativeOn:{\"click\":function($event){return (function () {\n                    _vm.openWithdrawal(active);\n                  }).apply(null, arguments)}}}),_c('mew-button',{attrs:{\"title\":\"\\n                  Exit stake\\n                \",\"disabled\":!active.can_exit,\"btn-size\":\"medium\"},nativeOn:{\"click\":function($event){return (function () {\n                    _vm.openExit(active);\n                  }).apply(null, arguments)}}})],1)])]),_c('div',[_c('a',{staticClass:\"font-weight-medium\",attrs:{\"rel\":\"noopener noreferrer\",\"href\":active.url,\"target\":\"_blank\"}},[_vm._v(\"View validator \"),_c('v-icon',{attrs:{\"color\":\"greenPrimary\",\"size\":\"14\"}},[_vm._v(\"mdi-open-in-new\")])],1)])])})],2):_vm._e(),(_vm.exitedValidators.length > 0)?_c('div',[_c('span',{staticClass:\"mew-heading-3\"},[_vm._v(\"Exited\")]),_vm._l((_vm.exitedValidators),function(active,idx){return _c('div',{key:active + idx,staticClass:\"border-container rounded-lg pa-5 mt-4 d-flex justify-space-between\"},[_c('div',{staticClass:\"left-container d-flex\"},[_c('img',{attrs:{\"src\":_vm.iconETHNavy,\"height\":\"26\",\"alt\":\"ethereum\"}}),_c('div',{staticClass:\"left-container-details ml-3\"},[_c('div',{staticClass:\"mew-heading-2\"},[_vm._v(\" Validator #\"+_vm._s(active.validator_index)+\" \")]),_c('div',{staticClass:\"font-weight-medium mt-1\"},[_vm._v(\" \"+_vm._s(active.status.toLowerCase() === _vm.STATUS_TYPES.ACTIVE || active.status.toLowerCase() === _vm.STATUS_TYPES.EXITING ? 'Exited, in queue for withdrawal' : 'Exited and withdrawn')+\" \")]),_vm._m(0,true),_c('div',{staticClass:\"mt-1 d-flex\"},[_c('mew-button',{staticClass:\"mr-1\",attrs:{\"title\":!active.withdrawal_set\n                    ? 'Set withdrawal address'\n                    : 'Already set',\"disabled\":active.withdrawal_set,\"btn-size\":\"medium\"},nativeOn:{\"click\":function($event){return (function () {\n                    _vm.openWithdrawal(active);\n                  }).apply(null, arguments)}}}),_c('mew-button',{attrs:{\"title\":\"\\n                  Exit stake\\n                \",\"disabled\":true,\"btn-size\":\"medium\"},nativeOn:{\"click\":function($event){return (function () {\n                    _vm.openExit(active);\n                  }).apply(null, arguments)}}})],1)])]),_c('div',[_c('a',{staticClass:\"font-weight-medium\",attrs:{\"rel\":\"noopener noreferrer\",\"href\":active.url,\"target\":\"_blank\"}},[_vm._v(\"View validator \"),_c('v-icon',{attrs:{\"color\":\"greenPrimary\",\"size\":\"14\"}},[_vm._v(\"mdi-open-in-new\")])],1)])])})],2):_vm._e()]):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"textLight--text mt-2\"},[_vm._v(\" Earned \"),_c('span',{staticClass:\"greenPrimary--text\"},[_vm._v(\" -- ETH \")]),_c('br'),_vm._v(\" Average APR --- \")])}]\n\nexport { render, staticRenderFns }","<template>\n  <!--\n    ===================================================\n    Staked Status Tab\n    ===================================================\n    -->\n  <div class=\"staked-status-container mx-auto\">\n    <withdrawal-popup\n      :reset=\"closeWithdrawal\"\n      :open-withdrawal-modal=\"openWithdrawalModal\"\n      :selected-validator=\"selectedValidator\"\n    />\n    <exit-popup\n      :close-modal=\"closeExit\"\n      :open-exit-modal=\"openExitModal\"\n      :selected-validator=\"selectedValidator\"\n    />\n    <!--\n    ===================================================\n    Loading\n    ===================================================\n    -->\n    <div v-if=\"loading\">\n      <v-skeleton-loader width=\"150px\" type=\"list-item\" />\n      <v-skeleton-loader\n        v-for=\"idx in 3\"\n        :key=\"idx\"\n        class=\"mb-4\"\n        height=\"100px\"\n        type=\"image\"\n      />\n    </div>\n    <div v-if=\"!loading\">\n      <!--\n        ===================================================\n        No Validators: \n        ===================================================\n      -->\n      <div\n        v-if=\"\n          (validators.length === 0 && justStakedValidator.length === 0) ||\n          (allPendingValidators.length === 0 &&\n            activeValidators.length === 0 &&\n            exitedValidators.length === 0)\n        \"\n      >\n        You are currently not staking any eth.\n      </div>\n      <!--\n        ===================================================\n        Pending Validators\n        ===================================================\n        -->\n      <div v-if=\"allPendingValidators.length > 0\" class=\"pb-8\">\n        <span class=\"mew-heading-3\">Pending</span>\n        <div\n          v-for=\"(pending, idx) in allPendingValidators\"\n          :key=\"pending + idx\"\n          class=\"mt-4 d-flex flex-column align-center cursor-pointer justify-space-between\"\n        >\n          <!--\n          ===================================================\n          Pending Validators (Header)\n          ===================================================\n          -->\n          <div\n            :class=\"[\n              'rounded-t-lg header-container greyLight pa-5 full-width d-flex flex-row align-center justify-space-between',\n              isExpanded(idx) ? 'rounded-t-lg' : 'rounded-lg'\n            ]\"\n            @click=\"expand(idx)\"\n          >\n            <div class=\"left-container d-flex\">\n              <img :src=\"iconETHNavy\" height=\"22\" alt=\"ethereum\" />\n              <div class=\"ml-3\">\n                <div class=\"mew-heading-3\">\n                  {{ pending.amount }} <span class=\"mew-caption\">ETH</span>\n                </div>\n                <div class=\"textMedium--text mt-1\">\n                  {{ pending.amountFiat }}\n                </div>\n              </div>\n            </div>\n            <div>\n              <v-progress-circular\n                size=\"18\"\n                width=\"2\"\n                color=\"greenPrimary\"\n                indeterminate\n              />\n              <v-icon class=\"ml-5\" color=\"greyPrimary\" size=\"22\">{{\n                isExpanded(idx) ? 'mdi-chevron-up' : 'mdi-chevron-down'\n              }}</v-icon>\n            </div>\n          </div>\n          <!--\n          ===================================================\n          Pending Validators (Details Expanded)\n          ===================================================\n          -->\n          <div\n            v-if=\"isExpanded(idx)\"\n            class=\"border-container rounded-b-lg full-width pa-5\"\n          >\n            <div class=\"mt-5 mb-8 font-weight-bold\">More Info</div>\n            <!--\n            ===================================================\n            Pending Status (Created - Processing)\n            ===================================================\n            -->\n            <div\n              v-if=\"pending.status.toLowerCase() === STATUS_TYPES.CREATED\"\n              class=\"d-flex\"\n            >\n              <v-progress-circular\n                class=\"ml-4\"\n                size=\"18\"\n                width=\"2\"\n                color=\"greenPrimary\"\n                indeterminate\n              />\n              <span class=\"ml-2\">{{\n                !pending.justStaked || txReceipt ? 'Processing' : 'Sending'\n              }}</span>\n            </div>\n            <!--\n            ===================================================\n            Pending Status (Deposited)\n            ===================================================\n            -->\n            <div\n              v-if=\"\n                pending.status.toLowerCase() === STATUS_TYPES.DEPOSITED ||\n                pending.status.toLowerCase() === STATUS_TYPES.PENDING\n              \"\n              class=\"d-flex\"\n            >\n              <v-icon size=\"20\" color=\"greenPrimary\">mdi-check-circle</v-icon>\n              <span class=\"ml-2\">Deposited</span>\n            </div>\n            <!--\n    ===================================================\n    Pending Status (Failed)\n    ===================================================\n    -->\n            <div\n              v-if=\"pending.status.toLowerCase() === STATUS_TYPES.FAILED\"\n              class=\"d-flex align-center\"\n            >\n              <v-icon size=\"20\" color=\"redPrimary\">mdi-close-circle</v-icon>\n              <span class=\"ml-2\">Failed</span>\n            </div>\n            <!--\n    ===================================================\n    Etherscan/EthVM Links\n    ===================================================\n    -->\n            <div class=\"d-flex mt-6\">\n              <a\n                v-if=\"pending.etherscanUrl\"\n                rel=\"noopener noreferrer\"\n                class=\"font-weight-medium\"\n                :href=\"pending.etherscanUrl\"\n                target=\"_blank\"\n                >View on Etherscan\n                <v-icon color=\"greenPrimary\" size=\"14\"\n                  >mdi-open-in-new</v-icon\n                ></a\n              >\n              <a\n                v-if=\"pending.ethVmUrl && !onGoerli\"\n                rel=\"noopener noreferrer\"\n                class=\"font-weight-medium ml-5\"\n                :href=\"pending.ethVmUrl\"\n                target=\"_blank\"\n                >View on EthVM\n                <v-icon color=\"greenPrimary\" size=\"14\"\n                  >mdi-open-in-new</v-icon\n                ></a\n              >\n            </div>\n            <!--\n    ===================================================\n    Waiting for validator activation \n    ===================================================\n    -->\n            <div\n              v-if=\"\n                pending.status.toLowerCase() === STATUS_TYPES.DEPOSITED ||\n                pending.status.toLowerCase() === STATUS_TYPES.PENDING\n              \"\n              class=\"d-flex flex-column mt-9\"\n            >\n              <div class=\"d-flex align-center\">\n                <v-progress-circular\n                  size=\"18\"\n                  width=\"2\"\n                  color=\"greenPrimary\"\n                  indeterminate\n                />\n                <span class=\"ml-2\">Waiting for validator activation</span>\n              </div>\n              <span class=\"mew-label font-weight-medium textLight--text mt-1\"\n                >Estimated wait time: {{ pending.estimatedWaitTime }}\n              </span>\n              <a\n                v-if=\"pending.url\"\n                rel=\"noopener noreferrer\"\n                class=\"font-weight-medium mt-5\"\n                :href=\"pending.url\"\n                target=\"_blank\"\n                >Eth2 Beacon Chain transactions\n                <v-icon color=\"greenPrimary\" size=\"14\"\n                  >mdi-open-in-new</v-icon\n                ></a\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--\n    ===================================================\n    Active Validators\n    ===================================================\n    -->\n      <div v-if=\"activeValidators.length > 0\">\n        <span class=\"mew-heading-3\">Active</span>\n        <div\n          v-for=\"(active, idx) in activeValidators\"\n          :key=\"active + idx\"\n          class=\"border-container rounded-lg pa-5 mt-4 d-flex justify-space-between\"\n        >\n          <div class=\"left-container d-flex\">\n            <img :src=\"iconETHNavy\" height=\"26\" alt=\"ethereum\" />\n            <div class=\"left-container-details ml-3\">\n              <div class=\"mew-heading-2\">\n                {{ active.totalBalanceETH + ' ETH' }}\n              </div>\n              <div class=\"font-weight-medium mt-1\">\n                {{ active.totalBalanceFiat }}\n              </div>\n              <div class=\"textLight--text mt-2\">\n                Earned\n                <span class=\"greenPrimary--text\">{{\n                  convertTotalReward(\n                    active.detailed_balance_info.total_reward_and_fees,\n                    active.detailed_balance_info.conversion_factor_power\n                  ) + ' ETH'\n                }}</span>\n                <br />\n                Average APR {{ active.averageApr }}\n              </div>\n              <div class=\"mt-1 d-flex\">\n                <mew-button\n                  class=\"mr-1\"\n                  :title=\"\n                    !active.withdrawal_set\n                      ? 'Set withdrawal address'\n                      : 'Already set'\n                  \"\n                  :disabled=\"active.withdrawal_set\"\n                  btn-size=\"medium\"\n                  @click.native=\"\n                    () => {\n                      openWithdrawal(active);\n                    }\n                  \"\n                />\n                <mew-button\n                  title=\"\n                    Exit stake\n                  \"\n                  :disabled=\"!active.can_exit\"\n                  btn-size=\"medium\"\n                  @click.native=\"\n                    () => {\n                      openExit(active);\n                    }\n                  \"\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            <a\n              rel=\"noopener noreferrer\"\n              class=\"font-weight-medium\"\n              :href=\"active.url\"\n              target=\"_blank\"\n              >View validator\n              <v-icon color=\"greenPrimary\" size=\"14\">mdi-open-in-new</v-icon></a\n            >\n          </div>\n        </div>\n      </div>\n      <!--\n    ===================================================\n    Exited Validators\n    ===================================================\n    -->\n      <div v-if=\"exitedValidators.length > 0\">\n        <span class=\"mew-heading-3\">Exited</span>\n        <div\n          v-for=\"(active, idx) in exitedValidators\"\n          :key=\"active + idx\"\n          class=\"border-container rounded-lg pa-5 mt-4 d-flex justify-space-between\"\n        >\n          <div class=\"left-container d-flex\">\n            <img :src=\"iconETHNavy\" height=\"26\" alt=\"ethereum\" />\n            <div class=\"left-container-details ml-3\">\n              <div class=\"mew-heading-2\">\n                Validator #{{ active.validator_index }}\n              </div>\n              <div class=\"font-weight-medium mt-1\">\n                {{\n                  active.status.toLowerCase() === STATUS_TYPES.ACTIVE ||\n                  active.status.toLowerCase() === STATUS_TYPES.EXITING\n                    ? 'Exited, in queue for withdrawal'\n                    : 'Exited and withdrawn'\n                }}\n              </div>\n              <div class=\"textLight--text mt-2\">\n                Earned\n                <span class=\"greenPrimary--text\"> -- ETH </span>\n                <br />\n                Average APR ---\n              </div>\n              <div class=\"mt-1 d-flex\">\n                <mew-button\n                  class=\"mr-1\"\n                  :title=\"\n                    !active.withdrawal_set\n                      ? 'Set withdrawal address'\n                      : 'Already set'\n                  \"\n                  :disabled=\"active.withdrawal_set\"\n                  btn-size=\"medium\"\n                  @click.native=\"\n                    () => {\n                      openWithdrawal(active);\n                    }\n                  \"\n                />\n                <mew-button\n                  title=\"\n                    Exit stake\n                  \"\n                  :disabled=\"true\"\n                  btn-size=\"medium\"\n                  @click.native=\"\n                    () => {\n                      openExit(active);\n                    }\n                  \"\n                />\n              </div>\n            </div>\n          </div>\n          <div>\n            <a\n              rel=\"noopener noreferrer\"\n              class=\"font-weight-medium\"\n              :href=\"active.url\"\n              target=\"_blank\"\n              >View validator\n              <v-icon color=\"greenPrimary\" size=\"14\">mdi-open-in-new</v-icon></a\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\nimport moment from 'moment';\n\nimport configNetworkTypes from '@/dapps/staked-dapp/handlers/configNetworkTypes';\nimport {\n  formatFloatingPointValue,\n  formatPercentageValue\n} from '@/core/helpers/numberFormatHelper';\nimport { STATUS_TYPES } from '@/dapps/staked-dapp/handlers/handlerStaked';\nimport { GOERLI } from '@/utils/networks/types';\n\nimport iconETHNavy from '@/assets/images/currencies/eth-dark-navy.svg';\n\nexport default {\n  components: {\n    WithdrawalPopup: () => import('./WithdrawalPopup'),\n    ExitPopup: () => import('./ExitPopup')\n  },\n  props: {\n    validators: {\n      type: Array,\n      default: () => []\n    },\n    pendingHash: {\n      type: String,\n      default: ''\n    },\n    txReceipt: {\n      type: Boolean,\n      default: true\n    },\n    loading: {\n      type: Boolean,\n      default: true\n    },\n    amount: {\n      type: Number,\n      default: 0\n    },\n    refetchValidators: {\n      type: Function,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      iconETHNavy: iconETHNavy,\n      expanded: 0,\n      STATUS_TYPES: STATUS_TYPES,\n      openWithdrawalModal: false,\n      openExitModal: false,\n      selectedValidator: {}\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address']),\n    ...mapState('global', ['preferredCurrency']),\n    ...mapState('external', ['currencyRate']),\n    ...mapState('stakedStore', ['validatorIndex', 'withdrawalValidatorIndex']),\n    ...mapGetters('external', ['fiatValue']),\n    ...mapGetters('global', ['network', 'getFiatValue']),\n    /**\n     * @returns array\n     * Returns all the raw objects in all the validators\n     */\n    validatorsRaw() {\n      const allRawValidators = [];\n      this.validators.map(validator => {\n        validator.raw.map(raw => {\n          allRawValidators.push(raw);\n        });\n      });\n      return allRawValidators;\n    },\n    /**\n     * @returns array\n     * Returns all the active validators with correct info\n     * includes status: ACTIVE\n     */\n    activeValidators() {\n      return this.validatorsRaw.reduce((acc, raw) => {\n        if (raw.status.toLowerCase() === STATUS_TYPES.ACTIVE) {\n          const totalBalanceETH = this.convertToEth1(\n            raw.detailed_balance_info.balance,\n            raw.detailed_balance_info.conversion_factor_power\n          );\n          const earning = new BigNumber(totalBalanceETH).minus(raw.amount);\n          const withdrawn = this.findWithdrawalValidator(\n            raw.validator_index,\n            false\n          );\n          if (!withdrawn) {\n            acc.push(\n              Object.assign({}, raw, {\n                url: `${\n                  configNetworkTypes.network[this.network.type.name].url\n                }${raw.validator_index}`,\n                earned: formatFloatingPointValue(earning).value,\n                totalBalanceETH:\n                  formatFloatingPointValue(totalBalanceETH).value,\n                totalBalanceFiat: this.getFiatValue(\n                  new BigNumber(totalBalanceETH).times(this.fiatValue)\n                ),\n                averageApr: formatPercentageValue(\n                  this.getAverageApr(raw.created, earning, raw.amount)\n                ).value,\n                withdrawal_set:\n                  this.findValidatorIndex(raw.validator_index) ||\n                  raw.withdrawal_credentials_are_eth1Address,\n                can_exit: this.findWithdrawalValidator(\n                  raw.validator_index,\n                  raw.can_exit\n                )\n              })\n            );\n          }\n        }\n        return acc;\n      }, []);\n    },\n    /**\n     * @returns array\n     * Returns all the active validators with correct info\n     * includes status: ACTIVE, EXITED\n     * currently includes active but is possibly exited\n     */\n    exitedValidators() {\n      return this.validatorsRaw.reduce((acc, raw) => {\n        if (\n          raw.status.toLowerCase() === STATUS_TYPES.ACTIVE ||\n          raw.status.toLowerCase() === STATUS_TYPES.EXITED ||\n          raw.status.toLowerCase() === STATUS_TYPES.EXITING\n        ) {\n          const totalBalanceETH = this.convertToEth1(\n            raw.detailed_balance_info.balance,\n            raw.detailed_balance_info.conversion_factor_power\n          );\n          const earning = new BigNumber(totalBalanceETH).minus(raw.amount);\n          const withdrawn = this.findWithdrawalValidator(\n            raw.validator_index,\n            true\n          );\n          if (\n            !withdrawn ||\n            raw.status.toLowerCase() === STATUS_TYPES.EXITED ||\n            raw.status.toLowerCase() === STATUS_TYPES.EXITING\n          ) {\n            acc.push(\n              Object.assign({}, raw, {\n                url: `${\n                  configNetworkTypes.network[this.network.type.name].url\n                }${raw.validator_index}`,\n                earned: formatFloatingPointValue(earning).value,\n                totalBalanceETH:\n                  formatFloatingPointValue(totalBalanceETH).value,\n                totalBalanceFiat: this.getFiatValue(\n                  new BigNumber(totalBalanceETH).times(this.fiatValue)\n                ),\n                averageApr: formatPercentageValue(\n                  this.getAverageApr(raw.created, earning, raw.amount)\n                ).value,\n                withdrawal_set: true,\n                can_exit: false\n              })\n            );\n          }\n        }\n        return acc;\n      }, []);\n    },\n    /**\n     * @returns array\n     * Returns all the pending validators with correct info\n     * includes status: DEPOSITED, PENDING, FAILED, CREATED\n     */\n    pendingValidators() {\n      return this.validatorsRaw.reduce((acc, raw) => {\n        const nextDay = 60 * 60 * 24 * 1000;\n        const createdDate = new Date(raw.created).getTime() + nextDay;\n        const withinTheDay = new Date().getTime() <= createdDate;\n        if (\n          raw.status.toLowerCase() === STATUS_TYPES.DEPOSITED ||\n          raw.status.toLowerCase() === STATUS_TYPES.PENDING ||\n          raw.status.toLowerCase() === STATUS_TYPES.FAILED ||\n          (raw.status.toLowerCase() === STATUS_TYPES.CREATED && withinTheDay)\n        ) {\n          acc.push({\n            amount: formatFloatingPointValue(raw.amount).value,\n            amountFiat: this.getFiatValue(\n              new BigNumber(raw.amount).times(this.fiatValue)\n            ),\n            status: raw.status,\n            ethVmUrl:\n              configNetworkTypes.network[this.network.type.name].ethvmAddrUrl +\n              this.address,\n            etherscanUrl:\n              configNetworkTypes.network[this.network.type.name]\n                .etherscanAddrUrl + this.address,\n            url: raw.address\n              ? configNetworkTypes.network[this.network.type.name].url +\n                '0x' +\n                raw.address\n              : '',\n            estimatedWaitTime:\n              raw.queue && raw.queue.estimated_activation_timestamp\n                ? this.getEstimatedDuration(\n                    raw.queue.estimated_activation_timestamp\n                  )\n                : '~'\n          });\n        }\n        return acc;\n      }, []);\n    },\n    /**\n     * @returns array\n     * Returns the validator that was just staked\n     * displays after step 4 of New Stake tab\n     */\n    justStakedValidator() {\n      if (this.pendingHash) {\n        return [\n          {\n            amount: formatFloatingPointValue(this.amount).value,\n            amountFiat: this.getFiatValue(\n              new BigNumber(this.amount).times(this.fiatValue)\n            ),\n            justStaked: true,\n            status: STATUS_TYPES.CREATED,\n            ethVmUrl: this.pendingHash\n              ? configNetworkTypes.network[this.network.type.name].ethvmTxUrl +\n                this.pendingHash\n              : null,\n            etherscanUrl: this.pendingHash\n              ? configNetworkTypes.network[this.network.type.name]\n                  .etherscanTxUrl + this.pendingHash\n              : null\n          }\n        ];\n      }\n      return [];\n    },\n    /**\n     * @returns array\n     * Returns ALL the pending validators\n     * including pending validators from api and just staked validator\n     */\n    allPendingValidators() {\n      return this.justStakedValidator.concat(this.pendingValidators);\n    }\n  },\n  methods: {\n    findValidatorIndex(idx) {\n      const findIdx = !!this.validatorIndex.find(item => idx === item);\n      return !!findIdx;\n    },\n    /**\n     *\n     * @param {*} idx\n     * @param {*} canExit\n     * @returns Boolean\n     *\n     * checks withdrawal validator address in the local store\n     */\n    findWithdrawalValidator(idx, canExit) {\n      const findIdx = !!this.withdrawalValidatorIndex.find(\n        item => idx === item\n      );\n      if (findIdx) {\n        return !findIdx;\n      }\n      return canExit;\n    },\n    convertTotalReward(balance, decimal) {\n      const convertedBalance = BigNumber(balance)\n        .div(BigNumber(10).pow(decimal))\n        .toString();\n      const hasEarnings = BigNumber(convertedBalance).gt(0)\n        ? convertedBalance\n        : BigNumber(0).toString();\n      if (hasEarnings.length > 10) {\n        return `${hasEarnings.slice(0, 9)}...`;\n      }\n      return hasEarnings;\n    },\n    reset() {\n      this.selectedValidator = {};\n      this.refetchValidators();\n    },\n    closeWithdrawal() {\n      this.openWithdrawalModal = false;\n      this.reset();\n    },\n    closeExit() {\n      this.openExitModal = false;\n      this.reset();\n    },\n    /**\n     * Open modal and set selected validator\n     */\n    openWithdrawal(validator) {\n      this.selectedValidator = validator;\n      this.openWithdrawalModal = true;\n    },\n    /**\n     * Open modal and set selected validator\n     */\n    openExit(validator) {\n      this.selectedValidator = validator;\n      this.openExitModal = true;\n    },\n    /**\n     * @returns BigNumber\n     * Converts the unit to ETH1 from ETH2\n     */\n    convertToEth1(balance, decimal = 9) {\n      return new BigNumber(balance).div(new BigNumber(10).pow(decimal));\n    },\n    /**\n     * @returns BigNumber\n     * Gets the average apr for a specific validator\n     */\n    getAverageApr(activationTime, earning, amountStaked) {\n      if (earning.lte(0)) {\n        return BigNumber(0);\n      }\n      const now = moment.utc();\n      const activated = moment.utc(activationTime);\n      const daysActive = now.diff(activated, 'days');\n      const percentIncrease = BigNumber(earning).div(amountStaked);\n      const percentIncreasePerDay =\n        BigNumber(percentIncrease).dividedBy(daysActive);\n      const apr = percentIncreasePerDay.times(365).times(100);\n      return new BigNumber(apr);\n    },\n    /**\n     * Sets the idx container to expand\n     */\n    expand(idx) {\n      this.expanded = this.expanded !== idx ? idx : null;\n    },\n    /**\n     * @returns boolean\n     * Returns if the pending container is expanded\n     */\n    isExpanded(idx) {\n      return this.expanded === idx;\n    },\n    /**\n     * @returns boolean\n     * Checks if its goerli\n     */\n    onGoerli() {\n      return this.network.type.name === GOERLI.name;\n    },\n    /**\n     * @returns string\n     * Returns the exact estimated wait time till activation in days, hours, minutes\n     */\n    getEstimatedDuration(timestamp) {\n      const now = moment().utc();\n      const activationTime = moment(timestamp);\n      if (now.unix() === activationTime.unix())\n        return 'Should activate momentarily';\n      return `${activationTime.diff(now, 'days')} days ${activationTime.diff(\n        now,\n        'hours'\n      )} hours and ${activationTime.diff(now, 'minutes')} minutes`;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.staked-status-container {\n  max-width: 500px;\n}\n.border-container {\n  border: 1px solid var(--v-greyLight-base);\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StakedStatus.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StakedStatus.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StakedStatus.vue?vue&type=template&id=515143c8&scoped=true&\"\nimport script from \"./StakedStatus.vue?vue&type=script&lang=js&\"\nexport * from \"./StakedStatus.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StakedStatus.vue?vue&type=style&index=0&id=515143c8&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"515143c8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <!--\n    ===================================================\n    The Staked Layout\n    ===================================================\n    -->\n  <the-wrapper-dapp\n    :is-new-header=\"true\"\n    :dapp-img=\"headerImg\"\n    :banner-text=\"header\"\n    :tab-items=\"tabs\"\n    :active-tab=\"activeTab\"\n    external-contents\n    :on-tab=\"tabChanged\"\n    :valid-networks=\"validNetworks\"\n  >\n    <!--\n    ===================================================\n    The Staked Header/Banner\n    ===================================================\n    -->\n    <template #HeaderBody>\n      <v-divider class=\"textMedium my-3\" />\n      <div class=\"d-flex flex-wrap align-center justify-center\">\n        <div class=\"text-uppercase textMedium--text font-weight-bold\">\n          Total Staked:\n          <span class=\"greenPrimary--text\">{{ totalStaked }}</span>\n        </div>\n        <v-icon color=\"textMedium\">mdi-circle-medium</v-icon>\n        <div class=\"text-uppercase textMedium--text font-weight-bold\">\n          Current APR:\n          <span class=\"greenPrimary--text\">{{ currentAprFormatted }}</span>\n        </div>\n      </div>\n      <!--\n    ===================================================\n    Menu tabs\n    ===================================================\n    -->\n      <v-btn-toggle\n        v-model=\"activeTab\"\n        class=\"d-flex align-center justify-center mt-3 white--text\"\n        mandatory\n        borderless\n        active-class=\"expandHeader font-weight-bold\"\n        background-color=\"transparent\"\n      >\n        <v-btn\n          class=\"px-md-9 white--text text-transform--initial\"\n          :class=\"activeTab === 0 ? 'staked-tab-active' : 'staked-tab-inactive'\"\n          color=\"\"\n        >\n          New stake\n        </v-btn>\n        <v-btn\n          :class=\"[\n            'px-md-9 white--text text-transform--initial d-flex  flex-column align-center',\n            activeTab === 1 ? 'staked-tab-active' : 'staked-tab-inactive'\n          ]\"\n          color=\"\"\n        >\n          <div>\n            <div\n              :class=\"[\n                'white--text',\n                activeTab === 1 ? 'font-weight-medium' : ''\n              ]\"\n            >\n              My stake\n            </div>\n            <div v-if=\"!loadingValidators\" class=\"mew-caption textLight--text\">\n              {{ !loadingValidators ? myETHTotalStaked : '--' }}\n            </div>\n          </div>\n        </v-btn>\n      </v-btn-toggle>\n    </template>\n    <!--\n    ===================================================\n    Info Link\n    ===================================================\n    -->\n    <template #HeaderRight>\n      <div class=\"text-right\">\n        <a\n          :href=\"getArticle('stake-eth2-mew-web')\"\n          target=\"_blank\"\n          class=\"greenPrimary--text font-weight-medium text-right\"\n        >\n          New to staking? Learn more\n          <v-icon class=\"ml-1\" small color=\"greenPrimary\"\n            >mdi-open-in-new</v-icon\n          >\n        </a>\n      </div>\n    </template>\n\n    <!--\n    ===================================================\n    New Stake Tab\n    ===================================================\n    -->\n    <template #tabContent1>\n      <v-sheet\n        min-height=\"500px\"\n        max-width=\"700px\"\n        color=\"transparent\"\n        class=\"mx-auto\"\n      >\n        <staked-stepper\n          ref=\"stakedStepper\"\n          :current-apr=\"handlerStaked.apr\"\n          :start-provision=\"startProvision\"\n          :polling-status=\"pollingStatus\"\n          @readyToStake=\"sendTransaction\"\n        />\n      </v-sheet>\n    </template>\n    <!--\n    ===================================================\n    My Stake tab\n    ===================================================\n    -->\n    <template #tabContent2>\n      <v-sheet\n        min-height=\"500px\"\n        max-width=\"700px\"\n        color=\"transparent\"\n        class=\"py-13 mx-auto\"\n      >\n        <staked-status\n          :tx-receipt=\"handlerStaked.txReceipt\"\n          :pending-hash=\"pendingTxHash\"\n          :validators=\"validators\"\n          :loading=\"loadingValidators\"\n          :amount=\"amount\"\n          :refetch-validators=\"refetchValidators\"\n        />\n      </v-sheet>\n    </template>\n  </the-wrapper-dapp>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport { SUPPORTED_NETWORKS } from './handlers/supportedNetworks';\nimport { STAKED_ROUTE } from './configsRoutes';\nimport {\n  formatPercentageValue,\n  formatFloatingPointValue\n} from '@/core/helpers/numberFormatHelper';\n\nimport StakedStatus from './components/StakedStatus';\n\nimport handlerStaked from './handlers/handlerStaked';\nexport default {\n  name: 'TheStakedLayout',\n  components: {\n    TheWrapperDapp: () => import('@/core/components/TheWrapperDapp'),\n    StakedStepper: () => import('./components/staked-stepper/StakedStepper'),\n    'staked-status': StakedStatus\n  },\n  data() {\n    return {\n      validNetworks: SUPPORTED_NETWORKS,\n      headerImg: require('@/assets/images/icons/dapps/icon-dapp-stake.svg'),\n      amount: 0,\n      header: {\n        title: 'Ethereum 2.0 staking',\n        subtext:\n          'Stake on Ethereum 2.0 and earn continuous rewards for providing a public good to the community.',\n        subtextClass: 'textMedium--text'\n      },\n      activeTab: 0,\n      handlerStaked: {},\n      tabs: [\n        {\n          name: 'Stake',\n          route: { name: STAKED_ROUTE.STAKED.NAME },\n          id: 0\n        },\n        {\n          name: 'Status',\n          route: {\n            name: STAKED_ROUTE.STATUS.NAME,\n            path: STAKED_ROUTE.STATUS.PATH\n          },\n          id: 1\n        }\n      ]\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['web3', 'address']),\n    ...mapGetters('global', ['network']),\n    ...mapGetters('article', ['getArticle']),\n    /**\n     * Total staked by user\n     * @returns string\n     */\n    myETHTotalStaked() {\n      return (\n        formatFloatingPointValue(this.handlerStaked.myETHTotalStaked).value +\n        ' ETH'\n      );\n    },\n    /**\n     * Total Staked\n     * @returns string\n     */\n    totalStaked() {\n      return (\n        formatFloatingPointValue(this.handlerStaked.totalStaked).value + ' ETH'\n      );\n    },\n    /**\n     * Current APR Formatted\n     * @returns string\n     */\n    currentAprFormatted() {\n      if (this.handlerStaked.apr > 0) {\n        return formatPercentageValue(this.handlerStaked.apr).value;\n      }\n      return '--';\n    },\n    /**\n     * Gets the status after polling (happens on step4)\n     * @returns object\n     */\n    pollingStatus() {\n      return this.handlerStaked.pollingStatus;\n    },\n    /**\n     * Gets the clients validators\n     * @returns array\n     */\n    validators() {\n      return this.handlerStaked.myValidators;\n    },\n    /**\n     * Checks if validators are loading\n     * @returns boolean\n     */\n    loadingValidators() {\n      return this.handlerStaked.loadingValidators;\n    },\n    /**\n     * Checks for pending tx hash\n     * @returns string\n     */\n    pendingTxHash() {\n      return this.handlerStaked.pendingTxHash;\n    },\n    isValidNetwork() {\n      const chainID = this.network.type.chainID;\n      const validChain = this.validNetworks.filter(\n        item => item.chainID === chainID\n      );\n      return validChain.length > 0;\n    }\n  },\n  watch: {\n    $route() {\n      this.detactUrlChangeTab();\n    },\n    /**\n     * @watches pendingTxHash (comes after send transaction)\n     * if it gets set then go to staked status\n     */\n    pendingTxHash(newVal) {\n      if (newVal !== '') {\n        this.activeTab = 1;\n      }\n      if (this.$refs.stakedStepper) {\n        this.$refs.stakedStepper.reset();\n      }\n    },\n    /*\n    - watches for address state change\n    - updates handlerStaked with new address\n    - if user is currently onStep within the stakeStepper component, it will run the reset function\n    */\n    address(newVal) {\n      this.handlerStaked.address = newVal;\n      if (this.$refs.stakedStepper) {\n        this.$refs.stakedStepper.reset();\n      }\n    }\n  },\n  mounted() {\n    /**\n     * Check url and change tab on load\n     */\n    this.detactUrlChangeTab();\n\n    /**\n     * Initiate Stake Handler\n     */\n    if (this.isValidNetwork) {\n      this.handlerStaked = new handlerStaked(\n        this.web3,\n        this.network,\n        this.address\n      );\n    }\n  },\n  methods: {\n    detactUrlChangeTab() {\n      const currentRoute = this.$route.name;\n      if (currentRoute === STAKED_ROUTE.STATUS.NAME) {\n        this.activeTab = this.tabs[1].id;\n      } else {\n        this.activeTab = this.tabs[0].id;\n      }\n    },\n    tabChanged(tab) {\n      this.activeTab = tab;\n    },\n    /**\n     * Start provisioning\n     */\n    startProvision(params) {\n      return this.handlerStaked.startProvision(params);\n    },\n    /**\n     * Send transaction to confirm staking\n     * and set amount value for staked status\n     */\n    sendTransaction(amountETH) {\n      this.handlerStaked.sendTransaction();\n      this.amount = amountETH;\n    },\n    /**\n     * refetch validators\n     */\n    refetchValidators() {\n      this.handlerStaked.getValidators();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.staked-tab-inactive {\n  background-color: rgba(0, 0, 0, 0.24) !important;\n}\n.staked-tab-active::before {\n  opacity: 0 !important;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheStakedLayout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheStakedLayout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheStakedLayout.vue?vue&type=template&id=75579cc4&scoped=true&\"\nimport script from \"./TheStakedLayout.vue?vue&type=script&lang=js&\"\nexport * from \"./TheStakedLayout.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TheStakedLayout.vue?vue&type=style&index=0&id=75579cc4&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"75579cc4\",\n  null\n  \n)\n\nexport default component.exports","import axios from 'axios';\nimport BigNumber from 'bignumber.js';\n\nimport configNetworkTypes from './configNetworkTypes';\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\nimport handleError from '@/modules/confirmation/handlers/errorHandler';\n\n/**\n * ABI to get fees\n * from batch contract\n */\nconst ABI_GET_FEES = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'numValidators',\n        type: 'uint256'\n      }\n    ],\n    name: 'getFees',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n\n/**\n * Validator status types\n */\nconst STATUS_TYPES = {\n  PENDING: 'pending',\n  ACTIVE: 'active',\n  CREATED: 'created',\n  DEPOSITED: 'deposited',\n  FAILED: 'failed',\n  EXITED: 'exited',\n  EXITING: 'exiting'\n};\n\nexport { ABI_GET_FEES, STATUS_TYPES };\nexport default class Staked {\n  constructor(web3, network, address) {\n    /**\n     * set up the variables\n     */\n    this.web3 = web3;\n    this.network = network;\n    this.address = address;\n    this.totalStaked = '';\n    this.apr = '';\n    this.validatorsCount = '';\n    this.pollingStatus = {};\n    this.transactionData = {};\n    this.myValidators = [];\n    this.loadingValidators = false;\n    this.myETHTotalStaked = 0;\n    this.pendingTxHash = '';\n    this.txReceipt = false;\n    this.endpoint = configNetworkTypes.network[this.network.type.name].endpoint;\n    /**\n     * get the initial data (total staked, apr, validators)\n     */\n    this.getTotalStakedAndAPR();\n    this.getValidators();\n  }\n  /**\n   * Get the total staked and current APR\n   */\n  getTotalStakedAndAPR() {\n    fetch(`${this.endpoint}/info`)\n      .then(res => res.json())\n      .then(res => {\n        this.apr = BigNumber(res.apr).times(100).toString();\n        this.totalStaked = res.total_staked;\n      });\n  }\n  /**\n   * Get validators that can be exited by current address\n   * have to be fetched separately due to validators\n   * that was assigned to a different address\n   */\n  getExitableValidators(data) {\n    this.loadingValidators = true;\n    return axios\n      .get(`${this.endpoint}/history?withdrawalCredentials=${this.address}`, {\n        header: { 'Content-Type': 'application/json' }\n      })\n      .then(res => {\n        let filteredExitable = [];\n        // validators and withdrawal credentials found\n        if (data.length > 0) {\n          /**\n           * remove current validators that are\n           * returned in the withdrawalCredentials call\n           *\n           * set can_exit to false\n           */\n          const filteredArray = data.reduce((arr, item) => {\n            /**\n             * updates current item's raw\n             * removing validators found in withdrawalCredentials call\n             */\n            const newRaw = item.raw.filter(rawItem => {\n              let found;\n              // loop through response\n              res.data.forEach(wItem => {\n                /**\n                 * check if current rawItem\n                 * matches any of the withdrawal raw items\n                 * set found to true and exit;\n                 */\n                wItem.raw.forEach(wRawItem => {\n                  if (wRawItem.decoded.pubkey === rawItem.decoded.pubkey) {\n                    found = true;\n                    return; // exit forEach 2\n                  }\n\n                  if (found) return; // exit forEach 1\n                });\n              });\n\n              if (!found) {\n                rawItem['can_exit'] = false;\n              }\n              return !found;\n            });\n            item.raw = newRaw;\n            arr.push(item);\n            return arr;\n          }, []);\n\n          /**\n           * set 'can_exit' key with value based on if\n           * withdrawal_credentials_are_eth1Address is true\n           * for all exitable validators\n           */\n          const exitableValidators = res.data.map(validator => {\n            const newRaw = validator.raw.map(item => {\n              item['can_exit'] = item.withdrawal_credentials_are_eth1Address;\n              return item;\n            });\n            validator.raw = newRaw;\n\n            return Object.assign({}, validator);\n          });\n\n          filteredExitable = filteredArray.concat(exitableValidators);\n        } else {\n          // no validators found but has withdrawal credentials\n          filteredExitable = res.data.map(validator => {\n            const newRaw = validator.raw.map(item => {\n              item['can_exit'] = item.withdrawal_credentials_are_eth1Address;\n              return item;\n            });\n            validator.raw = newRaw;\n\n            return Object.assign({}, validator);\n          });\n        }\n        this.myValidators = filteredExitable;\n        this.loadingValidators = false;\n      })\n      .catch(() => {\n        // no withdrawal credentials found\n        this.myValidators = data.map(item => {\n          const newRaw = item.raw.map(item => {\n            item['can_exit'] = false;\n            return item;\n          });\n          item.raw = newRaw;\n\n          return Object.assign({}, item);\n        });\n        this.loadingValidators = false;\n      });\n  }\n  /**\n   * Get clients validators\n   * and get clients total staked\n   */\n  getValidators() {\n    this.loadingValidators = true;\n    return axios\n      .get(`${this.endpoint}/history?address=${this.address}`, {\n        header: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(resp => {\n        this.myETHTotalStaked = resp.data.reduce((total, val) => {\n          const raw = val.raw[0];\n          const balanceETH =\n            raw.status.toLowerCase() === STATUS_TYPES.ACTIVE && raw.balance\n              ? this.convertToEth1(raw.balance).toFixed()\n              : 0;\n          return new BigNumber(total).plus(balanceETH);\n        }, 0);\n        // check withdrawals\n        this.getExitableValidators(resp.data);\n      })\n      .catch(err => {\n        if (\n          err.response &&\n          err.response.status === 404 &&\n          err.response.data.msg === 'No matching history found'\n        ) {\n          // try to see if withdrawals are set\n          this.getExitableValidators([]);\n          return;\n        }\n        this.loadingValidators = false;\n        this.myValidators = [];\n        Toast(err, {}, ERROR);\n      });\n  }\n  /**\n   * Start provisioning and get the\n   * provisoning request uuid to start polling\n   */\n  async startProvision(params) {\n    this.validatorsCount = params.count;\n    await axios\n      .post(\n        this.endpoint + '/v2/provision',\n        {\n          address: this.address,\n          eth1Address: params.eth2Address,\n          validatorsCount: params.count\n        },\n        {\n          header: {\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n      .then(response => {\n        return response && response.data.provisioning_request_uuid\n          ? this.startPolling(response.data.provisioning_request_uuid)\n          : Toast(this.$t('dappsStaked.error-try-again'), {}, ERROR);\n      })\n      .catch(err => {\n        this.pollingStatus = { success: false, error: err };\n      });\n  }\n  /**\n   * Start polling every 5000 ms\n   * sets pollingStatus for UI\n   */\n  startPolling(uuid) {\n    let prevReqComplete = true;\n    const interval = setInterval(() => {\n      if (!prevReqComplete) return;\n      prevReqComplete = false;\n      return axios\n        .get(`${this.endpoint}/status?provisioning_request_uuid=${uuid}`, {\n          header: {\n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response => {\n          prevReqComplete = true;\n          if (\n            response &&\n            response.data &&\n            response.data.raw.length === parseInt(this.validatorsCount)\n          ) {\n            this.pollingStatus = { success: true };\n            this.transactionData = response.data.transaction;\n            clearInterval(interval);\n          }\n        })\n        .catch(err => {\n          prevReqComplete = true;\n          if (\n            (err.response &&\n              err.response.status === 424 &&\n              err.response.data.msg ===\n                'Not all validators have been provisioned') ||\n            (err.response &&\n              err.response.status === 404 &&\n              err.response.data.msg ===\n                'Requested provisioning_request_uuid not found')\n          ) {\n            return;\n          }\n          this.pollingStatus = { success: false, error: err.response };\n        });\n    }, 5000);\n  }\n  /**\n   * Send tx to confirm staking\n   */\n  sendTransaction() {\n    this.transactionData.from = this.address;\n    this.transactionData.to =\n      configNetworkTypes.network[this.network.type.name].batchContract;\n    this.web3.eth\n      .sendTransaction(this.transactionData)\n      .on('transactionHash', res => {\n        this.pendingTxHash = res;\n      })\n      .on('receipt', () => {\n        this.txReceipt = true;\n      })\n      .catch(err => {\n        const error = handleError(err);\n        if (error) Toast(err, {}, ERROR);\n      });\n  }\n  /**\n   * @returns BigNumber\n   * Converts the unit to ETH1 from ETH2\n   */\n  convertToEth1(balance) {\n    return new BigNumber(balance).div(new BigNumber(10).pow(9));\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheStakedLayout.vue?vue&type=style&index=0&id=75579cc4&prod&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/eth-dark-navy.ad11058d.svg\";","export default {\n  network: {\n    GOERLI: {\n      depositAddress: '0xff50ed3d0ec03aC01D4C79aAd74928BFF48a7b2b',\n      endpoint: 'https://stakedtest.mewapi.io',\n      batchContract: '0xb483b22ee2097ee081fb2ce7aefcc776889f11a9',\n      url: 'https://goerli.beaconcha.in/validator/',\n      etherscanTxUrl: 'https://goerli.etherscan.io/tx/',\n      etherscanAddrUrl: 'https://goerli.etherscan.io/address/'\n    },\n    ETH: {\n      depositAddress: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n      endpoint: 'https://staked.mewapi.io',\n      batchContract: '0xF243A92eB7D4B4F6A00A57888B887bd01ec6fd12',\n      url: 'https://beaconcha.in/validator/',\n      etherscanTxUrl: 'https://etherscan.io/tx/',\n      ethvmTxUrl: 'https://www.ethvm.com/tx/',\n      etherscanAddrUrl: 'https://etherscan.io/address/',\n      ethvmAddrUrl: 'https://www.ethvm.com/address/'\n    }\n  }\n};\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StakedStatus.vue?vue&type=style&index=0&id=515143c8&prod&lang=scss&scoped=true&\""],"sourceRoot":""}